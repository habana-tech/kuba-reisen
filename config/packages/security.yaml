security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
            cost: 12

    role_hierarchy:
        ROLE_EDITOR:      ROLE_USER
        ROLE_ADMIN:       ROLE_EDITOR
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        chain_provider:
            chain:
                providers: [in_memory, fos_userbundle]

        in_memory:
            memory:
                users:
                    habanatechsupervisor:
                        password: $2y$12$zzpuK8GGQin.LeEDnisWOOnEcK2VBHO3z8ssTJbUXLsk4.iK4kGGC
                        roles: ['ROLE_USER', 'ROLE_ADMIN', 'ROLE_SUPERVISOR']

        fos_userbundle:
            id: "fos_user.user_provider.username"


    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            form_login:
            provider: chain_provider
            logout: true
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/services/, role: ROLE_USER }
        - { path: ^/admin/, role: ROLE_ADMIN }
        - { path: ^/efconnect, role: ROLE_ADMIN }
        - { path: ^/elfinder, role: ROLE_ADMIN }
