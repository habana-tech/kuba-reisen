.hero {
  overflow: hidden;
  height: 100vh;
  position: relative;
  display: flex;
  align-items: center;
}

.hero__image {
  position: relative;
  height: 100vh;
  width: 100vw;
}

.hero__image__water {
  height: 100%;
  width: 100%;
}

.hero__image__water__base {
  position: relative;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

.hero__image__water__sea, .hero__image__water__wave, .hero__image__water__clouds {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

.hero__image__water__sea {
  filter: url("#sea");
}

.hero__image__water__wave {
  filter: url("#wave");
}

.hero__image__water__clouds {
  filter: url("#clouds");
}

.hero__content {
  position: absolute;
  width: 90%;
  margin: 1em;
  color: #ffffff;
  z-index: 1;
}

@media (min-width: 1200px) {
  .hero__content {
    width: 50%;
    margin: 2em;
  }
}

.hero__content__text {
  font-size: 2em;
}

.hero__content__text::first-letter {
  font-size: inherit;
  text-transform: none;
}

.hero__buttom-links {
  display: none;
}

@media (min-width: 1200px) {
  .hero__buttom-links {
    display: flex;
    position: absolute;
    bottom: 0;
    align-items: flex-end;
    justify-content: space-between;
    width: 54%;
    left: 27%;
    z-index: 1;
  }
}

@media (min-width: 1200px) {
  .hero__buttom-links__item {
    position: relative;
    transition: transform .3s ease-in-out;
    transform: translateY(calc( 100% - 3em));
  }
}

.hero__buttom-links__item a {
  color: white;
  font-family: "Baloo Bhaina", cursive;
}

@media (min-width: 1200px) {
  .hero__buttom-links__item:before {
    content: '';
    position: absolute;
    background-color: white;
    width: 2px;
    height: calc(100% - 2em);
    top: 2em;
  }
}

.hero__buttom-links__item__nav {
  left: -1.25em;
  position: relative;
  transition: opacity .3s ease-in-out;
  list-style: none;
  opacity: 0;
}

.hero__buttom-links__item--active {
  transform: translateY(calc( 0% + 1em));
}

.hero__buttom-links__item--active .hero__buttom-links__item__nav {
  opacity: 1;
}

.hero h1, .hero a {
  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.5);
}

.overview {
  display: flex;
  flex-wrap: wrap;
  background: white;
  z-index: 1;
  padding-top: 2px;
}

.overview__item {
  width: 100%;
  overflow: hidden;
  display: flex;
  align-items: center;
  max-height: 80vh;
  margin-left: 0;
  margin-bottom: 2px;
}

@media (min-width: 1200px) {
  .overview__item {
    width: calc(25% - 2px);
    margin-bottom: 0;
    margin-left: 2px;
  }
}

.overview__item:hover img {
  transform: scale(1.05);
}

.overview__item img {
  position: relative;
  transition: all .5s ease-in-out;
}

.overview__item__text {
  padding: 1em 1.5em;
}

.overview__item:first-child {
  flex-wrap: wrap;
  padding-left: 0;
}

.overview__item:first-child .section__title {
  padding: 0 1.5em;
}

.who_we_are {
  display: flex;
  flex-wrap: wrap;
  padding-top: 2px;
}

.who_we_are__image {
  width: 100%;
  overflow: hidden;
  order: 2;
  min-height: 50vh;
}

@media (min-width: 1200px) {
  .who_we_are__image {
    order: 1;
    width: 75%;
    min-height: auto;
  }
}

.who_we_are__image img {
  width: 100%;
  height: 100%;
}

.who_we_are__text {
  width: 100%;
  padding: 1em 1.5em;
  order: 1;
}

@media (min-width: 1200px) {
  .who_we_are__text {
    width: 25%;
    order: 2;
  }
}

.why_with_us {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin: auto;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  padding-bottom: 2em;
  padding-top: 2px;
}

.why_with_us__reasons {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  width: 95%;
}

@media (min-width: 1200px) {
  .why_with_us__reasons {
    width: 80%;
  }
}

.why_with_us__reasons h5 {
  margin: 0;
}

.why_with_us__reasons__reason {
  width: 45%;
  text-align: center;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/