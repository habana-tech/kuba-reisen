/* oriya */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBIg58qhE.woff2) format("woff2");
  unicode-range: U+0964-0965, U+0B01-0B77, U+200C-200D, U+20B9, U+25CC;
}

/* vietnamese */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBNA58qhE.woff2) format("woff2");
  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
}

/* latin-ext */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBNQ58qhE.woff2) format("woff2");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

/* latin */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBOw58.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

/* cyrillic-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFWJ0bbck.woff2) format("woff2");
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}

/* cyrillic */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFUZ0bbck.woff2) format("woff2");
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}

/* greek-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFWZ0bbck.woff2) format("woff2");
  unicode-range: U+1F00-1FFF;
}

/* greek */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFVp0bbck.woff2) format("woff2");
  unicode-range: U+0370-03FF;
}

/* vietnamese */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFWp0bbck.woff2) format("woff2");
  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
}

/* latin-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFW50bbck.woff2) format("woff2");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

/* latin */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFVZ0b.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

/* cyrillic-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOX-hpOqc.woff2) format("woff2");
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}

/* cyrillic */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOVuhpOqc.woff2) format("woff2");
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}

/* greek-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOXuhpOqc.woff2) format("woff2");
  unicode-range: U+1F00-1FFF;
}

/* greek */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOUehpOqc.woff2) format("woff2");
  unicode-range: U+0370-03FF;
}

/* vietnamese */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOXehpOqc.woff2) format("woff2");
  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
}

/* latin-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOXOhpOqc.woff2) format("woff2");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

/* latin */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOUuhp.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

/**
 * @section Normalize.css
 * Normalize.css base with custom code.
 * Additional normalize styles incorporated throughout components.
 * @link http://necolas.github.io/normalize.css/
 */
/**
 * Remove the tap delay in webkit
 * @link https://medium.com/@adactio/delay-a9df9edceef3#.7dmbl3xow
 */
a,
button,
input,
select,
textarea,
label,
summary {
  touch-action: manipulation;
}

/**
 * Add box sizing to everything
 * @link http://www.paulirish.com/2012/box-sizing-border-box-ftw/
 */
*,
*:before,
*:after {
  box-sizing: border-box;
}

/**
 * 1. Force scrollbar display to prevent jumping on pages.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  overflow-y: scroll;
  /* 1 */
  text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
cite,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/**
 * Correct `inline-block` display not defined in IE 8/9.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
}

/**
 * Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Prevent img and video elements from spilling outside of the page on smaller screens.
 */
img,
video {
  width: 100%;
  max-width: 100%;
  height: 100%;
  object-fit: cover;
}

/**
 * Prevent iframe, object, and embed elements from spilling outside of the page on smaller screens.
 * height: auto causes iframes to smush, so it's omitted here.
 */
iframe,
object,
embed {
  max-width: 100%;
}

/**
 * Hide the template element in IE, Safari, and Firefox < 22.
 */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Prevents IE from making scaled images look like crap
 */
img {
  border-style: none;
  /* 1 */
  -ms-interpolation-mode: bicubic;
  /* 2 */
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/**
 * Address inconsistent margin.
 */
figure {
  margin: 0;
}

/**
 * @workaround Remove focus from <main> element when using tabindex="-1" hack for skipnav link
 * @link https://code.google.com/p/chromium/issues/detail?id=37721
 */
[tabindex="-1"]:focus {
  outline: none;
}

/**
 * @section Grid
 * Structure and layout
 */
/**
 * Base grid styles: single column
 */
.container {
  margin-left: auto;
  margin-right: auto;
  max-width: 80em;
  width: 88%;
}

.row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  margin-left: -1.4%;
  margin-right: -1.4%;
}

.no-lat-margins {
  margin-left: 0 !important;
  margin-right: 0 !important;
}

/**
 * Alignment
 */
/* Float content to the top */
.row-top {
  align-items: flex-start;
}

/* Float content in the middle */
.row-middle {
  align-items: center;
}

/* Push content to the bottom */
.row-bottom {
  align-items: flex-end;
}

/* Move content to the start of the row */
.row-start {
  justify-content: flex-start;
}

/* Float content in the center of the row */
.row-center {
  justify-content: center;
}

/* Move content to the end of the row */
.row-end {
  justify-content: flex-end;
}

/* Add even spacing around each item */
.row-around {
  justify-content: space-around;
}

/* Add even spacing between items */
.row-between {
  justify-content: space-between;
}

/* Reverse content order */
.row-reverse {
  flex-direction: row-reverse;
}

.grid-tenth, .grid-p16, .grid-fifth, .grid-fourth, .grid-p28, .grid-three-tenth, .grid-third, .grid-four-tenth, .grid-half, .grid-two-thirds, .grid-three-fourths, .grid-full, .grid-auto {
  flex-basis: 100%;
  margin-left: 1.4%;
  margin-right: 1.4%;
}

/**
 * Add columns to grid on bigger screens
 */
@media (min-width: 20em) {
  .row.row-start-xsmall {
    flex-wrap: nowrap;
  }
  .row-wrap.row-start-xsmall {
    flex-wrap: wrap;
  }
  .row-wrap.row-start-xsmall .grid-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-p16 {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-fifth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-fourth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-p28 {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-three-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-third {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-four-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-half {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-two-thirds {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-three-fourths {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-full {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-auto {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-start-xsmall .grid-auto {
    flex-basis: auto;
    flex-grow: 1;
  }
  .row-start-xsmall .grid-tenth {
    flex-basis: 10%;
    max-width: 10%;
  }
  .row-start-xsmall .grid-p16 {
    flex-basis: 16%;
    max-width: 16%;
  }
  .row-start-xsmall .grid-fifth {
    flex-basis: 20%;
    max-width: 20%;
  }
  .row-start-xsmall .grid-fourth {
    flex-basis: 25%;
    max-width: 25%;
  }
  .row-start-xsmall .grid-p28 {
    flex-basis: 28%;
    max-width: 28%;
  }
  .row-start-xsmall .grid-three-tenth {
    flex-basis: 30%;
    max-width: 30%;
  }
  .row-start-xsmall .grid-third {
    flex-basis: 33.33333%;
    max-width: 33.33333%;
  }
  .row-start-xsmall .grid-four-tenth {
    flex-basis: 40%;
    max-width: 40%;
  }
  .row-start-xsmall .grid-half {
    flex-basis: 50%;
    max-width: 50%;
  }
  .row-start-xsmall .grid-two-thirds {
    flex-basis: 66.66667%;
    max-width: 66.66667%;
  }
  .row-start-xsmall .grid-three-fourths {
    flex-basis: 75%;
    max-width: 75%;
  }
  .row-start-xsmall .grid-full {
    flex-basis: 100%;
    max-width: 100%;
  }
  .row-start-xsmall .grid-first {
    -webkit-box-ordinal-group: 0;
    order: -1;
  }
  .row-start-xsmall .grid-last {
    -webkit-box-ordinal-group: 2;
    order: 1;
  }
}

@media (min-width: 30em) {
  .row.row-start-small {
    flex-wrap: nowrap;
  }
  .row-wrap.row-start-small {
    flex-wrap: wrap;
  }
  .row-wrap.row-start-small .grid-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-p16 {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-fifth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-fourth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-p28 {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-three-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-third {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-four-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-half {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-two-thirds {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-three-fourths {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-full {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-auto {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-start-small .grid-auto {
    flex-basis: auto;
    flex-grow: 1;
  }
  .row-start-small .grid-tenth {
    flex-basis: 10%;
    max-width: 10%;
  }
  .row-start-small .grid-p16 {
    flex-basis: 16%;
    max-width: 16%;
  }
  .row-start-small .grid-fifth {
    flex-basis: 20%;
    max-width: 20%;
  }
  .row-start-small .grid-fourth {
    flex-basis: 25%;
    max-width: 25%;
  }
  .row-start-small .grid-p28 {
    flex-basis: 28%;
    max-width: 28%;
  }
  .row-start-small .grid-three-tenth {
    flex-basis: 30%;
    max-width: 30%;
  }
  .row-start-small .grid-third {
    flex-basis: 33.33333%;
    max-width: 33.33333%;
  }
  .row-start-small .grid-four-tenth {
    flex-basis: 40%;
    max-width: 40%;
  }
  .row-start-small .grid-half {
    flex-basis: 50%;
    max-width: 50%;
  }
  .row-start-small .grid-two-thirds {
    flex-basis: 66.66667%;
    max-width: 66.66667%;
  }
  .row-start-small .grid-three-fourths {
    flex-basis: 75%;
    max-width: 75%;
  }
  .row-start-small .grid-full {
    flex-basis: 100%;
    max-width: 100%;
  }
  .row-start-small .grid-first {
    -webkit-box-ordinal-group: 0;
    order: -1;
  }
  .row-start-small .grid-last {
    -webkit-box-ordinal-group: 2;
    order: 1;
  }
}

@media (min-width: 40em) {
  .row {
    flex-wrap: nowrap;
  }
  .row-wrap {
    flex-wrap: wrap;
  }
  .row-wrap .grid-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-p16 {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-fifth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-fourth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-p28 {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-three-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-third {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-four-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-half {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-two-thirds {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-three-fourths {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-full {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-auto {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .grid-auto {
    flex-basis: auto;
    flex-grow: 1;
  }
  .grid-tenth {
    flex-basis: 10%;
    max-width: 10%;
  }
  .grid-p16 {
    flex-basis: 16%;
    max-width: 16%;
  }
  .grid-fifth {
    flex-basis: 20%;
    max-width: 20%;
  }
  .grid-fourth {
    flex-basis: 25%;
    max-width: 25%;
  }
  .grid-p28 {
    flex-basis: 28%;
    max-width: 28%;
  }
  .grid-three-tenth {
    flex-basis: 30%;
    max-width: 30%;
  }
  .grid-third {
    flex-basis: 33.33333%;
    max-width: 33.33333%;
  }
  .grid-four-tenth {
    flex-basis: 40%;
    max-width: 40%;
  }
  .grid-half {
    flex-basis: 50%;
    max-width: 50%;
  }
  .grid-two-thirds {
    flex-basis: 66.66667%;
    max-width: 66.66667%;
  }
  .grid-three-fourths {
    flex-basis: 75%;
    max-width: 75%;
  }
  .grid-full {
    flex-basis: 100%;
    max-width: 100%;
  }
  .offset-tenth {
    margin-left: 10%;
  }
  .offset-p16 {
    margin-left: 16%;
  }
  .offset-fifth {
    margin-left: 20%;
  }
  .offset-fourth {
    margin-left: 25%;
  }
  .offset-p28 {
    margin-left: 28%;
  }
  .offset-three-tenth {
    margin-left: 30%;
  }
  .offset-third {
    margin-left: 33.33333%;
  }
  .offset-four-tenth {
    margin-left: 40%;
  }
  .offset-half {
    margin-left: 50%;
  }
  .offset-two-thirds {
    margin-left: 66.66667%;
  }
  .offset-three-fourths {
    margin-left: 75%;
  }
  .offset-full {
    margin-left: 100%;
  }
  .grid-first {
    -webkit-box-ordinal-group: 0;
    order: -1;
  }
  .grid-last {
    -webkit-box-ordinal-group: 2;
    order: 1;
  }
}

/**
 * @section Typography
 * Sets font styles for entire site
 */
*::selection {
  background-color: rgba(53, 207, 212, 0.3);
}

body {
  background: white;
  color: #666;
  font-family: "Open Sans", sans-serif;
  font-size: 100%;
  line-height: 1.5;
}

@media (min-width: 40em) {
  body {
    line-height: 1.5625;
  }
}

main {
  background: white;
}

p {
  margin: 0 0 1.5625em;
}

.underline {
  text-decoration: underline;
}

/**
 * Hyperlink styling
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  color: #666;
  background-color: transparent;
  /* 1 */
  text-decoration: none;
  text-decoration-skip: objects;
  /* 2 */
  word-wrap: break-word;
  /**
	 * Improve readability when focused and also mouse hovered in all browsers.
	 */
}

a:active, a:hover {
  outline: 0;
}

/**
 * List styling
 */
ul,
ol {
  margin: 0 0 1.5625em 2em;
  padding: 0;
}

ul ul,
ul ol,
ol ol,
ol ul {
  margin-bottom: 0;
}

dl,
dd {
  margin: 0;
  padding: 0;
}

dd {
  margin-bottom: 1.5625em;
}

dt {
  font-weight: bold;
}

/**
 * @bugfix Prevent webkit from removing list semantics
 * 1. Add a non-breaking space
 * 2. Make sure it doesn't mess up the DOM flow
 */
.list-unstyled, .list-inline {
  list-style: none;
}

.list-unstyled > li:before, .list-inline > li:before {
  content: "\200B";
  /* 1 */
  position: absolute;
  /* 2 */
}

/**
 * Removes list styling.
 * For semantic reasons, should only be used on unordered lists.
 */
.list-unstyled {
  margin-left: 0;
}

/**
 * Display lists on a single line.
 */
.list-inline {
  margin-left: -0.5em;
  margin-right: -0.5em;
  padding: 0;
}

.list-inline > li {
  display: inline-block;
  margin-left: 0.5em;
  margin-right: 0.5em;
}

/**
 * Heading styling for h1 through h6 elements.
 * Heading class lets you use one heading type for semantics, but style it as another heading type.
 */
h1, h2, h3, h4, h5, h6 {
  font-weight: normal;
  line-height: 1.2;
  margin: 0 0 1em;
  padding: 1em 0 0;
  word-wrap: break-word;
  font-family: "Baloo Bhaina", cursive;
}

h1,
.h1 {
  font-size: 1.5em;
  padding-top: .5em;
  font-family: "Baloo Bhaina", cursive;
}

@media (min-width: 40em) {
  h1,
  .h1 {
    font-size: 1.75em;
  }
}

h2,
.h2 {
  font-size: 1.3125em;
}

h3,
.h3 {
  font-size: 1.1875em;
}

h4, h5, h6,
.h4, .h5, .h6 {
  font-size: 1em;
}

h4,
.h4 {
  text-transform: uppercase;
}

/**
 * Lines, Quotes and Emphasis
 */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  border: 0;
  border-top: 1px solid #e5e5e5;
  border-bottom: 0 solid transparent;
  box-sizing: content-box;
  /* 1 */
  margin: 2em auto;
  overflow: visible;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #fbf9c9;
  color: #000000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/**
 * Blockquotes
 */
blockquote {
  font-size: 1.1875em;
  font-style: italic;
  margin: 0 0 1.5625em;
  padding-left: 0.8421052632em;
  padding-right: 0.8421052632em;
}

blockquote cite {
  color: #666666;
  font-size: 0.8421052632em;
  padding-top: 1em;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
}

/**
 * @section Code
 * Styling for code and preformatted text.
 */
code,
kbd,
pre,
samp {
  font-family: "Open Sans", monospace;
  font-size: 0.875em;
}

code {
  background-color: #f7f7f7;
  color: #dd1144;
  padding: 0.25em;
  word-wrap: break-word;
}

pre {
  background-color: #f4f4f4;
  display: block;
  line-height: 1.5;
  margin-bottom: 1.5625em;
  overflow: auto;
  padding: 0.8125em;
  tab-size: 4;
  white-space: pre-wrap;
  word-break: break-all;
}

pre code {
  background-color: transparent;
  border: 0;
  color: inherit;
  font-size: 1em;
  padding: 0;
}

/**
 * @section Buttons
 * Styling for CSS buttons.
 */
/**
 * Primary buttons
 */
.btn {
  background-image: linear-gradient(to right, rgba(53, 207, 212, 0.9), rgba(20, 161, 230, 0.9));
  background-size: 200%;
  border: 2px white solid;
  border-radius: 2px;
  color: white;
  font-size: 1em;
  font-weight: 700;
  padding: .5em 1em;
  text-decoration: none;
  white-space: normal;
  transition: .5s;
  cursor: pointer;
  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);
}

.btn:hover, .btn:active {
  background-position: right center;
  text-decoration: none;
  color: white;
}

.btn--big {
  padding: .7em 1.25em;
  font-size: 1.25em;
}

.btn--transparent {
  background-image: linear-gradient(to right, transparent 50%, rgba(53, 207, 212, 0.9), rgba(20, 161, 230, 0.9));
}

.btn--transparent:hover {
  background-position: right center;
}

.btn--green {
  background-image: linear-gradient(to right, #62ab03 50%, rgba(98, 171, 3, 0.9), rgba(0, 77, 0, 0.9));
}

.btn--green:hover {
  background-position: right center;
}

.btn--small {
  padding: .25em .5em;
  font-weight: 500;
}

/**
 * @section Forms
 * Styling for form elements.
 */
form,
fieldset {
  margin-bottom: 1.5625em;
}

fieldset {
  border: 0;
  padding: 0;
}

legend,
label {
  display: block;
  font-weight: normal;
  margin: 0 0 0.3125em;
  padding: 0;
}

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: #2e2e2e;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
  padding: 0.3125em;
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

input,
textarea,
select {
  display: block;
  line-height: 1.5;
  margin-bottom: 1.1875em;
  width: 100%;
  padding: .25em .5em;
  background: white;
  border: 2px solid #35cfd4;
}

@media (min-width: 40em) {
  input,
  textarea,
  select {
    line-height: 1.5625;
  }
}

input[type="submit"] {
  width: auto;
  margin: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

form button,
form .button {
  margin-bottom: 1.1875em;
}

textarea {
  height: 12em;
  overflow: auto;
}

[type="image"],
[type="checkbox"],
[type="radio"] {
  cursor: pointer;
  display: inline-block;
  height: auto;
  margin-bottom: 0.3125em;
  padding: 0;
  width: auto;
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

input:focus,
select:focus,
textarea:focus {
  border-color: rgba(82, 168, 236, 0.8);
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 0.5em rgba(82, 168, 236, 0.6);
  outline: 0;
  outline: thin dotted \9;
}

[type="file"]:focus,
[type="checkbox"]:focus,
select:focus {
  outline: thin dotted;
  outline: 0.3125em auto -webkit-focus-ring-color;
  outline-offset: -0.125em;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/**
 * Inline inputs
 */
.input-inline {
  display: inline-block;
  vertical-align: middle;
  width: auto;
}

/**
 * Condensed inputs
 */
.input-condensed {
  padding: 1px 0.3125em;
  font-size: 0.9375em;
}

/**
 * Search
 */
/**
  * 1. Correct the odd appearance in Chrome and Safari.
  * 2. Correct the outline style in Safari.
  */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Create rounded search bar
 */
.input-search {
  width: 85%;
  padding-left: 0.9375em;
  padding-right: 2.5em;
  border-radius: 1.3125em;
  transition: width 300ms ease-in;
}

@media (min-width: 40em) {
  .input-search {
    width: 65%;
  }
}

/**
 * Special styling for search icon as button
 */
.btn-search {
  display: inline;
  color: #666666;
  border: none;
  background: none;
  margin-left: -2.5em;
  margin-bottom: 0;
}

.btn-search .icon {
  fill: #666666;
}

.btn-search:hover {
  color: #404040;
}

.btn-search:hover .icon {
  fill: #404040;
}

/**
 * @section Tables
 * Styling for tables
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
  margin-bottom: 1.5625em;
  max-width: 100%;
  width: 100%;
}

th,
td {
  text-align: left;
  padding: 0.5em;
}

th {
  border-bottom: 0.125em solid #e5e5e5;
  font-weight: bold;
  vertical-align: bottom;
}

td {
  border-top: 1px solid #e5e5e5;
  vertical-align: top;
}

/**
 * Adds zebra striping
 */
.table-striped tbody tr:nth-child(odd) {
  background-color: #f7f7f7;
}

/**
 * Reduces padding on condensed tables
 */
.table-condensed th,
.table-condensed td {
  padding: 0.25em;
}

/* Import add-ons here... */
/**
 * @section Overrides
 * Nudge and tweak alignment, spacing, and visibility.
 */
/**
 * Text sizes
 */
.text-small {
  font-size: 0.9375em;
}

.text-large {
  font-size: 1.1875em;
  line-height: 1.4;
}

@media (min-width: 40em) {
  .text-large {
    font-size: 1.3125em;
  }
}

/**
 * Text colors
 */
.text-muted {
  color: #666666;
}

/**
 * Text alignment
 */
.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-left {
  text-align: left;
}

@media (min-width: 40em) {
  .text-right-medium {
    text-align: right;
  }
}

/**
 * Floats
 */
.float-left {
  float: left;
}

.float-center {
  float: none;
  margin-left: auto;
  margin-right: auto;
}

.float-right {
  float: right;
}

/**
 * Margins
 */
.no-margin-top {
  margin-top: 0;
}

.no-margin-bottom {
  margin-bottom: 0;
}

.margin-top {
  margin-top: 1.5625em;
}

.margin-bottom {
  margin-bottom: 1.5625em;
}

.margin-bottom-small {
  margin-bottom: 0.5em;
}

.margin-bottom-large {
  margin-bottom: 2em;
}

/**
 * Padding
 */
.no-padding-top {
  padding-top: 0;
}

.no-padding-bottom {
  padding-bottom: 0;
}

.padding-top {
  padding-top: 1.5625em;
}

.padding-top-small {
  padding-top: 0.5em;
}

.padding-top-large {
  padding-top: 4em;
}

.padding-bottom {
  padding-bottom: 1.5625em;
}

.padding-bottom-small {
  padding-bottom: 0.5em;
}

.padding-bottom-large {
  padding-bottom: 2em;
}

/**
 * Visibility
 */
/*
 * Hide only visually, but have it available for screen readers:
 * @link https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  /* 1 */
  width: 1px;
}

.soft-hidden {
  visibility: hidden;
}

/*
 * Extends the .visuallyhidden class to allow the element to be focusable when navigated to via the keyboard
 * @link https://www.drupal.org/node/897638
 */
.visually-hidden.focusable:active,
.visually-hidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/**
 * @workaround
 * @affected IE 8/9/10
 * @link http://juicystudio.com/article/screen-readers-display-none.php
 */
[hidden], template {
  display: none;
  visibility: hidden;
}

/**
 * Contain floats
 * The space content is one way to avoid an Opera bug when the `contenteditable` attribute is included anywhere else in the document.
 * @link https://github.com/h5bp/html5-boilerplate/blob/master/dist/css/main.css
 */
.clearfix:before, .container:before,
.clearfix:after,
.container:after {
  display: table;
  content: " ";
}


.clearfix:after,
.container:after {
  clear: both;
}

/**
 * @section Print
 * Styling for printed content. Adapted from HTML5BP.
 * @link http://html5boilerplate.com
 */
@media print {
  /**
	 * Universal selector.
	 * Reset all content to transparent background, black color, and remove box and text shadows.
	 */
  * {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  /**
	 * Specifies page margin
	 */
  @page {
    margin: 0.5cm;
  }
  /**
	 * Underline all links
	 */
  a,
  a:visited {
    text-decoration: underline;
  }
  /**
	 * Show URL after links
	 */
  a[href]:after {
    content: " (" attr(href) ")";
  }
  /**
	 * Don't show URL for internal links
	 */
  a[href^="#"]:after {
    content: "";
  }
  /**
	 * Specifies the minimum number of lines to print at the top and bottom of a page.
	 */
  p,
  h1, h2, h3 {
    orphans: 3;
    widows: 3;
  }
  /**
	 * Avoid inserting a page break after headers
	 */
  h1, h2, h3 {
    page-break-after: avoid;
  }
  /**
	 * Change border color on blockquotes and preformatted text.
	 * Avoid page breaks inside the content
	 */
  pre,
  blockquote {
    border-color: #999;
    page-break-inside: avoid;
  }
  /**
	 * Displayed as a table header row group
	 */
  thead {
    display: table-header-group;
  }
  /**
	 * Avoid inserting a page break inside table rows and images
	 */
  tr,
  img {
    page-break-inside: avoid;
  }
}

/* oriya */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBIg58qhE.woff2) format("woff2");
  unicode-range: U+0964-0965, U+0B01-0B77, U+200C-200D, U+20B9, U+25CC;
}

/* vietnamese */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBNA58qhE.woff2) format("woff2");
  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
}

/* latin-ext */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBNQ58qhE.woff2) format("woff2");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

/* latin */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBOw58.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

/* cyrillic-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFWJ0bbck.woff2) format("woff2");
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}

/* cyrillic */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFUZ0bbck.woff2) format("woff2");
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}

/* greek-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFWZ0bbck.woff2) format("woff2");
  unicode-range: U+1F00-1FFF;
}

/* greek */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFVp0bbck.woff2) format("woff2");
  unicode-range: U+0370-03FF;
}

/* vietnamese */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFWp0bbck.woff2) format("woff2");
  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
}

/* latin-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFW50bbck.woff2) format("woff2");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

/* latin */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFVZ0b.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

/* cyrillic-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOX-hpOqc.woff2) format("woff2");
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}

/* cyrillic */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOVuhpOqc.woff2) format("woff2");
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}

/* greek-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOXuhpOqc.woff2) format("woff2");
  unicode-range: U+1F00-1FFF;
}

/* greek */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOUehpOqc.woff2) format("woff2");
  unicode-range: U+0370-03FF;
}

/* vietnamese */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOXehpOqc.woff2) format("woff2");
  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
}

/* latin-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOXOhpOqc.woff2) format("woff2");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

/* latin */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOUuhp.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

*::selection {
  background-color: rgba(53, 207, 212, 0.3);
}

body {
  position: relative;
}

svg.filter {
  position: absolute;
  z-index: -1;
  visibility: hidden;
}

.icon {
  display: block;
  width: 100%;
  height: 100%;
  transition: all .3s ease-in-out;
}

.heart #heart_border {
  fill: white;
}

.heart #heart_inside {
  fill: transparent;
}

.heart--fill-green #heart_inside {
  fill: #004d00;
}

.heart--fill-white #heart_inside {
  fill: white;
}

.heart--inverse #heart_border {
  fill: #62ab03;
}

.heart--inverse.heart--fill-white #heart_inside {
  fill: #62ab03;
}

.arrow {
  cursor: pointer;
}

.arrow--rotate {
  transform: rotate(180deg);
}

/* --------------------------------

Title: Radio Switch
Descr: Custom radio toggle

-------------------------------- */
:root {
  --radio-switch-width: 186px;
  --radio-switch-height: 46px;
  --radio-switch-padding: 3px;
  --radio-switch-radius: 50em;
  --radio-switch-animation-duration: 0.3s;
}

.radio-switch {
  position: relative;
  display: inline-block;
  display: inline-flex;
  padding: var(--radio-switch-padding);
  border-radius: calc(var(--radio-switch-radius) * 1.4);
  border: 1px solid #e5e5e5;
}

.radio-switch:focus-within, .radio-switch:active {
  box-shadow: 0 0 0 1px #e5e5e5;
}

.radio-switch__item {
  position: relative;
  display: inline-block;
  height: calc(var(--radio-switch-height) - 2*var(--radio-switch-padding));
  width: calc(var(--radio-switch-width)*0.5 -  var(--radio-switch-padding));
}

.radio-switch__label {
  position: relative;
  z-index: 2;
  display: block;
  border-radius: var(--radio-switch-radius);
  line-height: calc(var(--radio-switch-height) - 2*var(--radio-switch-padding));
  text-align: center;
  cursor: pointer;
  font-size: var(--text-sm);
  user-select: none;
  transition: all var(--radio-switch-animation-duration);
}

.radio-switch__input:checked ~ .radio-switch__label {
  color: #ffffff;
}

.radio-switch__input:focus ~ .radio-switch__label {
  background-color: #14a3e9;
}

.radio-switch__label :not(*):focus-within,
.radio-switch__input:focus ~ .radio-switch__label {
  background-color: transparent;
}

.radio-switch__marker {
  position: absolute;
  z-index: 1;
  top: 0;
  left: -100%;
  border-radius: var(--radio-switch-radius);
  background: linear-gradient(45deg, #35cfd4, #14a1e6);
  height: calc(var(--radio-switch-height) - 2*var(--radio-switch-padding));
  width: calc(var(--radio-switch-width)*0.5 -  var(--radio-switch-padding));
  transition: transform var(--radio-switch-animation-duration);
}

.radio-switch__input:checked ~ .radio-switch__marker {
  transform: translateX(100%);
}

.cookie {
  position: fixed;
  display: flex;
  flex-wrap: wrap;
  bottom: 1em;
  left: 2em;
  width: 80%;
  background: white;
  border-radius: 2px;
  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);
  z-index: 4;
}

@media (min-width: 1200px) {
  .cookie {
    bottom: 2em;
    width: 30%;
  }
}

@keyframes collapse {
  0% {
    overflow: visible;
    width: 80%;
    height: auto;
    z-index: 4;
    opacity: 1;
  }
  100% {
    overflow: visible;
    width: 80%;
    height: auto;
    z-index: 4;
    opacity: 0;
  }
}

@keyframes collapseLarge {
  0% {
    overflow: visible;
    width: 30%;
    height: auto;
    z-index: 4;
    opacity: 1;
  }
  100% {
    overflow: visible;
    width: 30%;
    height: auto;
    z-index: 4;
    opacity: 0;
  }
}

.cookie--no-visible {
  animation: collapse .3s ease-in-out 1;
  overflow: hidden;
  width: 0;
  height: 0;
}

@media (min-width: 1200px) {
  .cookie--no-visible {
    animation: collapseLarge .3s ease-in-out 1;
  }
}

.cookie__img {
  position: absolute;
  top: -2em;
  left: -2em;
  margin: auto;
  width: 4em;
  height: 4em;
}

.cookie__message {
  width: 100%;
  margin: 1em 2em .5em;
}

.cookie__message h1, .cookie__message p {
  margin-bottom: .25em;
}

.cookie__btn {
  width: 100%;
  margin-bottom: .5em;
  display: flex;
  justify-content: center;
}

.cookie-overlay {
  position: fixed;
  z-index: 3;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.75);
}

@keyframes hidden {
  0% {
    height: 100%;
    width: 100%;
    background-color: rgba(0, 0, 0, 0.75);
    z-index: 3;
  }
  100% {
    height: 100%;
    width: 100%;
    background-color: rgba(0, 0, 0, 0);
    z-index: 3;
  }
}

.cookie-overlay--no-visible {
  animation: hidden .3s ease-in-out 1;
  z-index: -1;
  width: 0;
  height: 0;
}

.blur-up {
  filter: blur(8px);
  transition: filter 600ms;
}

.blur-up.lazyloading {
  filter: blur(5px);
}

.blur-up.lazyloaded {
  filter: blur(0);
}

.form {
  width: 95%;
  margin: auto;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

@media (min-width: 1200px) {
  .form {
    width: 80%;
  }
}

.form__item {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.form__item__label {
  width: 100%;
  margin: 0 1em;
  padding: .5em 0;
  justify-content: center;
  display: flex;
}

@media (min-width: 1200px) {
  .form__item__label {
    width: 30%;
    margin: 0 2em;
    justify-content: left;
  }
}

.form__item__input {
  width: 90%;
}

@media (min-width: 1200px) {
  .form__item__input {
    width: 40%;
  }
}

.header {
  position: fixed;
  width: 98%;
  margin: 0 1%;
  display: flex;
  justify-content: space-between;
  z-index: 3;
  border-bottom-left-radius: 3px;
  border-bottom-right-radius: 3px;
}

.header__logo {
  margin: .25em 1em;
  z-index: 3;
}

.header__logo img {
  height: 3em;
  width: auto;
}

.header__nav {
  display: flex;
  flex-wrap: wrap;
  position: absolute;
  width: 100%;
  background: linear-gradient(to top, rgba(20, 161, 230, 0.8), #14a1e6, #23b6de);
  z-index: 2;
  border-radius: 0 0 2px 2px;
  color: white;
  top: 3.5em;
  transform: rotateX(-100deg);
  transform-origin: top;
  opacity: 0;
}

.header__nav__menu {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  width: 100%;
  padding: 0 2.5%;
}

@media (min-width: 1200px) {
  .header__nav__menu {
    padding: 0 5%;
  }
}

.header__nav__menu__column {
  width: 50%;
  position: relative;
  text-align: center;
}

@media (min-width: 1200px) {
  .header__nav__menu__column {
    width: 24%;
    text-align: left;
  }
  .header__nav__menu__column::after {
    content: '';
    position: absolute;
    background-color: white;
    height: 50%;
    width: 1px;
    right: 0;
    top: 25%;
  }
  .header__nav__menu__column:last-child::after {
    display: none;
  }
  .header__nav__menu__column:last-child {
    margin-top: 2em;
  }
}

.header__nav__menu__column:nth-child(1) {
  order: 1;
}

.header__nav__menu__column:nth-child(2) {
  order: 2;
}

@media (min-width: 1200px) {
  .header__nav__menu__column:nth-child(2) {
    order: 3;
  }
}

.header__nav__menu__column:nth-child(3) {
  order: 3;
}

@media (min-width: 1200px) {
  .header__nav__menu__column:nth-child(3) {
    order: 2;
  }
}

.header__nav__menu__column:nth-child(4) {
  order: 4;
}

.header__nav__menu__column__title a {
  color: white;
  margin: 0;
}

@media (min-width: 1200px) {
  .header__nav__menu__column__title a {
    margin: 0 0 1em;
  }
}

.header__nav__menu__column__list {
  list-style: none;
  margin: 0 0 0 1em;
}

.header__nav__menu__column__list__link {
  margin: .5em auto;
}

.header__nav__menu__column__list__link a {
  color: white;
}

.header__nav__menu__column__list__link span {
  padding: 3px;
  border-radius: 5px;
  margin-left: .8em;
  font-size: 80%;
  background: linear-gradient(#f9c90d, #f96e10);
}

.header__menu-icon .menu-icon-wrapper {
  margin: 1em 2em;
}

.headroom {
  background: linear-gradient(to top, #35cfd4, #14a1e6);
  background-size: 100% 200%;
  transition: all .3s ease-in-out;
  transition-delay: .3s;
  background-position: 100% 200%;
  background-repeat: no-repeat;
}

.headroom--pinned .headroom--top {
  position: relative;
  background-position: 100% 200%;
}

.headroom--pinned {
  position: fixed;
  transform: translateY(0%);
}

.headroom--unpinned {
  position: fixed;
  transform: translateY(-100%);
}

.header--pinned, .headroom--not-top.headroom--pinned {
  background-position: 100% 0;
}

/* Menu icon styles */
.menu-icon-wrapper {
  position: relative;
  display: inline-block;
  width: 34px;
  height: 34px;
  margin: 2em;
  pointer-events: none;
  transition: 0.1s;
}

.menu-icon-wrapper svg {
  position: absolute;
  top: -33px;
  left: -33px;
  -webkit-transform: scale(0.1);
  -ms-transform: scale(0.1);
  transform: scale(0.1);
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.menu-icon-wrapper svg path {
  stroke: #fff;
  stroke-width: 30px;
  stroke-linecap: round;
  stroke-linejoin: round;
  fill: transparent;
}

.menu-icon-wrapper .menu-icon-trigger {
  position: relative;
  width: 100%;
  height: 100%;
  cursor: pointer;
  pointer-events: auto;
  background: none;
  border: none;
  margin: 0;
  padding: 0;
}

.menu-icon-wrapper .menu-icon-trigger:hover,
.menu-icon-wrapper .menu-icon-trigger:focus {
  outline: none;
}

.menu-icon-wrapper {
  right: 0;
  top: 0;
  position: fixed;
  z-index: 100;
}

/* ----------------------------------------------
 * Generated by Animista on 2019-6-6 16:43:40
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */
/**
 * ----------------------------------------
 * animation swing-in-top-bck
 * ----------------------------------------
 */
@-webkit-keyframes swing-in-top-bck {
  0% {
    -webkit-transform: rotateX(70deg);
    transform: rotateX(70deg);
    -webkit-transform-origin: top;
    transform-origin: top;
    opacity: 0;
  }
  100% {
    -webkit-transform: rotateX(0deg);
    transform: rotateX(0deg);
    -webkit-transform-origin: top;
    transform-origin: top;
    opacity: 1;
  }
}

@keyframes swing-in-top-bck {
  0% {
    -webkit-transform: rotateX(70deg);
    transform: rotateX(70deg);
    -webkit-transform-origin: top;
    transform-origin: top;
    opacity: 0;
  }
  100% {
    -webkit-transform: rotateX(0deg);
    transform: rotateX(0deg);
    -webkit-transform-origin: top;
    transform-origin: top;
    opacity: 1;
  }
}

@-webkit-keyframes swing-out-top-bck {
  0% {
    -webkit-transform: rotateX(0deg);
    transform: rotateX(0deg);
    -webkit-transform-origin: top;
    transform-origin: top;
    opacity: 1;
  }
  100% {
    -webkit-transform: rotateX(-100deg);
    transform: rotateX(-100deg);
    -webkit-transform-origin: top;
    transform-origin: top;
    opacity: 0;
  }
}

@keyframes swing-out-top-bck {
  0% {
    -webkit-transform: rotateX(0deg);
    transform: rotateX(0deg);
    -webkit-transform-origin: top;
    transform-origin: top;
    opacity: 1;
  }
  100% {
    -webkit-transform: rotateX(-100deg);
    transform: rotateX(-100deg);
    -webkit-transform-origin: top;
    transform-origin: top;
    opacity: 0;
  }
}

.swing-in-top-bck {
  animation: swing-in-top-bck 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;
  animation-delay: .6s;
}

.swing-out-top-bck {
  animation: swing-out-top-bck 0.25s cubic-bezier(0.6, -0.28, 0.735, 0.045) both;
}

.hero {
  height: 75vh;
  overflow: hidden;
  position: relative;
  display: flex;
  align-items: center;
}

.hero__image {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.hero__image img {
  width: 100%;
  height: 100%;
}

.hero__content {
  width: 90%;
  margin: 2em;
  z-index: 1;
  position: relative;
  color: #ffffff;
}

@media (min-width: 1200px) {
  .hero__content {
    width: 50%;
  }
}

.hero__content__text {
  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.4);
}

@media (min-width: 1200px) {
  .hero__content__text {
    font-size: 3em;
  }
}

.banner_sky {
  height: 75vh;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

.banner_sky__image {
  position: absolute;
  width: 100%;
  height: 100%;
}

.banner_sky__content {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.banner_sky__content__titles {
  text-align: center;
  width: 100%;
  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.25);
}

.banner_sky__content__titles h2, .banner_sky__content__titles h3 {
  color: white;
  margin: .5em;
  padding: 0;
}

.banner_sky__content__titles h2 {
  font-size: 2.5em;
}

.banner_sky__content__titles h3 {
  font-size: 1.5em;
}

.section {
  width: 100%;
  position: relative;
  background-color: white;
}

.section__title {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  text-align: center;
}

.section__title__highlight {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: 600;
  flex-wrap: wrap;
}

@media (min-width: 1200px) {
  .section__title__highlight {
    flex-wrap: nowrap;
  }
}

.section__title__highlight h2 {
  font-size: 2.5em;
  margin: 0 0 .25em;
}

@media (min-width: 1200px) {
  .section__title__highlight h2 {
    margin: 0 0 1em;
  }
}

.section__title__highlight::before, .section__title__highlight::after {
  content: '';
  position: relative;
  height: 4px;
  border-radius: 2px;
  width: 70%;
  margin: 0 .5em;
}

@media (min-width: 1200px) {
  .section__title__highlight::before, .section__title__highlight::after {
    width: 8em;
  }
}

.section__title__highlight:before {
  background: linear-gradient(45deg, #35cfd4, #14a1e6);
  display: none;
}

@media (min-width: 1200px) {
  .section__title__highlight:before {
    display: block;
  }
}

.section__title__highlight::after {
  background: linear-gradient(-45deg, #35cfd4, #14a1e6);
}

.section__title__highlight p {
  width: 50%;
}

.section__title__highlight--orange:before {
  background: linear-gradient(45deg, #f9c90d, #f96e10);
}

.section__title__highlight--orange::after {
  background: linear-gradient(-45deg, #f9c90d, #f96e10);
}

.section__title__highlight--green:before {
  background: linear-gradient(45deg, #62ab03, #004d00);
}

.section__title__highlight--green::after {
  background: linear-gradient(-45deg, #62ab03, #004d00);
}

.section__title__highlight--no-decorator::before, .section__title__highlight--no-decorator::after {
  display: none;
}

.section__title__description {
  position: relative;
  top: 1em;
  width: 95%;
  text-align: center;
}

@media (min-width: 1200px) {
  .section__title__description {
    top: -2em;
    width: 50%;
  }
}

.divider {
  width: 100%;
  margin: 3em 0;
  display: flex;
  justify-content: center;
}

.divider::before {
  content: '';
  position: relative;
  width: 80%;
  height: 2px;
  border-radius: 2px;
  background: linear-gradient(45deg, #35cfd4, #14a1e6);
}

.divider--orange::before {
  background: linear-gradient(45deg, #f9c90d, #f96e10);
}

.divider--white::before {
  background: white;
}

.top_destinations {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.top_destinations__places {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

@media (min-width: 1200px) {
  .top_destinations__places {
    width: 90%;
  }
}

.top_destinations__places__place {
  width: 100%;
  margin: 1.5em 0;
  max-height: 75vh;
  min-height: 50vh;
  position: relative;
}

@media (min-width: 1200px) {
  .top_destinations__places__place {
    margin: 3em 0;
    width: 48%;
    min-height: auto;
  }
}

@media (min-width: 1600px) {
  .top_destinations__places__place {
    margin: 3em 0;
    width: 23%;
  }
}

.top_destinations__places__place:hover img {
  transform: scale(1.05);
}

.top_destinations__places__place::before {
  content: '';
  width: 100%;
  height: 100%;
  position: absolute;
  z-index: 0;
  left: -10px;
  top: -10px;
  background: linear-gradient(45deg, #35cfd4, #14a1e6 20%, transparent);
}

@media (min-width: 1200px) {
  .top_destinations__places__place::before {
    left: -15px;
    top: -15px;
  }
}

.top_destinations__places__place--orange::before {
  background: linear-gradient(45deg, #f9c90d, #f96e10 20%, transparent);
}

.top_destinations__places__place--green::before {
  background: linear-gradient(45deg, #62ab03, #004d00 20%, transparent);
}

.top_destinations__places__place__image {
  overflow: hidden;
  position: relative;
  height: 100%;
}

@media (min-width: 1600px) {
  .top_destinations__places__place__image {
    min-height: 60vh;
  }
}

.top_destinations__places__place__image > div {
  width: 100%;
  height: 100%;
}

.top_destinations__places__place__image img {
  transition: transform .5s ease-in-out;
  height: 100%;
}

@media (min-width: 1600px) {
  .top_destinations__places__place__image img {
    width: auto;
  }
}

.top_destinations__places__place__text {
  position: absolute;
  bottom: 0;
  width: 90%;
  margin: 0 5%;
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  text-align: center;
  z-index: 2;
  text-shadow: 3px 3px 10px rgba(0, 0, 0, 0.5);
}

@media (min-width: 1200px) {
  .top_destinations__places__place__text {
    bottom: 1em;
  }
}

.top_destinations__places__place__text span {
  display: block;
  color: white;
  font-family: "Baloo Bhaina", cursive;
  font-size: 2em;
}

.top_destinations__places__place__text p {
  color: white;
  font-weight: bold;
}

.activity {
  width: 100%;
  margin: .5em .5em;
  position: relative;
}

@media (min-width: 1200px) {
  .activity {
    width: 31%;
  }
}

.activity:hover {
  text-decoration: none;
}

.activity:hover img {
  transform: scale(1.1);
}

.activity__image {
  height: 40vh;
  overflow: hidden;
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);
  border-radius: 2px;
  position: relative;
}

.activity__image img {
  width: 100%;
  height: 100%;
  transition: transform .3s ease-in-out;
}

.activity__content {
  position: relative;
  top: -.75em;
  background-color: white;
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);
  padding: .5em;
  width: 95%;
  margin: auto;
  border-radius: 2px;
}

@media (min-width: 1200px) {
  .activity__content {
    padding: 1em;
    width: 90%;
  }
}

.activity__content__price {
  display: flex;
  border-radius: 50%;
  background: linear-gradient(45deg, #35cfd4, #14a1e6);
  transform: translate(50%, -50%);
  top: -.5em;
  position: absolute;
  right: .5em;
  width: 3.75em;
  height: 3.75em;
}

.activity__content__price span {
  text-align: center;
  margin: auto;
  color: white;
  font-weight: 700;
  font-size: .95em;
}

.activity__content__actions {
  position: absolute;
  width: auto;
  z-index: 1;
}

.activity__content__actions__add {
  width: 2em;
  height: 2em;
  cursor: pointer;
}

.activity__content__actions__add::before {
  position: absolute;
  content: '';
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
}

.activity__content__title {
  text-align: center;
  width: 80%;
  margin: auto;
}

.activity__content__description {
  text-align: center;
}

.activity__content__description p {
  margin: .25em;
}

@keyframes loading_dots_animation {
  50% {
    transform: scale(1);
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes loading_dots_animation__wait {
  50% {
    opacity: 1;
  }
  100% {
    opacity: 1;
  }
}

.loading_dots {
  height: 2em;
  margin: .5em;
  width: auto;
  box-sizing: border-box;
  opacity: 0;
  transition: opacity .3s ease-in-out;
}

.loading_dots * {
  box-sizing: border-box;
}

.loading_dots .dot {
  width: 1.5em;
  height: 1.5em;
  margin: 0 calc(1.5em / 2);
  border: calc(1.5em / 5) solid #35cfd4;
  border-radius: 50%;
  float: left;
  transform: scale(0);
  animation: loading_dots_animation 1s ease infinite 0s;
}

.loading_dots .dot:nth-child(1) {
  animation-delay: calc(300ms * 1);
}

.loading_dots .dot:nth-child(2) {
  animation-delay: calc(300ms * 2);
}

.loading_dots .dot:nth-child(3) {
  animation-delay: calc(300ms * 3);
}

.loading_dots--visible {
  opacity: 1 !important;
}

@keyframes showBarX {
  0% {
    transform: translateX(75%);
  }
  40% {
    transform: translateX(0%);
  }
  60% {
    transform: translateX(0%);
  }
  100% {
    transform: translateX(75%);
  }
}

@keyframes showBarY {
  0% {
    transform: translateY(75%);
  }
  40% {
    transform: translateY(0%);
  }
  60% {
    transform: translateY(0%);
  }
  100% {
    transform: translateY(75%);
  }
}

.cart_bar {
  bottom: 0;
  width: calc( 100vw - 4px);
  transform: translateY(60%);
  height: 6em;
  border-radius: 6px;
  margin: 0 2px;
  position: fixed;
  z-index: 2;
  padding: .25em;
  background: linear-gradient(45deg, rgba(53, 207, 212, 0.95), rgba(20, 161, 230, 0.95));
  color: white;
  border: 2px solid rgba(255, 255, 255, 0.9);
  display: flex;
  align-items: center;
  justify-content: space-between;
  transition: transform .3s ease-in-out;
}

@media (min-width: 1200px) {
  .cart_bar {
    transform: translateX(75%);
    margin: auto;
    bottom: 2em;
    right: 0;
    width: auto;
  }
}

.cart_bar:hover {
  transform: translateY(0);
}

@media (min-width: 1200px) {
  .cart_bar:hover {
    transform: translateX(0);
  }
}

.cart_bar--visible {
  animation: showBarY 3.5s ease-in-out 1;
}

@media (min-width: 1200px) {
  .cart_bar--visible {
    animation: showBarX 3.5s ease-in-out 1;
  }
}

.cart_bar__title {
  margin: 1em .5em;
  text-align: center;
  border-bottom: 1px solid white;
  width: 30%;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  padding-top: 1em;
}

@media (min-width: 1200px) {
  .cart_bar__title {
    transform: rotate(-90deg);
    padding-top: 0;
  }
}

.cart_bar__title__icon {
  width: 2em;
  height: 2em;
}

.cart_bar__title h4 {
  margin-top: .5em;
  padding: 0;
}

.cart_bar__content {
  width: 100%;
  padding: 0 1em;
}

@media (min-width: 1200px) {
  .cart_bar__content {
    padding: 1em;
  }
}

.cart_bar__content__text {
  text-align: center;
  width: 100%;
  color: white;
  margin: 0;
}

@media (min-width: 1200px) {
  .cart_bar__content__text {
    margin: .5em 0;
  }
}

.cart_bar__content__text p {
  margin: 0;
}

.cart_bar__content__button {
  width: 100%;
  display: flex;
  justify-content: space-around;
}

.cart_bar__content__button a {
  margin: 0 .25em;
  color: white;
}

.cart_bar [data-show='empty'] {
  visibility: hidden;
  position: relative;
  height: 0;
  width: 0;
  z-index: -1;
}

.cart_bar--initial [data-show='no-empty'] {
  visibility: hidden;
  position: relative;
  height: 0;
  width: 0;
  z-index: -1;
}

.cart_bar--initial [data-show='empty'] {
  visibility: visible;
  height: auto;
  width: auto;
  z-index: auto;
}

.footer {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  position: relative;
  background: linear-gradient(45deg, #35cfd4, #14a1e6);
  color: #ffffff;
}

.footer__banner {
  width: 100%;
  height: 75vh;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  position: relative;
}

.footer__banner__image {
  position: absolute;
  width: 100%;
  height: 100%;
}

.footer__banner__content {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.footer__banner__content__titles {
  text-align: center;
  width: 100%;
  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.25);
}

.footer__banner__content__titles h2, .footer__banner__content__titles h3 {
  color: white;
  margin: .5em;
  padding: 0;
}

.footer__banner__content__titles h2 {
  font-size: 2.5em;
}

.footer__banner__content__titles h3 {
  font-size: 1.5em;
}

.footer__content {
  position: relative;
  z-index: 1;
  padding: .5em;
  width: 90%;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

@media (min-width: 1200px) {
  .footer__content {
    padding: 2em 2em .5em 2em;
  }
}

.footer__content__links {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

.footer__content__links__column {
  width: 50%;
}

@media (min-width: 1200px) {
  .footer__content__links__column {
    width: 23%;
  }
}

.footer__content__links__column:nth-child(1) {
  order: 1;
}

.footer__content__links__column:nth-child(2) {
  order: 2;
}

@media (min-width: 1200px) {
  .footer__content__links__column:nth-child(2) {
    order: 3;
  }
}

.footer__content__links__column:nth-child(3) {
  order: 3;
}

@media (min-width: 1200px) {
  .footer__content__links__column:nth-child(3) {
    order: 2;
  }
}

.footer__content__links__column:nth-child(4) {
  order: 4;
}

.footer__content__links__column__title a {
  color: white;
}

.footer__content__links__column ul {
  margin-left: .25em;
}

.footer__content__links__column ul li {
  list-style: none;
  margin: .25em 0;
}

.footer__content__links__column ul li a {
  color: white;
}

.footer__content__infos {
  width: 100%;
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}

.footer__content__infos__column {
  width: 48%;
}

@media (min-width: 1200px) {
  .footer__content__infos__column {
    width: 25%;
  }
}

.footer__content__infos__column:last-child {
  width: 100%;
}

@media (min-width: 1200px) {
  .footer__content__infos__column:last-child {
    width: 25%;
  }
}

.footer__content__agb {
  display: flex;
  width: 100%;
  justify-content: center;
}

.footer__content__agb a {
  color: white;
}

.footer__content__copyright {
  width: auto;
}

.footer__content__made-by {
  width: auto;
}

.footer__content__made-by a {
  color: white;
  text-decoration: underline;
  font-weight: bold;
}

.footer__content__social-networks {
  width: auto;
  margin: auto 2em;
}

.footer__content__social-networks ul {
  margin: 0;
}

.footer__content__social-networks ul li {
  margin: 0 .25em;
  display: inline-block;
  list-style: none;
}

.footer__content__social-networks ul li a {
  display: inline-block;
}

.footer__content__social-networks ul li a svg {
  width: 2em;
  height: 2em;
}

.footer__background-image {
  position: absolute;
  bottom: 0;
  z-index: 0;
}

.travel-options {
  margin-bottom: 2em;
  position: relative;
  width: 100%;
  overflow: hidden;
}

.travel-options__grid {
  display: grid;
  grid-template-areas: "img1 img6"  "img2 img6"  "img9 img9"  "img10 img10"  "img3 img3"  "img4 img11"  "img5 img7 "  "img5 img8"  "img12 img14"  "img13 img14";
  grid-template-rows: 33vh 33vh 33vh 33vh 33vh 33vh 33vh 33vh 33vh 33vh;
  grid-template-columns: 1fr 1fr;
  width: 100%;
  grid-gap: .15em;
}

@media (min-width: 1200px) {
  .travel-options__grid {
    grid-template-areas: "img1 img6 img9 img9"  "img2 img6 img10 img10"  "img3 img3 img3 img3"  "img4 img4 img11 img11"  "img5 img7 img12 img14"  "img5 img8 img13 img14";
    grid-template-rows: 40vh 40vh 40vh 40vh;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    width: 100%;
  }
}

.travel-options__grid__item {
  height: 100%;
  width: 100%;
  overflow: hidden;
}

.travel-options__grid__item img {
  width: 100%;
  height: 100%;
}

.travel-options__grid_overlay {
  display: grid;
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  grid-template-areas: "section1 section1"  "section1 section1"  "section2 section2"  "section2 section2"  "section3 section3"  "section3 section3"  "section4 section4"  "section4 section4"  "section5 section5"  "section5 section5";
  grid-template-rows: 33vh 33vh 33vh 33vh 33vh 33vh 33vh 33vh 33vh 33vh;
  grid-template-columns: 1fr 1fr;
  grid-gap: .15em;
}

@media (min-width: 1200px) {
  .travel-options__grid_overlay {
    grid-template-areas: "section1 section1 section2 section2"  "section1 section1 section2 section2"  "section3 section3 section3 section3"  "section3 section3 section3 section3"  "section4 section4 section5 section5"  "section4 section4 section5 section5";
    grid-template-rows: 40vh 40vh 40vh 40vh;
    grid-template-columns: 1fr 1fr 1fr 1fr;
  }
}

.travel-options__grid_overlay a {
  text-decoration: none;
  color: white;
  font-size: 3em;
  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.25);
}

.travel-options__grid_overlay a:hover > div {
  opacity: 1;
}

.travel-options__grid_overlay a div {
  height: 100%;
  width: 100%;
  opacity: 0;
  background-color: rgba(53, 207, 212, 0.5);
  transition: opacity .3s ease-in-out;
  display: flex;
  justify-content: center;
  align-items: center;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYmFzZS9fY29uZmlnLnNjc3MiLCJ3ZWJwYWNrOi8vL2tyYWtlbi5zY3NzIiwid2VicGFjazovLy9iYXNlL19ub3JtYWxpemUuc2NzcyIsIndlYnBhY2s6Ly8vYmFzZS9fZ3JpZC5zY3NzIiwid2VicGFjazovLy9iYXNlL190eXBvZ3JhcGh5LnNjc3MiLCJ3ZWJwYWNrOi8vL2Jhc2UvX2NvZGUuc2NzcyIsIndlYnBhY2s6Ly8vYmFzZS9fYnV0dG9ucy5zY3NzIiwid2VicGFjazovLy9iYXNlL19mb3Jtcy5zY3NzIiwid2VicGFjazovLy9iYXNlL190YWJsZXMuc2NzcyIsIndlYnBhY2s6Ly8vYmFzZS9fb3ZlcnJpZGVzLnNjc3MiLCJ3ZWJwYWNrOi8vL2Jhc2UvX3ByaW50LnNjc3MiLCJ3ZWJwYWNrOi8vL3N0eWxlcy5zY3NzIiwid2VicGFjazovLy9tb2R1bGVzL2dsb2JhbC9fZ2xvYmFsLnNjc3MiLCJ3ZWJwYWNrOi8vL21vZHVsZXMvZ2xvYmFsL19pY29ucy5zY3NzIiwid2VicGFjazovLy9tb2R1bGVzL2Zvcm1zL19mb3JtX3JhZGlvLXN3aXRjaC5zY3NzIiwid2VicGFjazovLy9tb2R1bGVzL2dsb2JhbC9fY29va2llLnNjc3MiLCJ3ZWJwYWNrOi8vL2Jhc2UvX21peGlucy5zY3NzIiwid2VicGFjazovLy9tb2R1bGVzL2dsb2JhbC9faW1hZ2VfbG9hZC5zY3NzIiwid2VicGFjazovLy9tb2R1bGVzL2dsb2JhbC9fZm9ybS5zY3NzIiwid2VicGFjazovLy9tb2R1bGVzL2dsb2JhbC9faGVhZGVyLnNjc3MiLCJ3ZWJwYWNrOi8vL21vZHVsZXMvZ2xvYmFsL19oZXJvLnNjc3MiLCJ3ZWJwYWNrOi8vL21vZHVsZXMvZ2xvYmFsL19iYW5uZXJfc2t5LnNjc3MiLCJ3ZWJwYWNrOi8vL21vZHVsZXMvZ2xvYmFsL19zZWN0aW9ucy5zY3NzIiwid2VicGFjazovLy9tb2R1bGVzL2dsb2JhbC9fZGl2aWRlcnMuc2NzcyIsIndlYnBhY2s6Ly8vbW9kdWxlcy9nbG9iYWwvX3RvcF9kZXN0aW5hdGlvbnMuc2NzcyIsIndlYnBhY2s6Ly8vbW9kdWxlcy9nbG9iYWwvX2FjdGl2aXR5LnNjc3MiLCJ3ZWJwYWNrOi8vL21vZHVsZXMvZ2xvYmFsL19sb2FkaW5nX2RvdHMuc2NzcyIsIndlYnBhY2s6Ly8vbW9kdWxlcy9nbG9iYWwvX2NhcnRfYmFyLnNjc3MiLCJ3ZWJwYWNrOi8vL21vZHVsZXMvZ2xvYmFsL19mb290ZXIuc2NzcyIsIndlYnBhY2s6Ly8vbW9kdWxlcy9nbG9iYWwvX3RyYXZlbF9vcHRpb24uc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0VBQ0MsMkJBQTJCO0VBQzNCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLHVLQUF1SztFQUN2SyxvRUFBb0U7QUNDckU7O0FEQ0E7QUFDQTtFQUNDLDJCQUEyQjtFQUMzQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQix1S0FBdUs7RUFDdkssNERBQTREO0FDRTdEOztBREFBO0FBQ0E7RUFDQywyQkFBMkI7RUFDM0Isa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsdUtBQXVLO0VBQ3ZLLG1IQUFtSDtBQ0dwSDs7QUREQTtBQUNBO0VBQ0MsMkJBQTJCO0VBQzNCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLG9LQUFvSztFQUNwSyx5S0FBeUs7QUNJMUs7O0FERkE7QUFDQTtFQUNDLHdCQUF3QjtFQUN4QixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQiwySkFBMko7RUFDM0osc0ZBQXNGO0FDS3ZGOztBREhBO0FBQ0E7RUFDQyx3QkFBd0I7RUFDeEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsMkpBQTJKO0VBQzNKLDREQUE0RDtBQ003RDs7QURKQTtBQUNBO0VBQ0Msd0JBQXdCO0VBQ3hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFD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QkhvR2E7RUNnUGpCO0VFcFdDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDc1BqQjtFRTFXQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQzRQakI7RUVoWEM7SUFhRyxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCSHFHYTtJR3BHYixtQkhvR2E7RUNrUWpCO0VFdFhDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDd1FqQjtFRTVYQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQzhRakI7RUVsWUM7SUFhRyxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCSHFHYTtJR3BHYixtQkhvR2E7RUNvUmpCO0VFeFlDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDMFJqQjtFRTlZQztJQXNCRSxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCSDRGYztJRzNGZCxtQkgyRmM7RUNnU2pCO0VFdFhBO0lBQ0MsZ0JBQWdCO0lBQ2hCLFlBQVk7RUZ3WGI7RUVwWEM7SUFDQyxlSHNGTztJR3JGUCxjSHFGTztFQ2lTVDtFRXhYQztJQUNDLGVIdUZLO0lHdEZMLGNIc0ZLO0VDb1NQO0VFNVhDO0lBQ0MsZUh3Rk87SUd2RlAsY0h1Rk87RUN1U1Q7RUVoWUM7SUFDQyxlSHlGUTtJR3hGUixjSHdGUTtFQzBTVjtFRXBZQztJQUNDLGVIMEZLO0lHekZMLGNIeUZLO0VDNlNQO0VFeFlDO0lBQ0MsZUgyRmE7SUcxRmIsY0gwRmE7RUNnVGY7RUU1WUM7SUFDQyxxQkg0Rm1CO0lHM0ZuQixvQkgyRm1CO0VDbVRyQjtFRWhaQztJQUNDLGVINkZZO0lHNUZaLGNINEZZO0VDc1RkO0VFcFpDO0lBQ0MsZUg4Rk07SUc3Rk4sY0g2Rk07RUN5VFI7RUV4WkM7SUFDQyxxQkgrRnlCO0lHOUZ6QixvQkg4RnlCO0VDNFQzQjtFRTVaQztJQUNDLGVIZ0dlO0lHL0ZmLGNIK0ZlO0VDK1RqQjtFRWhhQztJQUNDLGdCSGlHTztJR2hHUCxlSGdHTztFQ2tVVDtFRXZaQTtJQUNDLDRCQUE0QjtJQUM1QixTQUFTO0VGeVpWO0VFdFpBO0lBQ0MsNEJBQTRCO0lBQzVCLFFBQVE7RUZ3WlQ7QUFDRjs7QUV4ZEM7RUFDQztJQUNDLGlCQUFpQjtFRjJkbEI7RUV0ZEM7SUFDQyxlQUFlO0VGd2RqQjtFRXpkQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQzJXakI7RUUvZEM7SUFhRyxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCSHFHYTtJR3BHYixtQkhvR2E7RUNpWGpCO0VFcmVDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDdVhqQjtFRTNlQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQzZYakI7RUVqZkM7SUFhRyxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCSHFHYTtJR3BHYixtQkhvR2E7RUNtWWpCO0VFdmZDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDeVlqQjtFRTdmQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQytZakI7RUVuZ0JDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDcVpqQjtFRXpnQkM7SUFhRyxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCSHFHYTtJR3BHYixtQkhvR2E7RUMyWmpCO0VFL2dCQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQ2lhakI7RUVyaEJDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDdWFqQjtFRTNoQkM7SUFhRyxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCSHFHYTtJR3BHYixtQkhvR2E7RUM2YWpCO0VFamlCQztJQXNCRSxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCSDRGYztJRzNGZCxtQkgyRmM7RUNtYmpCO0VFemdCQTtJQUNDLGdCQUFnQjtJQUNoQixZQUFZO0VGMmdCYjtFRXZnQkM7SUFDQyxlSHNGTztJR3JGUCxjSHFGTztFQ29iVDtFRTNnQkM7SUFDQyxlSHVGSztJR3RGTCxjSHNGSztFQ3ViUDtFRS9nQkM7SUFDQyxlSHdGTztJR3ZGUCxjSHVGTztFQzBiVDtFRW5oQkM7SUFDQyxlSHlGUTtJR3hGUixjSHdGUTtFQzZiVjtFRXZoQkM7SUFDQyxlSDBGSztJR3pGTCxjSHlGSztFQ2djUDtFRTNoQkM7SUFDQyxlSDJGYTtJRzFGYixjSDBGYTtFQ21jZjtFRS9oQkM7SUFDQyxxQkg0Rm1CO0lHM0ZuQixvQkgyRm1CO0VDc2NyQjtFRW5pQkM7SUFDQyxlSDZGWTtJRzVGWixjSDRGWTtFQ3ljZDtFRXZpQkM7SUFDQyxlSDhGTTtJRzdGTixjSDZGTTtFQzRjUjtFRTNpQkM7SUFDQyxxQkgrRnlCO0lHOUZ6QixvQkg4RnlCO0VDK2MzQjtFRS9pQkM7SUFDQyxlSGdHZTtJRy9GZixjSCtGZTtFQ2tkakI7RUVuakJDO0lBQ0MsZ0JIaUdPO0lHaEdQLGVIZ0dPO0VDcWRUO0VFMWlCQTtJQUNDLDRCQUE0QjtJQUM1QixTQUFTO0VGNGlCVjtFRXppQkE7SUFDQyw0QkFBNEI7SUFDNUIsUUFBUTtFRjJpQlQ7QUFDRjs7QUUzbUJDO0VBbkZEO0lBcUZHLGlCQUFpQjtFRjhtQmxCO0VFem1CQztJQUNDLGVBQWU7RUYybUJqQjtFRTVtQkM7SUFhRyxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCSHFHYTtJR3BHYixtQkhvR2E7RUM4ZmpCO0VFbG5CQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQ29nQmpCO0VFeG5CQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQzBnQmpCO0VFOW5CQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQ2doQmpCO0VFcG9CQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQ3NoQmpCO0VFMW9CQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQzRoQmpCO0VFaHBCQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQ2tpQmpCO0VFdHBCQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQ3dpQmpCO0VFNXBCQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQzhpQmpCO0VFbHFCQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQ29qQmpCO0VFeHFCQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQzBqQmpCO0VFOXFCQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQ2drQmpCO0VFcHJCQztJQXNCRSxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCSDRGYztJRzNGZCxtQkgyRmM7RUNza0JqQjtFRTVwQkE7SUFDQyxnQkFBZ0I7SUFDaEIsWUFBWTtFRjhwQmI7RUUxcEJDO0lBQ0MsZUhzRk87SUdyRlAsY0hxRk87RUN1a0JUO0VFOXBCQztJQUNDLGVIdUZLO0lHdEZMLGNIc0ZLO0VDMGtCUDtFRWxxQkM7SUFDQyxlSHdGTztJR3ZGUCxjSHVGTztFQzZrQlQ7RUV0cUJDO0lBQ0MsZUh5RlE7SUd4RlIsY0h3RlE7RUNnbEJWO0VFMXFCQztJQUNDLGVIMEZLO0lHekZMLGNIeUZLO0VDbWxCUDtFRTlxQkM7SUFDQyxlSDJGYTtJRzFGYixjSDBGYTtFQ3NsQmY7RUVsckJDO0lBQ0MscUJINEZtQjtJRzNGbkIsb0JIMkZtQjtFQ3lsQnJCO0VFdHJCQztJQUNDLGVINkZZO0lHNUZaLGNINEZZO0VDNGxCZDtFRTFyQkM7SUFDQyxlSDhGTTtJRzdGTixjSDZGTTtFQytsQlI7RUU5ckJDO0lBQ0MscUJIK0Z5QjtJRzlGekIsb0JIOEZ5QjtFQ2ttQjNCO0VFbHNCQztJQUNDLGVIZ0dlO0lHL0ZmLGNIK0ZlO0VDcW1CakI7RUV0c0JDO0lBQ0MsZ0JIaUdPO0lHaEdQLGVIZ0dPO0VDd21CVDtFRW5zQkU7SUFDQyxnQkgrRU07RUNzbkJUO0VFdHNCRTtJQUNDLGdCSGdGSTtFQ3duQlA7RUV6c0JFO0lBQ0MsZ0JIaUZNO0VDMG5CVDtFRTVzQkU7SUFDQyxnQkhrRk87RUM0bkJWO0VFL3NCRTtJQUNDLGdCSG1GSTtFQzhuQlA7RUVsdEJFO0lBQ0MsZ0JIb0ZZO0VDZ29CZjtFRXJ0QkU7SUFDQyxzQkhxRmtCO0VDa29CckI7RUV4dEJFO0lBQ0MsZ0JIc0ZXO0VDb29CZDtFRTN0QkU7SUFDQyxnQkh1Rks7RUNzb0JSO0VFOXRCRTtJQUNDLHNCSHdGd0I7RUN3b0IzQjtFRWp1QkU7SUFDQyxnQkh5RmM7RUMwb0JqQjtFRXB1QkU7SUFDQyxpQkgwRk07RUM0b0JUO0VFanVCQTtJQUNDLDRCQUE0QjtJQUM1QixTQUFTO0VGbXVCVjtFRWh1QkE7SUFDQyw0QkFBNEI7SUFDNUIsUUFBUTtFRmt1QlQ7QUFDRjs7QUdyNEJBOzs7RUgwNEJFO0FHcjRCRjtFQUNJLHlDSjZKZ0I7QUMwdUJwQjs7QUMvMUJBO0VFL0JDLGlCQUFpQjtFQUNqQixXSjZKVTtFSTVKVixvQ0p3TGtDO0VJdkxsQyxlSnFNZTtFSXBNZixnQkFBZ0I7QUhrNEJqQjs7QUdoNEJDO0VGeUJEO0lFeEJFLG1CQUFtQjtFSG80Qm5CO0FBQ0Y7O0FHaDRCQTtFQUNDLGlCQUFpQjtBSG00QmxCOztBRy8zQkE7RUFDQyxvQkp1TGlCO0FDMnNCbEI7O0FHLzNCQTtFQUNDLDBCQUEwQjtBSGs0QjNCOztBR2g0QkE7Ozs7RUhzNEJFO0FHaDRCRjtFQUNJLFdKK0hPO0VJOUhWLDZCQUE2QjtFQUFFO0VBQy9CLHFCQUFxQjtFQUNyQiw2QkFBNkI7RUFBRTtFQUMvQixxQkFBcUI7RUFFckI7O0dIbzRCRTtBQUNIOztB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LHFCQUFxQjtBakJrK0M3Qzs7QWlCLytDUztFQWdCbUIsVUFBVTtFQUNWLFdBQVc7QWpCbStDdkM7O0FpQjM5Q0k7RUFDSSxrQkFBa0I7RUFDbEIsU0FBUztFQUNULFVBQVU7QWpCODlDbEI7O0FrQmpxREE7RUFDSSxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxnQkFBZ0I7QWxCb3FEcEI7O0FrQmxxREk7RUFDSSxhQUFhO0VBQ2IsNkpBU3FDO0VBQ3JDLHFFQUFxRTtFQUNyRSw4QkFBOEI7RUFDOUIsV0FBVztFQUNYLGVBQWU7QWxCNHBEdkI7O0FLMXFESTtFYURBO0lBa0JRLHFLQUsrQztJQUMvQyx1Q0FBdUM7SUFDdkMsc0NBQXNDO0lBQ3RDLFdBQVc7RWxCeXBEckI7QUFDRjs7QWtCdnBEUTtFQUNJLFlBQVk7RUFDWixXQUFXO0VBQ1gsZ0JBQWdCO0FsQjBwRDVCOztBa0I3cERTO0VBTU8sV0FBVztFQUNYLFlBQVk7QWxCMnBENUI7O0FrQnJwREk7RUFDSSxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLE1BQU07RUFDTixXQUFXO0VBQ1gsWUFBWTtFQUNaLHFPQVN3QztFQUN4QyxxRUFBcUU7RUFDckUsOEJBQThCO0VBQzlCLGVBQWU7QWxCK29EdkI7O0FLMXNESTtFYXlDQTtJQXFCUSw2UEFLeUQ7SUFDekQsdUNBQXVDO0lBQ3ZDLHNDQUFzQztFbEI0b0RoRDtBQUNGOztBa0J6cURLO0VBZ0NPLHFCQUFxQjtFQUNyQixZQUFZO0VBQ1osY0FBYztFQUNkLDZDQUFvQztBbEI2b0RoRDs7QWtCaHJESztFQXdDZSxVQUFVO0FsQjRvRDlCOztBa0JwckRLO0VBNkNXLFlBQVk7RUFDWixXQUFXO0VBQ1gsVUFBVTtFQUNWLHlDN0JtRUk7RTZCbEVKLG1DQUFtQztFQUNuQyxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBbEIyb0RuQyIsImZpbGUiOiJhcHAuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogb3JpeWEgKi9cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6ICdCYWxvbyBCaGFpbmEnO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodDogNDAwO1xyXG5cdGZvbnQtZGlzcGxheTogc3dhcDtcclxuXHRzcmM6IGxvY2FsKCdCYWxvbyBCaGFpbmEgUmVndWxhcicpLCBsb2NhbCgnQmFsb29CaGFpbmEtUmVndWxhcicpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL2JhbG9vYmhhaW5hL3Y1L05vYTE2VXp6enAyRklrZmhxNXZtOXRoQklnNThxaEUud29mZjIpIGZvcm1hdCgnd29mZjInKTtcclxuXHR1bmljb2RlLXJhbmdlOiBVKzA5NjQtMDk2NSwgVSswQjAxLTBCNzcsIFUrMjAwQy0yMDBELCBVKzIwQjksIFUrMjVDQztcclxufVxyXG4vKiB2aWV0bmFtZXNlICovXHJcbkBmb250LWZhY2Uge1xyXG5cdGZvbnQtZmFtaWx5OiAnQmFsb28gQmhhaW5hJztcclxuXHRmb250LXN0eWxlOiBub3JtYWw7XHJcblx0Zm9udC13ZWlnaHQ6IDQwMDtcclxuXHRmb250LWRpc3BsYXk6IHN3YXA7XHJcblx0c3JjOiBsb2NhbCgnQmFsb28gQmhhaW5hIFJlZ3VsYXInKSwgbG9jYWwoJ0JhbG9vQmhhaW5hLVJlZ3VsYXInKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9iYWxvb2JoYWluYS92NS9Ob2ExNlV6enpwMkZJa2ZocTV2bTl0aEJOQTU4cWhFLndvZmYyKSBmb3JtYXQoJ3dvZmYyJyk7XHJcblx0dW5pY29kZS1yYW5nZTogVSswMTAyLTAxMDMsIFUrMDExMC0wMTExLCBVKzFFQTAtMUVGOSwgVSsyMEFCO1xyXG59XHJcbi8qIGxhdGluLWV4dCAqL1xyXG5AZm9udC1mYWNlIHtcclxuXHRmb250LWZhbWlseTogJ0JhbG9vIEJoYWluYSc7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0OiA0MDA7XHJcblx0Zm9udC1kaXNwbGF5OiBzd2FwO1xyXG5cdHNyYzogbG9jYWwoJ0JhbG9vIEJoYWluYSBSZWd1bGFyJyksIGxvY2FsKCdCYWxvb0JoYWluYS1SZWd1bGFyJyksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3MvYmFsb29iaGFpbmEvdjUvTm9hMTZVenp6cDJGSWtmaHE1dm05dGhCTlE1OHFoRS53b2ZmMikgZm9ybWF0KCd3b2ZmMicpO1xyXG5cdHVuaWNvZGUtcmFuZ2U6IFUrMDEwMC0wMjRGLCBVKzAyNTksIFUrMUUwMC0xRUZGLCBVKzIwMjAsIFUrMjBBMC0yMEFCLCBVKzIwQUQtMjBDRiwgVSsyMTEzLCBVKzJDNjAtMkM3RiwgVStBNzIwLUE3RkY7XHJcbn1cclxuLyogbGF0aW4gKi9cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6ICdCYWxvbyBCaGFpbmEnO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodDogNDAwO1xyXG5cdGZvbnQtZGlzcGxheTogc3dhcDtcclxuXHRzcmM6IGxvY2FsKCdCYWxvbyBCaGFpbmEgUmVndWxhcicpLCBsb2NhbCgnQmFsb29CaGFpbmEtUmVndWxhcicpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL2JhbG9vYmhhaW5hL3Y1L05vYTE2VXp6enAyRklrZmhxNXZtOXRoQk93NTgud29mZjIpIGZvcm1hdCgnd29mZjInKTtcclxuXHR1bmljb2RlLXJhbmdlOiBVKzAwMDAtMDBGRiwgVSswMTMxLCBVKzAxNTItMDE1MywgVSswMkJCLTAyQkMsIFUrMDJDNiwgVSswMkRBLCBVKzAyREMsIFUrMjAwMC0yMDZGLCBVKzIwNzQsIFUrMjBBQywgVSsyMTIyLCBVKzIxOTEsIFUrMjE5MywgVSsyMjEyLCBVKzIyMTUsIFUrRkVGRiwgVStGRkZEO1xyXG59XHJcbi8qIGN5cmlsbGljLWV4dCAqL1xyXG5AZm9udC1mYWNlIHtcclxuXHRmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0OiA0MDA7XHJcblx0Zm9udC1kaXNwbGF5OiBzd2FwO1xyXG5cdHNyYzogbG9jYWwoJ09wZW4gU2FucyBSZWd1bGFyJyksIGxvY2FsKCdPcGVuU2Fucy1SZWd1bGFyJyksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbThZYUdzMTI2TWlacEJBLVVGV0owYmJjay53b2ZmMikgZm9ybWF0KCd3b2ZmMicpO1xyXG5cdHVuaWNvZGUtcmFuZ2U6IFUrMDQ2MC0wNTJGLCBVKzFDODAtMUM4OCwgVSsyMEI0LCBVKzJERTAtMkRGRiwgVStBNjQwLUE2OUYsIFUrRkUyRS1GRTJGO1xyXG59XHJcbi8qIGN5cmlsbGljICovXHJcbkBmb250LWZhY2Uge1xyXG5cdGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcclxuXHRmb250LXN0eWxlOiBub3JtYWw7XHJcblx0Zm9udC13ZWlnaHQ6IDQwMDtcclxuXHRmb250LWRpc3BsYXk6IHN3YXA7XHJcblx0c3JjOiBsb2NhbCgnT3BlbiBTYW5zIFJlZ3VsYXInKSwgbG9jYWwoJ09wZW5TYW5zLVJlZ3VsYXInKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtOFlhR3MxMjZNaVpwQkEtVUZVWjBiYmNrLndvZmYyKSBmb3JtYXQoJ3dvZmYyJyk7XHJcblx0dW5pY29kZS1yYW5nZTogVSswNDAwLTA0NUYsIFUrMDQ5MC0wNDkxLCBVKzA0QjAtMDRCMSwgVSsyMTE2O1xyXG59XHJcbi8qIGdyZWVrLWV4dCAqL1xyXG5AZm9udC1mYWNlIHtcclxuXHRmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0OiA0MDA7XHJcblx0Zm9udC1kaXNwbGF5OiBzd2FwO1xyXG5cdHNyYzogbG9jYWwoJ09wZW4gU2FucyBSZWd1bGFyJyksIGxvY2FsKCdPcGVuU2Fucy1SZWd1bGFyJyksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbThZYUdzMTI2TWlacEJBLVVGV1owYmJjay53b2ZmMikgZm9ybWF0KCd3b2ZmMicpO1xyXG5cdHVuaWNvZGUtcmFuZ2U6IFUrMUYwMC0xRkZGO1xyXG59XHJcbi8qIGdyZWVrICovXHJcbkBmb250LWZhY2Uge1xyXG5cdGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcclxuXHRmb250LXN0eWxlOiBub3JtYWw7XHJcblx0Zm9udC13ZWlnaHQ6IDQwMDtcclxuXHRmb250LWRpc3BsYXk6IHN3YXA7XHJcblx0c3JjOiBsb2NhbCgnT3BlbiBTYW5zIFJlZ3VsYXInKSwgbG9jYWwoJ09wZW5TYW5zLVJlZ3VsYXInKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtOFlhR3MxMjZNaVpwQkEtVUZWcDBiYmNrLndvZmYyKSBmb3JtYXQoJ3dvZmYyJyk7XHJcblx0dW5pY29kZS1yYW5nZTogVSswMzcwLTAzRkY7XHJcbn1cclxuLyogdmlldG5hbWVzZSAqL1xyXG5AZm9udC1mYWNlIHtcclxuXHRmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0OiA0MDA7XHJcblx0Zm9udC1kaXNwbGF5OiBzd2FwO1xyXG5cdHNyYzogbG9jYWwoJ09wZW4gU2FucyBSZWd1bGFyJyksIGxvY2FsKCdPcGVuU2Fucy1SZWd1bGFyJyksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbThZYUdzMTI2TWlacEJBLVVGV3AwYmJjay53b2ZmMikgZm9ybWF0KCd3b2ZmMicpO1xyXG5cdHVuaWNvZGUtcmFuZ2U6IFUrMDEwMi0wMTAzLCBVKzAxMTAtMDExMSwgVSsxRUEwLTFFRjksIFUrMjBBQjtcclxufVxyXG4vKiBsYXRpbi1leHQgKi9cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodDogNDAwO1xyXG5cdGZvbnQtZGlzcGxheTogc3dhcDtcclxuXHRzcmM6IGxvY2FsKCdPcGVuIFNhbnMgUmVndWxhcicpLCBsb2NhbCgnT3BlblNhbnMtUmVndWxhcicpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW04WWFHczEyNk1pWnBCQS1VRlc1MGJiY2sud29mZjIpIGZvcm1hdCgnd29mZjInKTtcclxuXHR1bmljb2RlLXJhbmdlOiBVKzAxMDAtMDI0RiwgVSswMjU5LCBVKzFFMDAtMUVGRiwgVSsyMDIwLCBVKzIwQTAtMjBBQiwgVSsyMEFELTIwQ0YsIFUrMjExMywgVSsyQzYwLTJDN0YsIFUrQTcyMC1BN0ZGO1xyXG59XHJcbi8qIGxhdGluICovXHJcbkBmb250LWZhY2Uge1xyXG5cdGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcclxuXHRmb250LXN0eWxlOiBub3JtYWw7XHJcblx0Zm9udC13ZWlnaHQ6IDQwMDtcclxuXHRmb250LWRpc3BsYXk6IHN3YXA7XHJcblx0c3JjOiBsb2NhbCgnT3BlbiBTYW5zIFJlZ3VsYXInKSwgbG9jYWwoJ09wZW5TYW5zLVJlZ3VsYXInKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtOFlhR3MxMjZNaVpwQkEtVUZWWjBiLndvZmYyKSBmb3JtYXQoJ3dvZmYyJyk7XHJcblx0dW5pY29kZS1yYW5nZTogVSswMDAwLTAwRkYsIFUrMDEzMSwgVSswMTUyLTAxNTMsIFUrMDJCQi0wMkJDLCBVKzAyQzYsIFUrMDJEQSwgVSswMkRDLCBVKzIwMDAtMjA2RiwgVSsyMDc0LCBVKzIwQUMsIFUrMjEyMiwgVSsyMTkxLCBVKzIxOTMsIFUrMjIxMiwgVSsyMjE1LCBVK0ZFRkYsIFUrRkZGRDtcclxufVxyXG4vKiBjeXJpbGxpYy1leHQgKi9cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodDogNzAwO1xyXG5cdGZvbnQtZGlzcGxheTogc3dhcDtcclxuXHRzcmM6IGxvY2FsKCdPcGVuIFNhbnMgQm9sZCcpLCBsb2NhbCgnT3BlblNhbnMtQm9sZCcpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW01WWFHczEyNk1pWnBCQS1VTjdyZ09YLWhwT3FjLndvZmYyKSBmb3JtYXQoJ3dvZmYyJyk7XHJcblx0dW5pY29kZS1yYW5nZTogVSswNDYwLTA1MkYsIFUrMUM4MC0xQzg4LCBVKzIwQjQsIFUrMkRFMC0yREZGLCBVK0E2NDAtQTY5RiwgVStGRTJFLUZFMkY7XHJcbn1cclxuLyogY3lyaWxsaWMgKi9cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodDogNzAwO1xyXG5cdGZvbnQtZGlzcGxheTogc3dhcDtcclxuXHRzcmM6IGxvY2FsKCdPcGVuIFNhbnMgQm9sZCcpLCBsb2NhbCgnT3BlblNhbnMtQm9sZCcpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW01WWFHczEyNk1pWnBCQS1VTjdyZ09WdWhwT3FjLndvZmYyKSBmb3JtYXQoJ3dvZmYyJyk7XHJcblx0dW5pY29kZS1yYW5nZTogVSswNDAwLTA0NUYsIFUrMDQ5MC0wNDkxLCBVKzA0QjAtMDRCMSwgVSsyMTE2O1xyXG59XHJcbi8qIGdyZWVrLWV4dCAqL1xyXG5AZm9udC1mYWNlIHtcclxuXHRmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0OiA3MDA7XHJcblx0Zm9udC1kaXNwbGF5OiBzd2FwO1xyXG5cdHNyYzogbG9jYWwoJ09wZW4gU2FucyBCb2xkJyksIGxvY2FsKCdPcGVuU2Fucy1Cb2xkJyksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbTVZYUdzMTI2TWlacEJBLVVON3JnT1h1aHBPcWMud29mZjIpIGZvcm1hdCgnd29mZjInKTtcclxuXHR1bmljb2RlLXJhbmdlOiBVKzFGMDAtMUZGRjtcclxufVxyXG4vKiBncmVlayAqL1xyXG5AZm9udC1mYWNlIHtcclxuXHRmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0OiA3MDA7XHJcblx0Zm9udC1kaXNwbGF5OiBzd2FwO1xyXG5cdHNyYzogbG9jYWwoJ09wZW4gU2FucyBCb2xkJyksIGxvY2FsKCdPcGVuU2Fucy1Cb2xkJyksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbTVZYUdzMTI2TWlacEJBLVVON3JnT1VlaHBPcWMud29mZjIpIGZvcm1hdCgnd29mZjInKTtcclxuXHR1bmljb2RlLXJhbmdlOiBVKzAzNzAtMDNGRjtcclxufVxyXG4vKiB2aWV0bmFtZXNlICovXHJcbkBmb250LWZhY2Uge1xyXG5cdGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcclxuXHRmb250LXN0eWxlOiBub3JtYWw7XHJcblx0Zm9udC13ZWlnaHQ6IDcwMDtcclxuXHRmb250LWRpc3BsYXk6IHN3YXA7XHJcblx0c3JjOiBsb2NhbCgnT3BlbiBTYW5zIEJvbGQnKSwgbG9jYWwoJ09wZW5TYW5zLUJvbGQnKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtNVlhR3MxMjZNaVpwQkEtVU43cmdPWGVocE9xYy53b2ZmMikgZm9ybWF0KCd3b2ZmMicpO1xyXG5cdHVuaWNvZGUtcmFuZ2U6IFUrMDEwMi0wMTAzLCBVKzAxMTAtMDExMSwgVSsxRUEwLTFFRjksIFUrMjBBQjtcclxufVxyXG4vKiBsYXRpbi1leHQgKi9cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodDogNzAwO1xyXG5cdGZvbnQtZGlzcGxheTogc3dhcDtcclxuXHRzcmM6IGxvY2FsKCdPcGVuIFNhbnMgQm9sZCcpLCBsb2NhbCgnT3BlblNhbnMtQm9sZCcpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW01WWFHczEyNk1pWnBCQS1VTjdyZ09YT2hwT3FjLndvZmYyKSBmb3JtYXQoJ3dvZmYyJyk7XHJcblx0dW5pY29kZS1yYW5nZTogVSswMTAwLTAyNEYsIFUrMDI1OSwgVSsxRTAwLTFFRkYsIFUrMjAyMCwgVSsyMEEwLTIwQUIsIFUrMjBBRC0yMENGLCBVKzIxMTMsIFUrMkM2MC0yQzdGLCBVK0E3MjAtQTdGRjtcclxufVxyXG4vKiBsYXRpbiAqL1xyXG5AZm9udC1mYWNlIHtcclxuXHRmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0OiA3MDA7XHJcblx0Zm9udC1kaXNwbGF5OiBzd2FwO1xyXG5cdHNyYzogbG9jYWwoJ09wZW4gU2FucyBCb2xkJyksIGxvY2FsKCdPcGVuU2Fucy1Cb2xkJyksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbTVZYUdzMTI2TWlacEJBLVVON3JnT1V1aHAud29mZjIpIGZvcm1hdCgnd29mZjInKTtcclxuXHR1bmljb2RlLXJhbmdlOiBVKzAwMDAtMDBGRiwgVSswMTMxLCBVKzAxNTItMDE1MywgVSswMkJCLTAyQkMsIFUrMDJDNiwgVSswMkRBLCBVKzAyREMsIFUrMjAwMC0yMDZGLCBVKzIwNzQsIFUrMjBBQywgVSsyMTIyLCBVKzIxOTEsIFUrMjE5MywgVSsyMjEyLCBVKzIyMTUsIFUrRkVGRiwgVStGRkZEO1xyXG59XHJcblxyXG4kbGlnaHQtYmx1ZTogIzM1Y2ZkNDtcclxuJGRhcmstYmx1ZTogIzE0YTFlNjtcclxuXHJcbiRsaWdodC1ncmVlbjogIzYyYWIwMztcclxuJGRhcmstZ3JlZW46ICMwMDRkMDA7XHJcblxyXG4kbGlnaHQtb3JhbmdlOiAjZjljOTBkO1xyXG4kZGFyay1vcmFuZ2U6ICNmOTZlMTA7XHJcblxyXG4kbGlnaHQtcmVkOiAjZjczNjBkO1xyXG4kZ3JleTogIzY2NjtcclxuXHJcbiRjb2xvci1wcmltYXJ5OiAjMDA4OGNjO1xyXG4kY29sb3ItYmxhY2s6ICMwMDAwMDA7XHJcbiRjb2xvci13aGl0ZTogI2ZmZmZmZjtcclxuXHJcbiRjb2xvci1pbmZvOiAjMDA4OGNjOyAvLyBCbHVlXHJcbiRjb2xvci1zdWNjZXNzOiAjMzc3ZjMxOyAvLyBHcmVlblxyXG4kY29sb3ItZGFuZ2VyOiAjODgwZTE0OyAvLyBSZWRcclxuJGNvbG9yLXdhcm5pbmc6ICNkYmE5MDk7IC8vIFllbGxvd1xyXG4kY29sb3ItY29kZTogI2RkMTE0NDtcclxuXHJcbiRjb2xvci1ncmF5LWRhcms6ICM2NjY2NjY7XHJcbiRjb2xvci1ncmF5LWxpZ2h0OiAjZTVlNWU1O1xyXG4kY29sb3ItZ3JheS1saWdodGVyOiAjZjdmN2Y3O1xyXG5cclxuJGNvbG9yLWJsdWUtbGlnaHQ6ICMzNWNmZDQ7XHJcbiRjb2xvci1ibHVlLWRhcms6ICMxNGExZTY7XHJcblxyXG4kY29sb3ItZ3JlZW4tbGlnaHQ6ICM2MmFiMDM7XHJcbiRjb2xvci1ncmVlbi1kYXJrOiAjMDA0ZDAwO1xyXG5cclxuJGNvbG9yLXllbGxvdy1saWdodGVyOiAjZjljOTBkO1xyXG4kY29sb3IteWVsbG93LWxpZ2h0OiAjZjk2ZTEwO1xyXG4kY29sb3IteWVsbG93LWRhcms6ICNmNzM2MGQ7XHJcblxyXG5cclxuLy8gRm9udCBTdGFja3NcclxuJGZvbnQtdGV4dDogJ09wZW4gU2FucycsIHNhbnMtc2VyaWY7XHJcbiRmb250LXRpdGxlczogJ0JhbG9vIEJoYWluYScsIGN1cnNpdmU7XHJcbiRmb250LWZvcm1hdGVkOiAnT3BlbiBTYW5zJywgbW9ub3NwYWNlO1xyXG5cclxuXHJcbi8vIEJyZWFrcG9pbnRzXHJcbiRicC14c21hbGw6IDIwZW07XHJcbiRicC1zbWFsbDogMzBlbTtcclxuJGJwLW1lZGl1bTogNDBlbTtcclxuJGJwLWxhcmdlOiA2MGVtO1xyXG4kYnAteGxhcmdlOiA4MGVtO1xyXG5cclxuXHJcbi8vIFNpemluZ1xyXG4kZm9udC1zaXplOiAxMDAlO1xyXG4kc3BhY2luZzogMS41NjI1ZW07XHJcbiRjb250YWluZXItd2lkdGg6IDg4JTtcclxuJGNvbnRhaW5lci1tYXgtd2lkdGg6IDgwZW07XHJcblxyXG5cclxuLy8gR3JpZFxyXG4kZ3JpZC1tYXJnaW5zOiAxLjQlO1xyXG4kZ3JpZC1zaXplczogKFxyXG5cdC8vIEdyaWQgd2lkdGggb3B0aW9uc1xyXG5cdC8vIEFkZC9yZW1vdmUgZ3JpZCdzIGFzIG5lZWRlZFxyXG5cdC8vICRuYW1lOiAkd2lkdGhcclxuXHQvLyAkbmFtZSAtIHtzdHJpbmd9IGNsYXNzIHN1ZmZpeFxyXG5cdC8vICR3aWR0aCAtIHtzdHJpbmd9IHdpZHRoIG9mIHRoZSBncmlkXHJcblx0dGVudGg6IDEwJSxcclxuXHRwMTY6IDE2JSxcclxuXHRmaWZ0aDogMjAlLFxyXG5cdGZvdXJ0aDogMjUlLFxyXG5cdHAyODogMjglLFxyXG5cdHRocmVlLXRlbnRoOiAzMCUsXHJcblx0dGhpcmQ6IDMzLjMzMzMzMzMzMzMzJSxcclxuXHRmb3VyLXRlbnRoOiA0MCUsXHJcblx0aGFsZjogNTAlLFxyXG5cdHR3by10aGlyZHM6IDY2LjY2NjY2NjY2NjY2NyUsXHJcblx0dGhyZWUtZm91cnRoczogNzUlLFxyXG5cdGZ1bGw6IDEwMCVcclxuKTtcclxuJGdyaWQtYnJlYWtwb2ludHM6IChcclxuXHQvLyBCcmVha3BvaW50cyBhdCB3aGljaCB0byBhY3RpdmF0ZSBncmlkXHJcblx0Ly8gQWRkL3JlbW92ZSBicmVha3BvaW50cyBhcyBuZWVkZWRcclxuXHQvLyAoJGJyZWFrcG9pbnQsICRwcmVmaXgtY2xhc3MsICRpbmNsdWRlLW9mZnNldHMpXHJcblx0Ly8gJGJyZWFrcG9pbnQgLSB7c3RyaW5nfHZhcmlhYmxlfSB0aGUgYnJlYWtwb2ludFxyXG5cdC8vICRwcmVmaXgtY2xhc3MgLSB7c3RyaW5nfG9wdGlvbmFsfSBjbGFzcyB0byBiZSB1c2VkIHdpdGggYC5yb3dgIHRvIGFjdGl2YXRlIGdyaWRcclxuXHQvLyAkaW5jbHVkZS1vZmZzZXRzIC0ge2Jvb2xlYW59IGlmIHRydWUsIGluY2x1ZGUgb2Zmc2V0IGNsYXNzZXMgYXQgdGhpcyBicmVha3BvaW50XHJcblx0KCRicC14c21hbGwsIFwiLnJvdy1zdGFydC14c21hbGxcIiwgZmFsc2UpLFxyXG5cdCgkYnAtc21hbGwsIFwiLnJvdy1zdGFydC1zbWFsbFwiLCBmYWxzZSksXHJcblx0KCRicC1tZWRpdW0sIG51bGwsIHRydWUpLFxyXG4pO1xyXG4kZ3JpZC13cmFwOiB0cnVlOyIsIi8qIG9yaXlhICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdCYWxvbyBCaGFpbmEnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIkJhbG9vIEJoYWluYSBSZWd1bGFyXCIpLCBsb2NhbChcIkJhbG9vQmhhaW5hLVJlZ3VsYXJcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3MvYmFsb29iaGFpbmEvdjUvTm9hMTZVenp6cDJGSWtmaHE1dm05dGhCSWc1OHFoRS53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDk2NC0wOTY1LCBVKzBCMDEtMEI3NywgVSsyMDBDLTIwMEQsIFUrMjBCOSwgVSsyNUNDO1xufVxuXG4vKiB2aWV0bmFtZXNlICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdCYWxvbyBCaGFpbmEnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIkJhbG9vIEJoYWluYSBSZWd1bGFyXCIpLCBsb2NhbChcIkJhbG9vQmhhaW5hLVJlZ3VsYXJcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3MvYmFsb29iaGFpbmEvdjUvTm9hMTZVenp6cDJGSWtmaHE1dm05dGhCTkE1OHFoRS53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDEwMi0wMTAzLCBVKzAxMTAtMDExMSwgVSsxRUEwLTFFRjksIFUrMjBBQjtcbn1cblxuLyogbGF0aW4tZXh0ICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdCYWxvbyBCaGFpbmEnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIkJhbG9vIEJoYWluYSBSZWd1bGFyXCIpLCBsb2NhbChcIkJhbG9vQmhhaW5hLVJlZ3VsYXJcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3MvYmFsb29iaGFpbmEvdjUvTm9hMTZVenp6cDJGSWtmaHE1dm05dGhCTlE1OHFoRS53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDEwMC0wMjRGLCBVKzAyNTksIFUrMUUwMC0xRUZGLCBVKzIwMjAsIFUrMjBBMC0yMEFCLCBVKzIwQUQtMjBDRiwgVSsyMTEzLCBVKzJDNjAtMkM3RiwgVStBNzIwLUE3RkY7XG59XG5cbi8qIGxhdGluICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdCYWxvbyBCaGFpbmEnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIkJhbG9vIEJoYWluYSBSZWd1bGFyXCIpLCBsb2NhbChcIkJhbG9vQmhhaW5hLVJlZ3VsYXJcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3MvYmFsb29iaGFpbmEvdjUvTm9hMTZVenp6cDJGSWtmaHE1dm05dGhCT3c1OC53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDAwMC0wMEZGLCBVKzAxMzEsIFUrMDE1Mi0wMTUzLCBVKzAyQkItMDJCQywgVSswMkM2LCBVKzAyREEsIFUrMDJEQywgVSsyMDAwLTIwNkYsIFUrMjA3NCwgVSsyMEFDLCBVKzIxMjIsIFUrMjE5MSwgVSsyMTkzLCBVKzIyMTIsIFUrMjIxNSwgVStGRUZGLCBVK0ZGRkQ7XG59XG5cbi8qIGN5cmlsbGljLWV4dCAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgUmVndWxhclwiKSwgbG9jYWwoXCJPcGVuU2Fucy1SZWd1bGFyXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW04WWFHczEyNk1pWnBCQS1VRldKMGJiY2sud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzA0NjAtMDUyRiwgVSsxQzgwLTFDODgsIFUrMjBCNCwgVSsyREUwLTJERkYsIFUrQTY0MC1BNjlGLCBVK0ZFMkUtRkUyRjtcbn1cblxuLyogY3lyaWxsaWMgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiT3BlbiBTYW5zIFJlZ3VsYXJcIiksIGxvY2FsKFwiT3BlblNhbnMtUmVndWxhclwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtOFlhR3MxMjZNaVpwQkEtVUZVWjBiYmNrLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswNDAwLTA0NUYsIFUrMDQ5MC0wNDkxLCBVKzA0QjAtMDRCMSwgVSsyMTE2O1xufVxuXG4vKiBncmVlay1leHQgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiT3BlbiBTYW5zIFJlZ3VsYXJcIiksIGxvY2FsKFwiT3BlblNhbnMtUmVndWxhclwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtOFlhR3MxMjZNaVpwQkEtVUZXWjBiYmNrLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSsxRjAwLTFGRkY7XG59XG5cbi8qIGdyZWVrICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIk9wZW4gU2FucyBSZWd1bGFyXCIpLCBsb2NhbChcIk9wZW5TYW5zLVJlZ3VsYXJcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbThZYUdzMTI2TWlacEJBLVVGVnAwYmJjay53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDM3MC0wM0ZGO1xufVxuXG4vKiB2aWV0bmFtZXNlICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIk9wZW4gU2FucyBSZWd1bGFyXCIpLCBsb2NhbChcIk9wZW5TYW5zLVJlZ3VsYXJcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbThZYUdzMTI2TWlacEJBLVVGV3AwYmJjay53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDEwMi0wMTAzLCBVKzAxMTAtMDExMSwgVSsxRUEwLTFFRjksIFUrMjBBQjtcbn1cblxuLyogbGF0aW4tZXh0ICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIk9wZW4gU2FucyBSZWd1bGFyXCIpLCBsb2NhbChcIk9wZW5TYW5zLVJlZ3VsYXJcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbThZYUdzMTI2TWlacEJBLVVGVzUwYmJjay53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDEwMC0wMjRGLCBVKzAyNTksIFUrMUUwMC0xRUZGLCBVKzIwMjAsIFUrMjBBMC0yMEFCLCBVKzIwQUQtMjBDRiwgVSsyMTEzLCBVKzJDNjAtMkM3RiwgVStBNzIwLUE3RkY7XG59XG5cbi8qIGxhdGluICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIk9wZW4gU2FucyBSZWd1bGFyXCIpLCBsb2NhbChcIk9wZW5TYW5zLVJlZ3VsYXJcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbThZYUdzMTI2TWlacEJBLVVGVlowYi53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDAwMC0wMEZGLCBVKzAxMzEsIFUrMDE1Mi0wMTUzLCBVKzAyQkItMDJCQywgVSswMkM2LCBVKzAyREEsIFUrMDJEQywgVSsyMDAwLTIwNkYsIFUrMjA3NCwgVSsyMEFDLCBVKzIxMjIsIFUrMjE5MSwgVSsyMTkzLCBVKzIyMTIsIFUrMjIxNSwgVStGRUZGLCBVK0ZGRkQ7XG59XG5cbi8qIGN5cmlsbGljLWV4dCAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgQm9sZFwiKSwgbG9jYWwoXCJPcGVuU2Fucy1Cb2xkXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW01WWFHczEyNk1pWnBCQS1VTjdyZ09YLWhwT3FjLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswNDYwLTA1MkYsIFUrMUM4MC0xQzg4LCBVKzIwQjQsIFUrMkRFMC0yREZGLCBVK0E2NDAtQTY5RiwgVStGRTJFLUZFMkY7XG59XG5cbi8qIGN5cmlsbGljICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIk9wZW4gU2FucyBCb2xkXCIpLCBsb2NhbChcIk9wZW5TYW5zLUJvbGRcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbTVZYUdzMTI2TWlacEJBLVVON3JnT1Z1aHBPcWMud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzA0MDAtMDQ1RiwgVSswNDkwLTA0OTEsIFUrMDRCMC0wNEIxLCBVKzIxMTY7XG59XG5cbi8qIGdyZWVrLWV4dCAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgQm9sZFwiKSwgbG9jYWwoXCJPcGVuU2Fucy1Cb2xkXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW01WWFHczEyNk1pWnBCQS1VTjdyZ09YdWhwT3FjLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSsxRjAwLTFGRkY7XG59XG5cbi8qIGdyZWVrICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIk9wZW4gU2FucyBCb2xkXCIpLCBsb2NhbChcIk9wZW5TYW5zLUJvbGRcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbTVZYUdzMTI2TWlacEJBLVVON3JnT1VlaHBPcWMud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAzNzAtMDNGRjtcbn1cblxuLyogdmlldG5hbWVzZSAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgQm9sZFwiKSwgbG9jYWwoXCJPcGVuU2Fucy1Cb2xkXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW01WWFHczEyNk1pWnBCQS1VTjdyZ09YZWhwT3FjLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswMTAyLTAxMDMsIFUrMDExMC0wMTExLCBVKzFFQTAtMUVGOSwgVSsyMEFCO1xufVxuXG4vKiBsYXRpbi1leHQgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiT3BlbiBTYW5zIEJvbGRcIiksIGxvY2FsKFwiT3BlblNhbnMtQm9sZFwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtNVlhR3MxMjZNaVpwQkEtVU43cmdPWE9ocE9xYy53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDEwMC0wMjRGLCBVKzAyNTksIFUrMUUwMC0xRUZGLCBVKzIwMjAsIFUrMjBBMC0yMEFCLCBVKzIwQUQtMjBDRiwgVSsyMTEzLCBVKzJDNjAtMkM3RiwgVStBNzIwLUE3RkY7XG59XG5cbi8qIGxhdGluICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIk9wZW4gU2FucyBCb2xkXCIpLCBsb2NhbChcIk9wZW5TYW5zLUJvbGRcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbTVZYUdzMTI2TWlacEJBLVVON3JnT1V1aHAud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAwMDAtMDBGRiwgVSswMTMxLCBVKzAxNTItMDE1MywgVSswMkJCLTAyQkMsIFUrMDJDNiwgVSswMkRBLCBVKzAyREMsIFUrMjAwMC0yMDZGLCBVKzIwNzQsIFUrMjBBQywgVSsyMTIyLCBVKzIxOTEsIFUrMjE5MywgVSsyMjEyLCBVKzIyMTUsIFUrRkVGRiwgVStGRkZEO1xufVxuXG4vKipcclxuICogQHNlY3Rpb24gTm9ybWFsaXplLmNzc1xyXG4gKiBOb3JtYWxpemUuY3NzIGJhc2Ugd2l0aCBjdXN0b20gY29kZS5cclxuICogQWRkaXRpb25hbCBub3JtYWxpemUgc3R5bGVzIGluY29ycG9yYXRlZCB0aHJvdWdob3V0IGNvbXBvbmVudHMuXHJcbiAqIEBsaW5rIGh0dHA6Ly9uZWNvbGFzLmdpdGh1Yi5pby9ub3JtYWxpemUuY3NzL1xyXG4gKi9cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIHRhcCBkZWxheSBpbiB3ZWJraXRcclxuICogQGxpbmsgaHR0cHM6Ly9tZWRpdW0uY29tL0BhZGFjdGlvL2RlbGF5LWE5ZGY5ZWRjZWVmMyMuN2RtYmwzeG93XHJcbiAqL1xuYSxcbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEsXG5sYWJlbCxcbnN1bW1hcnkge1xuICB0b3VjaC1hY3Rpb246IG1hbmlwdWxhdGlvbjtcbn1cblxuLyoqXHJcbiAqIEFkZCBib3ggc2l6aW5nIHRvIGV2ZXJ5dGhpbmdcclxuICogQGxpbmsgaHR0cDovL3d3dy5wYXVsaXJpc2guY29tLzIwMTIvYm94LXNpemluZy1ib3JkZXItYm94LWZ0dy9cclxuICovXG4qLFxuKjpiZWZvcmUsXG4qOmFmdGVyIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLyoqXHJcbiAqIDEuIEZvcmNlIHNjcm9sbGJhciBkaXNwbGF5IHRvIHByZXZlbnQganVtcGluZyBvbiBwYWdlcy5cclxuICogMi4gUHJldmVudCBpT1MgdGV4dCBzaXplIGFkanVzdCBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2UsIHdpdGhvdXQgZGlzYWJsaW5nXHJcbiAqICAgIHVzZXIgem9vbS5cclxuICovXG5odG1sIHtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICAvKiAxICovXG4gIHRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbn1cblxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxyXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxyXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxyXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIGluIElFIDEwLzExXHJcbiAqIGFuZCBGaXJlZm94LlxyXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxyXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmNpdGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyoqXHJcbiAqIENvcnJlY3QgYGlubGluZS1ibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA4LzkuXHJcbiAqL1xuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvKiAxICovXG59XG5cbi8qKlxyXG4gKiBOb3JtYWxpemUgdmVydGljYWwgYWxpZ25tZW50IG9mIGBwcm9ncmVzc2AgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXHJcbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxyXG4gKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxyXG4gKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxyXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXHJcbiAqIFByZXZlbnQgaW1nIGFuZCB2aWRlbyBlbGVtZW50cyBmcm9tIHNwaWxsaW5nIG91dHNpZGUgb2YgdGhlIHBhZ2Ugb24gc21hbGxlciBzY3JlZW5zLlxyXG4gKi9cbmltZyxcbnZpZGVvIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvYmplY3QtZml0OiBjb3Zlcjtcbn1cblxuLyoqXHJcbiAqIFByZXZlbnQgaWZyYW1lLCBvYmplY3QsIGFuZCBlbWJlZCBlbGVtZW50cyBmcm9tIHNwaWxsaW5nIG91dHNpZGUgb2YgdGhlIHBhZ2Ugb24gc21hbGxlciBzY3JlZW5zLlxyXG4gKiBoZWlnaHQ6IGF1dG8gY2F1c2VzIGlmcmFtZXMgdG8gc211c2gsIHNvIGl0J3Mgb21pdHRlZCBoZXJlLlxyXG4gKi9cbmlmcmFtZSxcbm9iamVjdCxcbmVtYmVkIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG4vKipcclxuICogSGlkZSB0aGUgdGVtcGxhdGUgZWxlbWVudCBpbiBJRSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxyXG4gKi9cbi8qKlxyXG4gKiAxLiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cclxuICogMi4gUHJldmVudHMgSUUgZnJvbSBtYWtpbmcgc2NhbGVkIGltYWdlcyBsb29rIGxpa2UgY3JhcFxyXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgLyogMSAqL1xuICAtbXMtaW50ZXJwb2xhdGlvbi1tb2RlOiBiaWN1YmljO1xuICAvKiAyICovXG59XG5cbi8qKlxyXG4gKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cclxuICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qKlxyXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBtYXJnaW4uXHJcbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcclxuICogQHdvcmthcm91bmQgUmVtb3ZlIGZvY3VzIGZyb20gPG1haW4+IGVsZW1lbnQgd2hlbiB1c2luZyB0YWJpbmRleD1cIi0xXCIgaGFjayBmb3Igc2tpcG5hdiBsaW5rXHJcbiAqIEBsaW5rIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD0zNzcyMVxyXG4gKi9cblt0YWJpbmRleD1cIi0xXCJdOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuLyoqXHJcbiAqIEBzZWN0aW9uIEdyaWRcclxuICogU3RydWN0dXJlIGFuZCBsYXlvdXRcclxuICovXG4vKipcclxuICogQmFzZSBncmlkIHN0eWxlczogc2luZ2xlIGNvbHVtblxyXG4gKi9cbi5jb250YWluZXIge1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXgtd2lkdGg6IDgwZW07XG4gIHdpZHRoOiA4OCU7XG59XG5cbi5yb3cge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIG1hcmdpbi1sZWZ0OiAtMS40JTtcbiAgbWFyZ2luLXJpZ2h0OiAtMS40JTtcbn1cblxuLm5vLWxhdC1tYXJnaW5zIHtcbiAgbWFyZ2luLWxlZnQ6IDAgIWltcG9ydGFudDtcbiAgbWFyZ2luLXJpZ2h0OiAwICFpbXBvcnRhbnQ7XG59XG5cbi8qKlxyXG4gKiBBbGlnbm1lbnRcclxuICovXG4vKiBGbG9hdCBjb250ZW50IHRvIHRoZSB0b3AgKi9cbi5yb3ctdG9wIHtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG59XG5cbi8qIEZsb2F0IGNvbnRlbnQgaW4gdGhlIG1pZGRsZSAqL1xuLnJvdy1taWRkbGUge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4vKiBQdXNoIGNvbnRlbnQgdG8gdGhlIGJvdHRvbSAqL1xuLnJvdy1ib3R0b20ge1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG59XG5cbi8qIE1vdmUgY29udGVudCB0byB0aGUgc3RhcnQgb2YgdGhlIHJvdyAqL1xuLnJvdy1zdGFydCB7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbn1cblxuLyogRmxvYXQgY29udGVudCBpbiB0aGUgY2VudGVyIG9mIHRoZSByb3cgKi9cbi5yb3ctY2VudGVyIHtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi8qIE1vdmUgY29udGVudCB0byB0aGUgZW5kIG9mIHRoZSByb3cgKi9cbi5yb3ctZW5kIHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLyogQWRkIGV2ZW4gc3BhY2luZyBhcm91bmQgZWFjaCBpdGVtICovXG4ucm93LWFyb3VuZCB7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xufVxuXG4vKiBBZGQgZXZlbiBzcGFjaW5nIGJldHdlZW4gaXRlbXMgKi9cbi5yb3ctYmV0d2VlbiB7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLyogUmV2ZXJzZSBjb250ZW50IG9yZGVyICovXG4ucm93LXJldmVyc2Uge1xuICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XG59XG5cbi5ncmlkLXRlbnRoLCAuZ3JpZC1wMTYsIC5ncmlkLWZpZnRoLCAuZ3JpZC1mb3VydGgsIC5ncmlkLXAyOCwgLmdyaWQtdGhyZWUtdGVudGgsIC5ncmlkLXRoaXJkLCAuZ3JpZC1mb3VyLXRlbnRoLCAuZ3JpZC1oYWxmLCAuZ3JpZC10d28tdGhpcmRzLCAuZ3JpZC10aHJlZS1mb3VydGhzLCAuZ3JpZC1mdWxsLCAuZ3JpZC1hdXRvIHtcbiAgZmxleC1iYXNpczogMTAwJTtcbiAgbWFyZ2luLWxlZnQ6IDEuNCU7XG4gIG1hcmdpbi1yaWdodDogMS40JTtcbn1cblxuLyoqXHJcbiAqIEFkZCBjb2x1bW5zIHRvIGdyaWQgb24gYmlnZ2VyIHNjcmVlbnNcclxuICovXG5AbWVkaWEgKG1pbi13aWR0aDogMjBlbSkge1xuICAucm93LnJvdy1zdGFydC14c21hbGwge1xuICAgIGZsZXgtd3JhcDogbm93cmFwO1xuICB9XG4gIC5yb3ctd3JhcC5yb3ctc3RhcnQteHNtYWxsIHtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gIH1cbiAgLnJvdy13cmFwLnJvdy1zdGFydC14c21hbGwgLmdyaWQtdGVudGgge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXhzbWFsbCAuZ3JpZC1wMTYge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXhzbWFsbCAuZ3JpZC1maWZ0aCB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMS40JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjQlO1xuICB9XG4gIC5yb3ctd3JhcC5yb3ctc3RhcnQteHNtYWxsIC5ncmlkLWZvdXJ0aCB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMS40JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjQlO1xuICB9XG4gIC5yb3ctd3JhcC5yb3ctc3RhcnQteHNtYWxsIC5ncmlkLXAyOCB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMS40JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjQlO1xuICB9XG4gIC5yb3ctd3JhcC5yb3ctc3RhcnQteHNtYWxsIC5ncmlkLXRocmVlLXRlbnRoIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwLnJvdy1zdGFydC14c21hbGwgLmdyaWQtdGhpcmQge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXhzbWFsbCAuZ3JpZC1mb3VyLXRlbnRoIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwLnJvdy1zdGFydC14c21hbGwgLmdyaWQtaGFsZiB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMS40JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjQlO1xuICB9XG4gIC5yb3ctd3JhcC5yb3ctc3RhcnQteHNtYWxsIC5ncmlkLXR3by10aGlyZHMge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXhzbWFsbCAuZ3JpZC10aHJlZS1mb3VydGhzIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwLnJvdy1zdGFydC14c21hbGwgLmdyaWQtZnVsbCB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMS40JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjQlO1xuICB9XG4gIC5yb3ctd3JhcC5yb3ctc3RhcnQteHNtYWxsIC5ncmlkLWF1dG8ge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXN0YXJ0LXhzbWFsbCAuZ3JpZC1hdXRvIHtcbiAgICBmbGV4LWJhc2lzOiBhdXRvO1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgfVxuICAucm93LXN0YXJ0LXhzbWFsbCAuZ3JpZC10ZW50aCB7XG4gICAgZmxleC1iYXNpczogMTAlO1xuICAgIG1heC13aWR0aDogMTAlO1xuICB9XG4gIC5yb3ctc3RhcnQteHNtYWxsIC5ncmlkLXAxNiB7XG4gICAgZmxleC1iYXNpczogMTYlO1xuICAgIG1heC13aWR0aDogMTYlO1xuICB9XG4gIC5yb3ctc3RhcnQteHNtYWxsIC5ncmlkLWZpZnRoIHtcbiAgICBmbGV4LWJhc2lzOiAyMCU7XG4gICAgbWF4LXdpZHRoOiAyMCU7XG4gIH1cbiAgLnJvdy1zdGFydC14c21hbGwgLmdyaWQtZm91cnRoIHtcbiAgICBmbGV4LWJhc2lzOiAyNSU7XG4gICAgbWF4LXdpZHRoOiAyNSU7XG4gIH1cbiAgLnJvdy1zdGFydC14c21hbGwgLmdyaWQtcDI4IHtcbiAgICBmbGV4LWJhc2lzOiAyOCU7XG4gICAgbWF4LXdpZHRoOiAyOCU7XG4gIH1cbiAgLnJvdy1zdGFydC14c21hbGwgLmdyaWQtdGhyZWUtdGVudGgge1xuICAgIGZsZXgtYmFzaXM6IDMwJTtcbiAgICBtYXgtd2lkdGg6IDMwJTtcbiAgfVxuICAucm93LXN0YXJ0LXhzbWFsbCAuZ3JpZC10aGlyZCB7XG4gICAgZmxleC1iYXNpczogMzMuMzMzMzMlO1xuICAgIG1heC13aWR0aDogMzMuMzMzMzMlO1xuICB9XG4gIC5yb3ctc3RhcnQteHNtYWxsIC5ncmlkLWZvdXItdGVudGgge1xuICAgIGZsZXgtYmFzaXM6IDQwJTtcbiAgICBtYXgtd2lkdGg6IDQwJTtcbiAgfVxuICAucm93LXN0YXJ0LXhzbWFsbCAuZ3JpZC1oYWxmIHtcbiAgICBmbGV4LWJhc2lzOiA1MCU7XG4gICAgbWF4LXdpZHRoOiA1MCU7XG4gIH1cbiAgLnJvdy1zdGFydC14c21hbGwgLmdyaWQtdHdvLXRoaXJkcyB7XG4gICAgZmxleC1iYXNpczogNjYuNjY2NjclO1xuICAgIG1heC13aWR0aDogNjYuNjY2NjclO1xuICB9XG4gIC5yb3ctc3RhcnQteHNtYWxsIC5ncmlkLXRocmVlLWZvdXJ0aHMge1xuICAgIGZsZXgtYmFzaXM6IDc1JTtcbiAgICBtYXgtd2lkdGg6IDc1JTtcbiAgfVxuICAucm93LXN0YXJ0LXhzbWFsbCAuZ3JpZC1mdWxsIHtcbiAgICBmbGV4LWJhc2lzOiAxMDAlO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgfVxuICAucm93LXN0YXJ0LXhzbWFsbCAuZ3JpZC1maXJzdCB7XG4gICAgLXdlYmtpdC1ib3gtb3JkaW5hbC1ncm91cDogMDtcbiAgICBvcmRlcjogLTE7XG4gIH1cbiAgLnJvdy1zdGFydC14c21hbGwgLmdyaWQtbGFzdCB7XG4gICAgLXdlYmtpdC1ib3gtb3JkaW5hbC1ncm91cDogMjtcbiAgICBvcmRlcjogMTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMzBlbSkge1xuICAucm93LnJvdy1zdGFydC1zbWFsbCB7XG4gICAgZmxleC13cmFwOiBub3dyYXA7XG4gIH1cbiAgLnJvdy13cmFwLnJvdy1zdGFydC1zbWFsbCB7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICB9XG4gIC5yb3ctd3JhcC5yb3ctc3RhcnQtc21hbGwgLmdyaWQtdGVudGgge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLXAxNiB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMS40JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjQlO1xuICB9XG4gIC5yb3ctd3JhcC5yb3ctc3RhcnQtc21hbGwgLmdyaWQtZmlmdGgge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLWZvdXJ0aCB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMS40JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjQlO1xuICB9XG4gIC5yb3ctd3JhcC5yb3ctc3RhcnQtc21hbGwgLmdyaWQtcDI4IHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwLnJvdy1zdGFydC1zbWFsbCAuZ3JpZC10aHJlZS10ZW50aCB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMS40JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjQlO1xuICB9XG4gIC5yb3ctd3JhcC5yb3ctc3RhcnQtc21hbGwgLmdyaWQtdGhpcmQge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLWZvdXItdGVudGgge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLWhhbGYge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLXR3by10aGlyZHMge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLXRocmVlLWZvdXJ0aHMge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLWZ1bGwge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLWF1dG8ge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLWF1dG8ge1xuICAgIGZsZXgtYmFzaXM6IGF1dG87XG4gICAgZmxleC1ncm93OiAxO1xuICB9XG4gIC5yb3ctc3RhcnQtc21hbGwgLmdyaWQtdGVudGgge1xuICAgIGZsZXgtYmFzaXM6IDEwJTtcbiAgICBtYXgtd2lkdGg6IDEwJTtcbiAgfVxuICAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLXAxNiB7XG4gICAgZmxleC1iYXNpczogMTYlO1xuICAgIG1heC13aWR0aDogMTYlO1xuICB9XG4gIC5yb3ctc3RhcnQtc21hbGwgLmdyaWQtZmlmdGgge1xuICAgIGZsZXgtYmFzaXM6IDIwJTtcbiAgICBtYXgtd2lkdGg6IDIwJTtcbiAgfVxuICAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLWZvdXJ0aCB7XG4gICAgZmxleC1iYXNpczogMjUlO1xuICAgIG1heC13aWR0aDogMjUlO1xuICB9XG4gIC5yb3ctc3RhcnQtc21hbGwgLmdyaWQtcDI4IHtcbiAgICBmbGV4LWJhc2lzOiAyOCU7XG4gICAgbWF4LXdpZHRoOiAyOCU7XG4gIH1cbiAgLnJvdy1zdGFydC1zbWFsbCAuZ3JpZC10aHJlZS10ZW50aCB7XG4gICAgZmxleC1iYXNpczogMzAlO1xuICAgIG1heC13aWR0aDogMzAlO1xuICB9XG4gIC5yb3ctc3RhcnQtc21hbGwgLmdyaWQtdGhpcmQge1xuICAgIGZsZXgtYmFzaXM6IDMzLjMzMzMzJTtcbiAgICBtYXgtd2lkdGg6IDMzLjMzMzMzJTtcbiAgfVxuICAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLWZvdXItdGVudGgge1xuICAgIGZsZXgtYmFzaXM6IDQwJTtcbiAgICBtYXgtd2lkdGg6IDQwJTtcbiAgfVxuICAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLWhhbGYge1xuICAgIGZsZXgtYmFzaXM6IDUwJTtcbiAgICBtYXgtd2lkdGg6IDUwJTtcbiAgfVxuICAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLXR3by10aGlyZHMge1xuICAgIGZsZXgtYmFzaXM6IDY2LjY2NjY3JTtcbiAgICBtYXgtd2lkdGg6IDY2LjY2NjY3JTtcbiAgfVxuICAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLXRocmVlLWZvdXJ0aHMge1xuICAgIGZsZXgtYmFzaXM6IDc1JTtcbiAgICBtYXgtd2lkdGg6IDc1JTtcbiAgfVxuICAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLWZ1bGwge1xuICAgIGZsZXgtYmFzaXM6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG4gIC5yb3ctc3RhcnQtc21hbGwgLmdyaWQtZmlyc3Qge1xuICAgIC13ZWJraXQtYm94LW9yZGluYWwtZ3JvdXA6IDA7XG4gICAgb3JkZXI6IC0xO1xuICB9XG4gIC5yb3ctc3RhcnQtc21hbGwgLmdyaWQtbGFzdCB7XG4gICAgLXdlYmtpdC1ib3gtb3JkaW5hbC1ncm91cDogMjtcbiAgICBvcmRlcjogMTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNDBlbSkge1xuICAucm93IHtcbiAgICBmbGV4LXdyYXA6IG5vd3JhcDtcbiAgfVxuICAucm93LXdyYXAge1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgfVxuICAucm93LXdyYXAgLmdyaWQtdGVudGgge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAgLmdyaWQtcDE2IHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwIC5ncmlkLWZpZnRoIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwIC5ncmlkLWZvdXJ0aCB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMS40JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjQlO1xuICB9XG4gIC5yb3ctd3JhcCAuZ3JpZC1wMjgge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAgLmdyaWQtdGhyZWUtdGVudGgge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAgLmdyaWQtdGhpcmQge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAgLmdyaWQtZm91ci10ZW50aCB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMS40JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjQlO1xuICB9XG4gIC5yb3ctd3JhcCAuZ3JpZC1oYWxmIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwIC5ncmlkLXR3by10aGlyZHMge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAgLmdyaWQtdGhyZWUtZm91cnRocyB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMS40JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjQlO1xuICB9XG4gIC5yb3ctd3JhcCAuZ3JpZC1mdWxsIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwIC5ncmlkLWF1dG8ge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAuZ3JpZC1hdXRvIHtcbiAgICBmbGV4LWJhc2lzOiBhdXRvO1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgfVxuICAuZ3JpZC10ZW50aCB7XG4gICAgZmxleC1iYXNpczogMTAlO1xuICAgIG1heC13aWR0aDogMTAlO1xuICB9XG4gIC5ncmlkLXAxNiB7XG4gICAgZmxleC1iYXNpczogMTYlO1xuICAgIG1heC13aWR0aDogMTYlO1xuICB9XG4gIC5ncmlkLWZpZnRoIHtcbiAgICBmbGV4LWJhc2lzOiAyMCU7XG4gICAgbWF4LXdpZHRoOiAyMCU7XG4gIH1cbiAgLmdyaWQtZm91cnRoIHtcbiAgICBmbGV4LWJhc2lzOiAyNSU7XG4gICAgbWF4LXdpZHRoOiAyNSU7XG4gIH1cbiAgLmdyaWQtcDI4IHtcbiAgICBmbGV4LWJhc2lzOiAyOCU7XG4gICAgbWF4LXdpZHRoOiAyOCU7XG4gIH1cbiAgLmdyaWQtdGhyZWUtdGVudGgge1xuICAgIGZsZXgtYmFzaXM6IDMwJTtcbiAgICBtYXgtd2lkdGg6IDMwJTtcbiAgfVxuICAuZ3JpZC10aGlyZCB7XG4gICAgZmxleC1iYXNpczogMzMuMzMzMzMlO1xuICAgIG1heC13aWR0aDogMzMuMzMzMzMlO1xuICB9XG4gIC5ncmlkLWZvdXItdGVudGgge1xuICAgIGZsZXgtYmFzaXM6IDQwJTtcbiAgICBtYXgtd2lkdGg6IDQwJTtcbiAgfVxuICAuZ3JpZC1oYWxmIHtcbiAgICBmbGV4LWJhc2lzOiA1MCU7XG4gICAgbWF4LXdpZHRoOiA1MCU7XG4gIH1cbiAgLmdyaWQtdHdvLXRoaXJkcyB7XG4gICAgZmxleC1iYXNpczogNjYuNjY2NjclO1xuICAgIG1heC13aWR0aDogNjYuNjY2NjclO1xuICB9XG4gIC5ncmlkLXRocmVlLWZvdXJ0aHMge1xuICAgIGZsZXgtYmFzaXM6IDc1JTtcbiAgICBtYXgtd2lkdGg6IDc1JTtcbiAgfVxuICAuZ3JpZC1mdWxsIHtcbiAgICBmbGV4LWJhc2lzOiAxMDAlO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgfVxuICAub2Zmc2V0LXRlbnRoIHtcbiAgICBtYXJnaW4tbGVmdDogMTAlO1xuICB9XG4gIC5vZmZzZXQtcDE2IHtcbiAgICBtYXJnaW4tbGVmdDogMTYlO1xuICB9XG4gIC5vZmZzZXQtZmlmdGgge1xuICAgIG1hcmdpbi1sZWZ0OiAyMCU7XG4gIH1cbiAgLm9mZnNldC1mb3VydGgge1xuICAgIG1hcmdpbi1sZWZ0OiAyNSU7XG4gIH1cbiAgLm9mZnNldC1wMjgge1xuICAgIG1hcmdpbi1sZWZ0OiAyOCU7XG4gIH1cbiAgLm9mZnNldC10aHJlZS10ZW50aCB7XG4gICAgbWFyZ2luLWxlZnQ6IDMwJTtcbiAgfVxuICAub2Zmc2V0LXRoaXJkIHtcbiAgICBtYXJnaW4tbGVmdDogMzMuMzMzMzMlO1xuICB9XG4gIC5vZmZzZXQtZm91ci10ZW50aCB7XG4gICAgbWFyZ2luLWxlZnQ6IDQwJTtcbiAgfVxuICAub2Zmc2V0LWhhbGYge1xuICAgIG1hcmdpbi1sZWZ0OiA1MCU7XG4gIH1cbiAgLm9mZnNldC10d28tdGhpcmRzIHtcbiAgICBtYXJnaW4tbGVmdDogNjYuNjY2NjclO1xuICB9XG4gIC5vZmZzZXQtdGhyZWUtZm91cnRocyB7XG4gICAgbWFyZ2luLWxlZnQ6IDc1JTtcbiAgfVxuICAub2Zmc2V0LWZ1bGwge1xuICAgIG1hcmdpbi1sZWZ0OiAxMDAlO1xuICB9XG4gIC5ncmlkLWZpcnN0IHtcbiAgICAtd2Via2l0LWJveC1vcmRpbmFsLWdyb3VwOiAwO1xuICAgIG9yZGVyOiAtMTtcbiAgfVxuICAuZ3JpZC1sYXN0IHtcbiAgICAtd2Via2l0LWJveC1vcmRpbmFsLWdyb3VwOiAyO1xuICAgIG9yZGVyOiAxO1xuICB9XG59XG5cbi8qKlxyXG4gKiBAc2VjdGlvbiBUeXBvZ3JhcGh5XHJcbiAqIFNldHMgZm9udCBzdHlsZXMgZm9yIGVudGlyZSBzaXRlXHJcbiAqL1xuKjo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg1MywgMjA3LCAyMTIsIDAuMyk7XG59XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgY29sb3I6ICM2NjY7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEwMCU7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0MGVtKSB7XG4gIGJvZHkge1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU2MjU7XG4gIH1cbn1cblxubWFpbiB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xufVxuXG5wIHtcbiAgbWFyZ2luOiAwIDAgMS41NjI1ZW07XG59XG5cbi51bmRlcmxpbmUge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cblxuLyoqXHJcbiAqIEh5cGVybGluayBzdHlsaW5nXHJcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cclxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxyXG4gKi9cbmEge1xuICBjb2xvcjogIzY2NjtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0cztcbiAgLyogMiAqL1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIC8qKlxyXG5cdCAqIEltcHJvdmUgcmVhZGFiaWxpdHkgd2hlbiBmb2N1c2VkIGFuZCBhbHNvIG1vdXNlIGhvdmVyZWQgaW4gYWxsIGJyb3dzZXJzLlxyXG5cdCAqL1xufVxuXG5hOmFjdGl2ZSwgYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7XG59XG5cbi8qKlxyXG4gKiBMaXN0IHN0eWxpbmdcclxuICovXG51bCxcbm9sIHtcbiAgbWFyZ2luOiAwIDAgMS41NjI1ZW0gMmVtO1xuICBwYWRkaW5nOiAwO1xufVxuXG51bCB1bCxcbnVsIG9sLFxub2wgb2wsXG5vbCB1bCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbmRsLFxuZGQge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmRkIHtcbiAgbWFyZ2luLWJvdHRvbTogMS41NjI1ZW07XG59XG5cbmR0IHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qKlxyXG4gKiBAYnVnZml4IFByZXZlbnQgd2Via2l0IGZyb20gcmVtb3ZpbmcgbGlzdCBzZW1hbnRpY3NcclxuICogMS4gQWRkIGEgbm9uLWJyZWFraW5nIHNwYWNlXHJcbiAqIDIuIE1ha2Ugc3VyZSBpdCBkb2Vzbid0IG1lc3MgdXAgdGhlIERPTSBmbG93XHJcbiAqL1xuLmxpc3QtdW5zdHlsZWQsIC5saXN0LWlubGluZSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbi5saXN0LXVuc3R5bGVkID4gbGk6YmVmb3JlLCAubGlzdC1pbmxpbmUgPiBsaTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcMjAwQlwiO1xuICAvKiAxICovXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgLyogMiAqL1xufVxuXG4vKipcclxuICogUmVtb3ZlcyBsaXN0IHN0eWxpbmcuXHJcbiAqIEZvciBzZW1hbnRpYyByZWFzb25zLCBzaG91bGQgb25seSBiZSB1c2VkIG9uIHVub3JkZXJlZCBsaXN0cy5cclxuICovXG4ubGlzdC11bnN0eWxlZCB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuXG4vKipcclxuICogRGlzcGxheSBsaXN0cyBvbiBhIHNpbmdsZSBsaW5lLlxyXG4gKi9cbi5saXN0LWlubGluZSB7XG4gIG1hcmdpbi1sZWZ0OiAtMC41ZW07XG4gIG1hcmdpbi1yaWdodDogLTAuNWVtO1xuICBwYWRkaW5nOiAwO1xufVxuXG4ubGlzdC1pbmxpbmUgPiBsaSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLWxlZnQ6IDAuNWVtO1xuICBtYXJnaW4tcmlnaHQ6IDAuNWVtO1xufVxuXG4vKipcclxuICogSGVhZGluZyBzdHlsaW5nIGZvciBoMSB0aHJvdWdoIGg2IGVsZW1lbnRzLlxyXG4gKiBIZWFkaW5nIGNsYXNzIGxldHMgeW91IHVzZSBvbmUgaGVhZGluZyB0eXBlIGZvciBzZW1hbnRpY3MsIGJ1dCBzdHlsZSBpdCBhcyBhbm90aGVyIGhlYWRpbmcgdHlwZS5cclxuICovXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgbWFyZ2luOiAwIDAgMWVtO1xuICBwYWRkaW5nOiAxZW0gMCAwO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIGZvbnQtZmFtaWx5OiBcIkJhbG9vIEJoYWluYVwiLCBjdXJzaXZlO1xufVxuXG5oMSxcbi5oMSB7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG4gIHBhZGRpbmctdG9wOiAuNWVtO1xuICBmb250LWZhbWlseTogXCJCYWxvbyBCaGFpbmFcIiwgY3Vyc2l2ZTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQwZW0pIHtcbiAgaDEsXG4gIC5oMSB7XG4gICAgZm9udC1zaXplOiAxLjc1ZW07XG4gIH1cbn1cblxuaDIsXG4uaDIge1xuICBmb250LXNpemU6IDEuMzEyNWVtO1xufVxuXG5oMyxcbi5oMyB7XG4gIGZvbnQtc2l6ZTogMS4xODc1ZW07XG59XG5cbmg0LCBoNSwgaDYsXG4uaDQsIC5oNSwgLmg2IHtcbiAgZm9udC1zaXplOiAxZW07XG59XG5cbmg0LFxuLmg0IHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLyoqXHJcbiAqIExpbmVzLCBRdW90ZXMgYW5kIEVtcGhhc2lzXHJcbiAqL1xuLyoqXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXHJcbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxyXG4gKi9cbmhyIHtcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2U1ZTVlNTtcbiAgYm9yZGVyLWJvdHRvbTogMCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAyZW0gYXV0bztcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi9cbn1cblxuLyoqXHJcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxyXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXHJcbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxyXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gRmlyZWZveCAzOS0uXHJcbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXHJcbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqL1xufVxuXG4vKipcclxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxyXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXHJcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXHJcbiAqL1xubWFyayB7XG4gIGJhY2tncm91bmQ6ICNmYmY5Yzk7XG4gIGNvbG9yOiAjMDAwMDAwO1xufVxuXG4vKipcclxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXHJcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGFmZmVjdGluZyBgbGluZS1oZWlnaHRgIGluIGFsbCBicm93c2Vycy5cclxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG4vKipcclxuICogQmxvY2txdW90ZXNcclxuICovXG5ibG9ja3F1b3RlIHtcbiAgZm9udC1zaXplOiAxLjE4NzVlbTtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBtYXJnaW46IDAgMCAxLjU2MjVlbTtcbiAgcGFkZGluZy1sZWZ0OiAwLjg0MjEwNTI2MzJlbTtcbiAgcGFkZGluZy1yaWdodDogMC44NDIxMDUyNjMyZW07XG59XG5cbmJsb2NrcXVvdGUgY2l0ZSB7XG4gIGNvbG9yOiAjNjY2NjY2O1xuICBmb250LXNpemU6IDAuODQyMTA1MjYzMmVtO1xuICBwYWRkaW5nLXRvcDogMWVtO1xufVxuXG5ibG9ja3F1b3RlLFxucSB7XG4gIHF1b3Rlczogbm9uZTtcbn1cblxuYmxvY2txdW90ZTpiZWZvcmUsXG5ibG9ja3F1b3RlOmFmdGVyLFxucTpiZWZvcmUsXG5xOmFmdGVyIHtcbiAgY29udGVudDogJyc7XG59XG5cbi8qKlxyXG4gKiBAc2VjdGlvbiBDb2RlXHJcbiAqIFN0eWxpbmcgZm9yIGNvZGUgYW5kIHByZWZvcm1hdHRlZCB0ZXh0LlxyXG4gKi9cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCIsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAwLjg3NWVtO1xufVxuXG5jb2RlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ZjdmNztcbiAgY29sb3I6ICNkZDExNDQ7XG4gIHBhZGRpbmc6IDAuMjVlbTtcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xufVxuXG5wcmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0O1xuICBkaXNwbGF5OiBibG9jaztcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgbWFyZ2luLWJvdHRvbTogMS41NjI1ZW07XG4gIG92ZXJmbG93OiBhdXRvO1xuICBwYWRkaW5nOiAwLjgxMjVlbTtcbiAgdGFiLXNpemU6IDQ7XG4gIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcbiAgd29yZC1icmVhazogYnJlYWstYWxsO1xufVxuXG5wcmUgY29kZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDA7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250LXNpemU6IDFlbTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXHJcbiAqIEBzZWN0aW9uIEJ1dHRvbnNcclxuICogU3R5bGluZyBmb3IgQ1NTIGJ1dHRvbnMuXHJcbiAqL1xuLyoqXHJcbiAqIFByaW1hcnkgYnV0dG9uc1xyXG4gKi9cbi5idG4ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHJnYmEoNTMsIDIwNywgMjEyLCAwLjkpLCByZ2JhKDIwLCAxNjEsIDIzMCwgMC45KSk7XG4gIGJhY2tncm91bmQtc2l6ZTogMjAwJTtcbiAgYm9yZGVyOiAycHggd2hpdGUgc29saWQ7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXNpemU6IDFlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgcGFkZGluZzogLjVlbSAxZW07XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgdHJhbnNpdGlvbjogLjVzO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJveC1zaGFkb3c6IDJweCAycHggOHB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbn1cblxuLmJ0bjpob3ZlciwgLmJ0bjphY3RpdmUge1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiByaWdodCBjZW50ZXI7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uYnRuLS1iaWcge1xuICBwYWRkaW5nOiAuN2VtIDEuMjVlbTtcbiAgZm9udC1zaXplOiAxLjI1ZW07XG59XG5cbi5idG4tLXRyYW5zcGFyZW50IHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCB0cmFuc3BhcmVudCA1MCUsIHJnYmEoNTMsIDIwNywgMjEyLCAwLjkpLCByZ2JhKDIwLCAxNjEsIDIzMCwgMC45KSk7XG59XG5cbi5idG4tLXRyYW5zcGFyZW50OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgY2VudGVyO1xufVxuXG4uYnRuLS1ncmVlbiB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzYyYWIwMyA1MCUsIHJnYmEoOTgsIDE3MSwgMywgMC45KSwgcmdiYSgwLCA3NywgMCwgMC45KSk7XG59XG5cbi5idG4tLWdyZWVuOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgY2VudGVyO1xufVxuXG4uYnRuLS1zbWFsbCB7XG4gIHBhZGRpbmc6IC4yNWVtIC41ZW07XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi8qKlxyXG4gKiBAc2VjdGlvbiBGb3Jtc1xyXG4gKiBTdHlsaW5nIGZvciBmb3JtIGVsZW1lbnRzLlxyXG4gKi9cbmZvcm0sXG5maWVsZHNldCB7XG4gIG1hcmdpbi1ib3R0b206IDEuNTYyNWVtO1xufVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxubGVnZW5kLFxubGFiZWwge1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgbWFyZ2luOiAwIDAgMC4zMTI1ZW07XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxyXG4gKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXHJcbiAqICAgIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxyXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxyXG4gKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cclxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBjb2xvcjogIzJlMmUyZTtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovXG4gIG1hcmdpbjogMDtcbiAgLyogMyAqL1xuICBwYWRkaW5nOiAwLjMxMjVlbTtcbn1cblxuLyoqXHJcbiAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxyXG4gKi9cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcclxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxyXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxyXG4gKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxyXG4gKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3guXHJcbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbmlucHV0LFxudGV4dGFyZWEsXG5zZWxlY3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgbWFyZ2luLWJvdHRvbTogMS4xODc1ZW07XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAuMjVlbSAuNWVtO1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgYm9yZGVyOiAycHggc29saWQgIzM1Y2ZkNDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQwZW0pIHtcbiAgaW5wdXQsXG4gIHRleHRhcmVhLFxuICBzZWxlY3Qge1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU2MjU7XG4gIH1cbn1cblxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIHdpZHRoOiBhdXRvO1xuICBtYXJnaW46IGF1dG87XG59XG5cbi8qKlxyXG4gKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXHJcbiAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxyXG4gKi9cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbmZvcm0gYnV0dG9uLFxuZm9ybSAuYnV0dG9uIHtcbiAgbWFyZ2luLWJvdHRvbTogMS4xODc1ZW07XG59XG5cbnRleHRhcmVhIHtcbiAgaGVpZ2h0OiAxMmVtO1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuW3R5cGU9XCJpbWFnZVwiXSxcblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGhlaWdodDogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogMC4zMTI1ZW07XG4gIHBhZGRpbmc6IDA7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG4vKipcclxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cclxuICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcclxuICogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxyXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbmlucHV0OmZvY3VzLFxuc2VsZWN0OmZvY3VzLFxudGV4dGFyZWE6Zm9jdXMge1xuICBib3JkZXItY29sb3I6IHJnYmEoODIsIDE2OCwgMjM2LCAwLjgpO1xuICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA3NSksIDAgMCAwLjVlbSByZ2JhKDgyLCAxNjgsIDIzNiwgMC42KTtcbiAgb3V0bGluZTogMDtcbiAgb3V0bGluZTogdGhpbiBkb3R0ZWQgXFw5O1xufVxuXG5bdHlwZT1cImZpbGVcIl06Zm9jdXMsXG5bdHlwZT1cImNoZWNrYm94XCJdOmZvY3VzLFxuc2VsZWN0OmZvY3VzIHtcbiAgb3V0bGluZTogdGhpbiBkb3R0ZWQ7XG4gIG91dGxpbmU6IDAuMzEyNWVtIGF1dG8gLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yO1xuICBvdXRsaW5lLW9mZnNldDogLTAuMTI1ZW07XG59XG5cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxyXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcclxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxyXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cclxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxyXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovXG59XG5cbi8qKlxyXG4gKiBJbmxpbmUgaW5wdXRzXHJcbiAqL1xuLmlucHV0LWlubGluZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgd2lkdGg6IGF1dG87XG59XG5cbi8qKlxyXG4gKiBDb25kZW5zZWQgaW5wdXRzXHJcbiAqL1xuLmlucHV0LWNvbmRlbnNlZCB7XG4gIHBhZGRpbmc6IDFweCAwLjMxMjVlbTtcbiAgZm9udC1zaXplOiAwLjkzNzVlbTtcbn1cblxuLyoqXHJcbiAqIFNlYXJjaFxyXG4gKi9cbi8qKlxyXG4gICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXHJcbiAgKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cclxuICAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqL1xufVxuXG4vKipcclxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXHJcbiAqIFNhZmFyaSAoYnV0IG5vdCBDaHJvbWUpIGNsaXBzIHRoZSBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHNlYXJjaCBpbnB1dCBoYXNcclxuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxyXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxyXG4gKiBDcmVhdGUgcm91bmRlZCBzZWFyY2ggYmFyXHJcbiAqL1xuLmlucHV0LXNlYXJjaCB7XG4gIHdpZHRoOiA4NSU7XG4gIHBhZGRpbmctbGVmdDogMC45Mzc1ZW07XG4gIHBhZGRpbmctcmlnaHQ6IDIuNWVtO1xuICBib3JkZXItcmFkaXVzOiAxLjMxMjVlbTtcbiAgdHJhbnNpdGlvbjogd2lkdGggMzAwbXMgZWFzZS1pbjtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQwZW0pIHtcbiAgLmlucHV0LXNlYXJjaCB7XG4gICAgd2lkdGg6IDY1JTtcbiAgfVxufVxuXG4vKipcclxuICogU3BlY2lhbCBzdHlsaW5nIGZvciBzZWFyY2ggaWNvbiBhcyBidXR0b25cclxuICovXG4uYnRuLXNlYXJjaCB7XG4gIGRpc3BsYXk6IGlubGluZTtcbiAgY29sb3I6ICM2NjY2NjY7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgbWFyZ2luLWxlZnQ6IC0yLjVlbTtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLmJ0bi1zZWFyY2ggLmljb24ge1xuICBmaWxsOiAjNjY2NjY2O1xufVxuXG4uYnRuLXNlYXJjaDpob3ZlciB7XG4gIGNvbG9yOiAjNDA0MDQwO1xufVxuXG4uYnRuLXNlYXJjaDpob3ZlciAuaWNvbiB7XG4gIGZpbGw6ICM0MDQwNDA7XG59XG5cbi8qKlxyXG4gKiBAc2VjdGlvbiBUYWJsZXNcclxuICogU3R5bGluZyBmb3IgdGFibGVzXHJcbiAqL1xudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbiAgbWFyZ2luLWJvdHRvbTogMS41NjI1ZW07XG4gIG1heC13aWR0aDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRoLFxudGQge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBwYWRkaW5nOiAwLjVlbTtcbn1cblxudGgge1xuICBib3JkZXItYm90dG9tOiAwLjEyNWVtIHNvbGlkICNlNWU1ZTU7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xufVxuXG50ZCB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTVlNWU1O1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xufVxuXG4vKipcclxuICogQWRkcyB6ZWJyYSBzdHJpcGluZ1xyXG4gKi9cbi50YWJsZS1zdHJpcGVkIHRib2R5IHRyOm50aC1jaGlsZChvZGQpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ZjdmNztcbn1cblxuLyoqXHJcbiAqIFJlZHVjZXMgcGFkZGluZyBvbiBjb25kZW5zZWQgdGFibGVzXHJcbiAqL1xuLnRhYmxlLWNvbmRlbnNlZCB0aCxcbi50YWJsZS1jb25kZW5zZWQgdGQge1xuICBwYWRkaW5nOiAwLjI1ZW07XG59XG5cbi8qIEltcG9ydCBhZGQtb25zIGhlcmUuLi4gKi9cbi8qKlxyXG4gKiBAc2VjdGlvbiBPdmVycmlkZXNcclxuICogTnVkZ2UgYW5kIHR3ZWFrIGFsaWdubWVudCwgc3BhY2luZywgYW5kIHZpc2liaWxpdHkuXHJcbiAqL1xuLyoqXHJcbiAqIFRleHQgc2l6ZXNcclxuICovXG4udGV4dC1zbWFsbCB7XG4gIGZvbnQtc2l6ZTogMC45Mzc1ZW07XG59XG5cbi50ZXh0LWxhcmdlIHtcbiAgZm9udC1zaXplOiAxLjE4NzVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQwZW0pIHtcbiAgLnRleHQtbGFyZ2Uge1xuICAgIGZvbnQtc2l6ZTogMS4zMTI1ZW07XG4gIH1cbn1cblxuLyoqXHJcbiAqIFRleHQgY29sb3JzXHJcbiAqL1xuLnRleHQtbXV0ZWQge1xuICBjb2xvcjogIzY2NjY2Njtcbn1cblxuLyoqXHJcbiAqIFRleHQgYWxpZ25tZW50XHJcbiAqL1xuLnRleHQtY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4udGV4dC1yaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4udGV4dC1sZWZ0IHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQwZW0pIHtcbiAgLnRleHQtcmlnaHQtbWVkaXVtIHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgfVxufVxuXG4vKipcclxuICogRmxvYXRzXHJcbiAqL1xuLmZsb2F0LWxlZnQge1xuICBmbG9hdDogbGVmdDtcbn1cblxuLmZsb2F0LWNlbnRlciB7XG4gIGZsb2F0OiBub25lO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuXG4uZmxvYXQtcmlnaHQge1xuICBmbG9hdDogcmlnaHQ7XG59XG5cbi8qKlxyXG4gKiBNYXJnaW5zXHJcbiAqL1xuLm5vLW1hcmdpbi10b3Age1xuICBtYXJnaW4tdG9wOiAwO1xufVxuXG4ubm8tbWFyZ2luLWJvdHRvbSB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5tYXJnaW4tdG9wIHtcbiAgbWFyZ2luLXRvcDogMS41NjI1ZW07XG59XG5cbi5tYXJnaW4tYm90dG9tIHtcbiAgbWFyZ2luLWJvdHRvbTogMS41NjI1ZW07XG59XG5cbi5tYXJnaW4tYm90dG9tLXNtYWxsIHtcbiAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG59XG5cbi5tYXJnaW4tYm90dG9tLWxhcmdlIHtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuXG4vKipcclxuICogUGFkZGluZ1xyXG4gKi9cbi5uby1wYWRkaW5nLXRvcCB7XG4gIHBhZGRpbmctdG9wOiAwO1xufVxuXG4ubm8tcGFkZGluZy1ib3R0b20ge1xuICBwYWRkaW5nLWJvdHRvbTogMDtcbn1cblxuLnBhZGRpbmctdG9wIHtcbiAgcGFkZGluZy10b3A6IDEuNTYyNWVtO1xufVxuXG4ucGFkZGluZy10b3Atc21hbGwge1xuICBwYWRkaW5nLXRvcDogMC41ZW07XG59XG5cbi5wYWRkaW5nLXRvcC1sYXJnZSB7XG4gIHBhZGRpbmctdG9wOiA0ZW07XG59XG5cbi5wYWRkaW5nLWJvdHRvbSB7XG4gIHBhZGRpbmctYm90dG9tOiAxLjU2MjVlbTtcbn1cblxuLnBhZGRpbmctYm90dG9tLXNtYWxsIHtcbiAgcGFkZGluZy1ib3R0b206IDAuNWVtO1xufVxuXG4ucGFkZGluZy1ib3R0b20tbGFyZ2Uge1xuICBwYWRkaW5nLWJvdHRvbTogMmVtO1xufVxuXG4vKipcclxuICogVmlzaWJpbGl0eVxyXG4gKi9cbi8qXHJcbiAqIEhpZGUgb25seSB2aXN1YWxseSwgYnV0IGhhdmUgaXQgYXZhaWxhYmxlIGZvciBzY3JlZW4gcmVhZGVyczpcclxuICogQGxpbmsgaHR0cHM6Ly9zbm9vay5jYS9hcmNoaXZlcy9odG1sX2FuZF9jc3MvaGlkaW5nLWNvbnRlbnQtZm9yLWFjY2Vzc2liaWxpdHlcclxuICpcclxuICogMS4gRm9yIGxvbmcgY29udGVudCwgbGluZSBmZWVkcyBhcmUgbm90IGludGVycHJldGVkIGFzIHNwYWNlcyBhbmQgc21hbGwgd2lkdGhcclxuICogICAgY2F1c2VzIGNvbnRlbnQgdG8gd3JhcCAxIHdvcmQgcGVyIGxpbmU6XHJcbiAqICAgIGh0dHBzOi8vbWVkaXVtLmNvbS9AamVzc2ViZWFjaC9iZXdhcmUtc211c2hlZC1vZmYtc2NyZWVuLWFjY2Vzc2libGUtdGV4dC01OTUyYTRjMmNiZmVcclxuICovXG4udmlzdWFsbHktaGlkZGVuIHtcbiAgYm9yZGVyOiAwO1xuICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICBoZWlnaHQ6IDFweDtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIC8qIDEgKi9cbiAgd2lkdGg6IDFweDtcbn1cblxuLnNvZnQtaGlkZGVuIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4vKlxyXG4gKiBFeHRlbmRzIHRoZSAudmlzdWFsbHloaWRkZW4gY2xhc3MgdG8gYWxsb3cgdGhlIGVsZW1lbnQgdG8gYmUgZm9jdXNhYmxlIHdoZW4gbmF2aWdhdGVkIHRvIHZpYSB0aGUga2V5Ym9hcmRcclxuICogQGxpbmsgaHR0cHM6Ly93d3cuZHJ1cGFsLm9yZy9ub2RlLzg5NzYzOFxyXG4gKi9cbi52aXN1YWxseS1oaWRkZW4uZm9jdXNhYmxlOmFjdGl2ZSxcbi52aXN1YWxseS1oaWRkZW4uZm9jdXNhYmxlOmZvY3VzIHtcbiAgY2xpcDogYXV0bztcbiAgaGVpZ2h0OiBhdXRvO1xuICBtYXJnaW46IDA7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICBwb3NpdGlvbjogc3RhdGljO1xuICB3aGl0ZS1zcGFjZTogaW5oZXJpdDtcbiAgd2lkdGg6IGF1dG87XG59XG5cbi8qKlxyXG4gKiBAd29ya2Fyb3VuZFxyXG4gKiBAYWZmZWN0ZWQgSUUgOC85LzEwXHJcbiAqIEBsaW5rIGh0dHA6Ly9qdWljeXN0dWRpby5jb20vYXJ0aWNsZS9zY3JlZW4tcmVhZGVycy1kaXNwbGF5LW5vbmUucGhwXHJcbiAqL1xuW2hpZGRlbl0sIHRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4vKipcclxuICogQ29udGFpbiBmbG9hdHNcclxuICogVGhlIHNwYWNlIGNvbnRlbnQgaXMgb25lIHdheSB0byBhdm9pZCBhbiBPcGVyYSBidWcgd2hlbiB0aGUgYGNvbnRlbnRlZGl0YWJsZWAgYXR0cmlidXRlIGlzIGluY2x1ZGVkIGFueXdoZXJlIGVsc2UgaW4gdGhlIGRvY3VtZW50LlxyXG4gKiBAbGluayBodHRwczovL2dpdGh1Yi5jb20vaDVicC9odG1sNS1ib2lsZXJwbGF0ZS9ibG9iL21hc3Rlci9kaXN0L2Nzcy9tYWluLmNzc1xyXG4gKi9cbi5jbGVhcmZpeDpiZWZvcmUsIC5jb250YWluZXI6YmVmb3JlLFxuLmNsZWFyZml4OmFmdGVyLFxuLmNvbnRhaW5lcjphZnRlciB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBjb250ZW50OiBcIiBcIjtcbn1cblxuXG4uY2xlYXJmaXg6YWZ0ZXIsXG4uY29udGFpbmVyOmFmdGVyIHtcbiAgY2xlYXI6IGJvdGg7XG59XG5cbi8qKlxyXG4gKiBAc2VjdGlvbiBQcmludFxyXG4gKiBTdHlsaW5nIGZvciBwcmludGVkIGNvbnRlbnQuIEFkYXB0ZWQgZnJvbSBIVE1MNUJQLlxyXG4gKiBAbGluayBodHRwOi8vaHRtbDVib2lsZXJwbGF0ZS5jb21cclxuICovXG5AbWVkaWEgcHJpbnQge1xuICAvKipcclxuXHQgKiBVbml2ZXJzYWwgc2VsZWN0b3IuXHJcblx0ICogUmVzZXQgYWxsIGNvbnRlbnQgdG8gdHJhbnNwYXJlbnQgYmFja2dyb3VuZCwgYmxhY2sgY29sb3IsIGFuZCByZW1vdmUgYm94IGFuZCB0ZXh0IHNoYWRvd3MuXHJcblx0ICovXG4gICoge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcbiAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICAvKipcclxuXHQgKiBTcGVjaWZpZXMgcGFnZSBtYXJnaW5cclxuXHQgKi9cbiAgQHBhZ2Uge1xuICAgIG1hcmdpbjogMC41Y207XG4gIH1cbiAgLyoqXHJcblx0ICogVW5kZXJsaW5lIGFsbCBsaW5rc1xyXG5cdCAqL1xuICBhLFxuICBhOnZpc2l0ZWQge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICB9XG4gIC8qKlxyXG5cdCAqIFNob3cgVVJMIGFmdGVyIGxpbmtzXHJcblx0ICovXG4gIGFbaHJlZl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKGhyZWYpIFwiKVwiO1xuICB9XG4gIC8qKlxyXG5cdCAqIERvbid0IHNob3cgVVJMIGZvciBpbnRlcm5hbCBsaW5rc1xyXG5cdCAqL1xuICBhW2hyZWZePVwiI1wiXTphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgfVxuICAvKipcclxuXHQgKiBTcGVjaWZpZXMgdGhlIG1pbmltdW0gbnVtYmVyIG9mIGxpbmVzIHRvIHByaW50IGF0IHRoZSB0b3AgYW5kIGJvdHRvbSBvZiBhIHBhZ2UuXHJcblx0ICovXG4gIHAsXG4gIGgxLCBoMiwgaDMge1xuICAgIG9ycGhhbnM6IDM7XG4gICAgd2lkb3dzOiAzO1xuICB9XG4gIC8qKlxyXG5cdCAqIEF2b2lkIGluc2VydGluZyBhIHBhZ2UgYnJlYWsgYWZ0ZXIgaGVhZGVyc1xyXG5cdCAqL1xuICBoMSwgaDIsIGgzIHtcbiAgICBwYWdlLWJyZWFrLWFmdGVyOiBhdm9pZDtcbiAgfVxuICAvKipcclxuXHQgKiBDaGFuZ2UgYm9yZGVyIGNvbG9yIG9uIGJsb2NrcXVvdGVzIGFuZCBwcmVmb3JtYXR0ZWQgdGV4dC5cclxuXHQgKiBBdm9pZCBwYWdlIGJyZWFrcyBpbnNpZGUgdGhlIGNvbnRlbnRcclxuXHQgKi9cbiAgcHJlLFxuICBibG9ja3F1b3RlIHtcbiAgICBib3JkZXItY29sb3I6ICM5OTk7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICB9XG4gIC8qKlxyXG5cdCAqIERpc3BsYXllZCBhcyBhIHRhYmxlIGhlYWRlciByb3cgZ3JvdXBcclxuXHQgKi9cbiAgdGhlYWQge1xuICAgIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDtcbiAgfVxuICAvKipcclxuXHQgKiBBdm9pZCBpbnNlcnRpbmcgYSBwYWdlIGJyZWFrIGluc2lkZSB0YWJsZSByb3dzIGFuZCBpbWFnZXNcclxuXHQgKi9cbiAgdHIsXG4gIGltZyB7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICB9XG59XG4iLCIvKipcclxuICogQHNlY3Rpb24gTm9ybWFsaXplLmNzc1xyXG4gKiBOb3JtYWxpemUuY3NzIGJhc2Ugd2l0aCBjdXN0b20gY29kZS5cclxuICogQWRkaXRpb25hbCBub3JtYWxpemUgc3R5bGVzIGluY29ycG9yYXRlZCB0aHJvdWdob3V0IGNvbXBvbmVudHMuXHJcbiAqIEBsaW5rIGh0dHA6Ly9uZWNvbGFzLmdpdGh1Yi5pby9ub3JtYWxpemUuY3NzL1xyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIHRhcCBkZWxheSBpbiB3ZWJraXRcclxuICogQGxpbmsgaHR0cHM6Ly9tZWRpdW0uY29tL0BhZGFjdGlvL2RlbGF5LWE5ZGY5ZWRjZWVmMyMuN2RtYmwzeG93XHJcbiAqL1xyXG5hLFxyXG5idXR0b24sXHJcbmlucHV0LFxyXG5zZWxlY3QsXHJcbnRleHRhcmVhLFxyXG5sYWJlbCxcclxuc3VtbWFyeSB7XHJcblx0dG91Y2gtYWN0aW9uOiBtYW5pcHVsYXRpb247XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogQWRkIGJveCBzaXppbmcgdG8gZXZlcnl0aGluZ1xyXG4gKiBAbGluayBodHRwOi8vd3d3LnBhdWxpcmlzaC5jb20vMjAxMi9ib3gtc2l6aW5nLWJvcmRlci1ib3gtZnR3L1xyXG4gKi9cclxuKixcclxuKjpiZWZvcmUsXHJcbio6YWZ0ZXIge1xyXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogMS4gRm9yY2Ugc2Nyb2xsYmFyIGRpc3BsYXkgdG8gcHJldmVudCBqdW1waW5nIG9uIHBhZ2VzLlxyXG4gKiAyLiBQcmV2ZW50IGlPUyB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZSwgd2l0aG91dCBkaXNhYmxpbmdcclxuICogICAgdXNlciB6b29tLlxyXG4gKi9cclxuaHRtbCB7XHJcblx0b3ZlcmZsb3cteTogc2Nyb2xsOyAvKiAxICovXHJcblx0dGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXHJcbiAqL1xyXG5ib2R5IHtcclxuXHRtYXJnaW46IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxyXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIGluIElFIDEwLzExXHJcbiAqIGFuZCBGaXJlZm94LlxyXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxyXG4gKi9cclxuYXJ0aWNsZSxcclxuYXNpZGUsXHJcbmNpdGUsXHJcbmRldGFpbHMsXHJcbmZpZ2NhcHRpb24sXHJcbmZpZ3VyZSxcclxuZm9vdGVyLFxyXG5oZWFkZXIsXHJcbmhncm91cCxcclxubWFpbixcclxubWVudSxcclxubmF2LFxyXG5zZWN0aW9uIHtcclxuXHRkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLypcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuc3VtbWFyeSB7XHJcblx0ZGlzcGxheTogbGlzdC1pdGVtO1xyXG59XHJcblxyXG4vKipcclxuICogQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cclxuICovXHJcbmF1ZGlvLFxyXG5jYW52YXMsXHJcbnByb2dyZXNzLFxyXG52aWRlbyB7XHJcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBOb3JtYWxpemUgdmVydGljYWwgYWxpZ25tZW50IG9mIGBwcm9ncmVzc2AgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXHJcbiAqL1xyXG5wcm9ncmVzcyB7XHJcblx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG59XHJcblxyXG4vKipcclxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cclxuICogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cclxuICovXHJcbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XHJcblx0ZGlzcGxheTogbm9uZTtcclxuXHRoZWlnaHQ6IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQcmV2ZW50IGltZyBhbmQgdmlkZW8gZWxlbWVudHMgZnJvbSBzcGlsbGluZyBvdXRzaWRlIG9mIHRoZSBwYWdlIG9uIHNtYWxsZXIgc2NyZWVucy5cclxuICovXHJcbmltZyxcclxudmlkZW8ge1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdG1heC13aWR0aDogMTAwJTtcclxuXHRoZWlnaHQ6IDEwMCU7XHJcblx0b2JqZWN0LWZpdDogY292ZXI7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQcmV2ZW50IGlmcmFtZSwgb2JqZWN0LCBhbmQgZW1iZWQgZWxlbWVudHMgZnJvbSBzcGlsbGluZyBvdXRzaWRlIG9mIHRoZSBwYWdlIG9uIHNtYWxsZXIgc2NyZWVucy5cclxuICogaGVpZ2h0OiBhdXRvIGNhdXNlcyBpZnJhbWVzIHRvIHNtdXNoLCBzbyBpdCdzIG9taXR0ZWQgaGVyZS5cclxuICovXHJcbmlmcmFtZSxcclxub2JqZWN0LFxyXG5lbWJlZCB7XHJcblx0bWF4LXdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4vKipcclxuICogSGlkZSB0aGUgdGVtcGxhdGUgZWxlbWVudCBpbiBJRSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxyXG4gKi9cclxudGVtcGxhdGUge1xyXG5cdEBleHRlbmQgW2hpZGRlbl07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cclxuICogMi4gUHJldmVudHMgSUUgZnJvbSBtYWtpbmcgc2NhbGVkIGltYWdlcyBsb29rIGxpa2UgY3JhcFxyXG4gKi9cclxuaW1nIHtcclxuXHRib3JkZXItc3R5bGU6IG5vbmU7IC8qIDEgKi9cclxuXHQtbXMtaW50ZXJwb2xhdGlvbi1tb2RlOiBiaWN1YmljOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cclxuICovXHJcbnN2Zzpub3QoOnJvb3QpIHtcclxuXHRvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgbWFyZ2luLlxyXG4gKi9cclxuZmlndXJlIHtcclxuXHRtYXJnaW46IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAd29ya2Fyb3VuZCBSZW1vdmUgZm9jdXMgZnJvbSA8bWFpbj4gZWxlbWVudCB3aGVuIHVzaW5nIHRhYmluZGV4PVwiLTFcIiBoYWNrIGZvciBza2lwbmF2IGxpbmtcclxuICogQGxpbmsgaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTM3NzIxXHJcbiAqL1xyXG5bdGFiaW5kZXg9XCItMVwiXTpmb2N1cyB7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG59IiwiLyoqXHJcbiAqIEBzZWN0aW9uIEdyaWRcclxuICogU3RydWN0dXJlIGFuZCBsYXlvdXRcclxuICovXHJcblxyXG4vKipcclxuICogQmFzZSBncmlkIHN0eWxlczogc2luZ2xlIGNvbHVtblxyXG4gKi9cclxuLmNvbnRhaW5lciB7XHJcblx0QGV4dGVuZCAuY2xlYXJmaXg7XHJcblx0bWFyZ2luLWxlZnQ6IGF1dG87XHJcblx0bWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG5cdG1heC13aWR0aDogJGNvbnRhaW5lci1tYXgtd2lkdGg7XHJcblx0d2lkdGg6ICRjb250YWluZXItd2lkdGg7XHJcbn1cclxuXHJcbi5yb3cge1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0ZmxleC1kaXJlY3Rpb246IHJvdztcclxuXHRmbGV4LXdyYXA6IHdyYXA7XHJcblx0bWFyZ2luLWxlZnQ6ICRncmlkLW1hcmdpbnMgKiAtMTtcclxuXHRtYXJnaW4tcmlnaHQ6ICRncmlkLW1hcmdpbnMgKiAtMTtcclxufVxyXG4ubm8tbGF0LW1hcmdpbnN7XHJcblx0bWFyZ2luLWxlZnQ6IDAgIWltcG9ydGFudDtcclxuXHRtYXJnaW4tcmlnaHQ6IDAgIWltcG9ydGFudDtcclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiBBbGlnbm1lbnRcclxuICovXHJcblxyXG4vKiBGbG9hdCBjb250ZW50IHRvIHRoZSB0b3AgKi9cclxuLnJvdy10b3Age1xyXG5cdGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG59XHJcblxyXG4vKiBGbG9hdCBjb250ZW50IGluIHRoZSBtaWRkbGUgKi9cclxuLnJvdy1taWRkbGUge1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi8qIFB1c2ggY29udGVudCB0byB0aGUgYm90dG9tICovXHJcbi5yb3ctYm90dG9tIHtcclxuXHRhbGlnbi1pdGVtczogZmxleC1lbmQ7XHJcbn1cclxuXHJcbi8qIE1vdmUgY29udGVudCB0byB0aGUgc3RhcnQgb2YgdGhlIHJvdyAqL1xyXG4ucm93LXN0YXJ0IHtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbn1cclxuXHJcbi8qIEZsb2F0IGNvbnRlbnQgaW4gdGhlIGNlbnRlciBvZiB0aGUgcm93ICovXHJcbi5yb3ctY2VudGVyIHtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLyogTW92ZSBjb250ZW50IHRvIHRoZSBlbmQgb2YgdGhlIHJvdyAqL1xyXG4ucm93LWVuZCB7XHJcblx0anVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxufVxyXG5cclxuLyogQWRkIGV2ZW4gc3BhY2luZyBhcm91bmQgZWFjaCBpdGVtICovXHJcbi5yb3ctYXJvdW5kIHtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxufVxyXG5cclxuLyogQWRkIGV2ZW4gc3BhY2luZyBiZXR3ZWVuIGl0ZW1zICovXHJcbi5yb3ctYmV0d2VlbiB7XHJcblx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG59XHJcblxyXG4vKiBSZXZlcnNlIGNvbnRlbnQgb3JkZXIgKi9cclxuLnJvdy1yZXZlcnNlIHtcclxuXHRmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XHJcbn1cclxuXHJcbiVncmlkLWJhc2Uge1xyXG5cdGZsZXgtYmFzaXM6IDEwMCU7XHJcblx0bWFyZ2luLWxlZnQ6ICRncmlkLW1hcmdpbnM7XHJcblx0bWFyZ2luLXJpZ2h0OiAkZ3JpZC1tYXJnaW5zO1xyXG59XHJcblxyXG5AZWFjaCAkZ3JpZCwgJHdpZHRoIGluICgkZ3JpZC1zaXplcykge1xyXG5cdC5ncmlkLSN7JGdyaWR9IHtcclxuXHRcdEBleHRlbmQgJWdyaWQtYmFzZTtcclxuXHR9XHJcbn1cclxuXHJcbi5ncmlkLWF1dG8ge1xyXG5cdEBleHRlbmQgJWdyaWQtYmFzZTtcclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiBBZGQgY29sdW1ucyB0byBncmlkIG9uIGJpZ2dlciBzY3JlZW5zXHJcbiAqL1xyXG5AZWFjaCAkYnJlYWtwb2ludCwgJHByZWZpeCwgJG9mZnNldCBpbiAoJGdyaWQtYnJlYWtwb2ludHMpe1xyXG5cdEBtZWRpYSAobWluLXdpZHRoOiAkYnJlYWtwb2ludCkge1xyXG5cdFx0LnJvdyN7JHByZWZpeH0gIHtcclxuXHRcdFx0ZmxleC13cmFwOiBub3dyYXA7XHJcblx0XHR9XHJcblxyXG5cdFx0QGlmICRncmlkLXdyYXAge1xyXG5cclxuXHRcdFx0LnJvdy13cmFwI3skcHJlZml4fSB7XHJcblx0XHRcdFx0ZmxleC13cmFwOiB3cmFwO1xyXG5cclxuXHRcdFx0XHRAZWFjaCAkZ3JpZCwgJHdpZHRoIGluICgkZ3JpZC1zaXplcykge1xyXG5cdFx0XHRcdFx0JWdyaWQtd2l0aC1wYWRkaW5nIHtcclxuXHRcdFx0XHRcdFx0bWFyZ2luLWxlZnQ6IDA7XHJcblx0XHRcdFx0XHRcdG1hcmdpbi1yaWdodDogMDtcclxuXHRcdFx0XHRcdFx0cGFkZGluZy1sZWZ0OiAkZ3JpZC1tYXJnaW5zO1xyXG5cdFx0XHRcdFx0XHRwYWRkaW5nLXJpZ2h0OiAkZ3JpZC1tYXJnaW5zO1xyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdC5ncmlkLSN7JGdyaWR9IHtcclxuXHRcdFx0XHRcdFx0Ly8gQGV4dGVuZCAlZ3JpZC13aXRoLXBhZGRpbmc7XHJcblx0XHRcdFx0XHRcdG1hcmdpbi1sZWZ0OiAwO1xyXG5cdFx0XHRcdFx0XHRtYXJnaW4tcmlnaHQ6IDA7XHJcblx0XHRcdFx0XHRcdHBhZGRpbmctbGVmdDogJGdyaWQtbWFyZ2lucztcclxuXHRcdFx0XHRcdFx0cGFkZGluZy1yaWdodDogJGdyaWQtbWFyZ2lucztcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdC5ncmlkLWF1dG8ge1xyXG5cdFx0XHRcdFx0Ly8gQGV4dGVuZCAlZ3JpZC13aXRoLXBhZGRpbmc7XHJcblx0XHRcdFx0XHRtYXJnaW4tbGVmdDogMDtcclxuXHRcdFx0XHRcdG1hcmdpbi1yaWdodDogMDtcclxuXHRcdFx0XHRcdHBhZGRpbmctbGVmdDogJGdyaWQtbWFyZ2lucztcclxuXHRcdFx0XHRcdHBhZGRpbmctcmlnaHQ6ICRncmlkLW1hcmdpbnM7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0I3skcHJlZml4fSAuZ3JpZC1hdXRvIHtcclxuXHRcdFx0ZmxleC1iYXNpczogYXV0bztcclxuXHRcdFx0ZmxleC1ncm93OiAxO1xyXG5cdFx0fVxyXG5cclxuXHRcdEBlYWNoICRncmlkLCAkd2lkdGggaW4gKCRncmlkLXNpemVzKSB7XHJcblx0XHRcdCN7JHByZWZpeH0gLmdyaWQtI3skZ3JpZH0ge1xyXG5cdFx0XHRcdGZsZXgtYmFzaXM6ICR3aWR0aDtcclxuXHRcdFx0XHRtYXgtd2lkdGg6ICR3aWR0aDtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0QGlmICRvZmZzZXQge1xyXG5cdFx0XHRAZWFjaCAkZ3JpZCwgJHdpZHRoIGluICgkZ3JpZC1zaXplcykge1xyXG5cdFx0XHRcdCN7JHByZWZpeH0gLm9mZnNldC0jeyRncmlkfSB7XHJcblx0XHRcdFx0XHRtYXJnaW4tbGVmdDogJHdpZHRoO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdCN7JHByZWZpeH0gLmdyaWQtZmlyc3Qge1xyXG5cdFx0XHQtd2Via2l0LWJveC1vcmRpbmFsLWdyb3VwOiAwO1xyXG5cdFx0XHRvcmRlcjogLTE7XHJcblx0XHR9XHJcblxyXG5cdFx0I3skcHJlZml4fSAuZ3JpZC1sYXN0IHtcclxuXHRcdFx0LXdlYmtpdC1ib3gtb3JkaW5hbC1ncm91cDogMjtcclxuXHRcdFx0b3JkZXI6IDE7XHJcblx0XHR9XHJcblx0fVxyXG59IiwiLyoqXHJcbiAqIEBzZWN0aW9uIFR5cG9ncmFwaHlcclxuICogU2V0cyBmb250IHN0eWxlcyBmb3IgZW50aXJlIHNpdGVcclxuICovXHJcblxyXG4qOjpzZWxlY3Rpb257XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRsaWdodC1ibHVlLCAuMyk7XHJcbn1cclxuXHJcbi8vYm9keXtcclxuLy8gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG4vLyAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbi8vfVxyXG5cclxuYm9keSB7XHJcblx0YmFja2dyb3VuZDogd2hpdGU7XHJcblx0Y29sb3I6ICRncmV5O1xyXG5cdGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0O1xyXG5cdGZvbnQtc2l6ZTogJGZvbnQtc2l6ZTtcclxuXHRsaW5lLWhlaWdodDogMS41O1xyXG5cclxuXHRAbWVkaWEgKG1pbi13aWR0aDogJGJwLW1lZGl1bSkge1xyXG5cdFx0bGluZS1oZWlnaHQ6IDEuNTYyNTtcclxuXHR9XHJcblxyXG59XHJcblxyXG5tYWlue1xyXG5cdGJhY2tncm91bmQ6IHdoaXRlO1xyXG59XHJcblxyXG5cclxucCB7XHJcblx0bWFyZ2luOiAwIDAgJHNwYWNpbmc7XHJcbn1cclxuXHJcbi51bmRlcmxpbmV7XHJcblx0dGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbn1cclxuLyoqXHJcbiAqIEh5cGVybGluayBzdHlsaW5nXHJcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cclxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxyXG4gKi9cclxuXHJcbmEge1xyXG4gICAgY29sb3I6ICRncmV5O1xyXG5cdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyAvKiAxICovXHJcblx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG5cdHRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzOyAvKiAyICovXHJcblx0d29yZC13cmFwOiBicmVhay13b3JkO1xyXG5cclxuXHQvKipcclxuXHQgKiBJbXByb3ZlIHJlYWRhYmlsaXR5IHdoZW4gZm9jdXNlZCBhbmQgYWxzbyBtb3VzZSBob3ZlcmVkIGluIGFsbCBicm93c2Vycy5cclxuXHQgKi9cclxuXHQmOmFjdGl2ZSxcclxuXHQmOmhvdmVyIHtcclxuXHRcdG91dGxpbmU6IDA7XHJcblx0fVxyXG59XHJcblxyXG5cclxuXHJcbi8qKlxyXG4gKiBMaXN0IHN0eWxpbmdcclxuICovXHJcblxyXG51bCxcclxub2wge1xyXG5cdG1hcmdpbjogMCAwICRzcGFjaW5nIDJlbTtcclxuXHRwYWRkaW5nOiAwO1xyXG59XHJcblxyXG51bCB1bCxcclxudWwgb2wsXHJcbm9sIG9sLFxyXG5vbCB1bCB7XHJcblx0bWFyZ2luLWJvdHRvbTogMDtcclxufVxyXG5cclxuZGwsXHJcbmRkIHtcclxuXHRtYXJnaW46IDA7XHJcblx0cGFkZGluZzogMDtcclxufVxyXG5cclxuZGQge1xyXG5cdG1hcmdpbi1ib3R0b206ICRzcGFjaW5nO1xyXG59XHJcblxyXG5kdCB7XHJcblx0Zm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAYnVnZml4IFByZXZlbnQgd2Via2l0IGZyb20gcmVtb3ZpbmcgbGlzdCBzZW1hbnRpY3NcclxuICogMS4gQWRkIGEgbm9uLWJyZWFraW5nIHNwYWNlXHJcbiAqIDIuIE1ha2Ugc3VyZSBpdCBkb2Vzbid0IG1lc3MgdXAgdGhlIERPTSBmbG93XHJcbiAqL1xyXG4lbGlzdC1zdHlsZS1ub25lIHtcclxuXHRsaXN0LXN0eWxlOiBub25lO1xyXG5cclxuXHQmID4gbGk6YmVmb3JlIHtcclxuXHRcdGNvbnRlbnQ6IFwiXFwyMDBCXCI7IC8qIDEgKi9cclxuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTsgLyogMiAqL1xyXG5cdH1cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZXMgbGlzdCBzdHlsaW5nLlxyXG4gKiBGb3Igc2VtYW50aWMgcmVhc29ucywgc2hvdWxkIG9ubHkgYmUgdXNlZCBvbiB1bm9yZGVyZWQgbGlzdHMuXHJcbiAqL1xyXG4ubGlzdC11bnN0eWxlZCB7XHJcblx0QGV4dGVuZCAlbGlzdC1zdHlsZS1ub25lO1xyXG5cdG1hcmdpbi1sZWZ0OiAwO1xyXG59XHJcblxyXG4vKipcclxuICogRGlzcGxheSBsaXN0cyBvbiBhIHNpbmdsZSBsaW5lLlxyXG4gKi9cclxuXHJcbi5saXN0LWlubGluZSB7XHJcblx0QGV4dGVuZCAlbGlzdC1zdHlsZS1ub25lO1xyXG5cdG1hcmdpbi1sZWZ0OiAtMC41ZW07XHJcblx0bWFyZ2luLXJpZ2h0OiAtMC41ZW07XHJcblx0cGFkZGluZzogMDtcclxufVxyXG5cclxuLmxpc3QtaW5saW5lID4gbGkge1xyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHRtYXJnaW4tbGVmdDogMC41ZW07XHJcblx0bWFyZ2luLXJpZ2h0OiAwLjVlbTtcclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiBIZWFkaW5nIHN0eWxpbmcgZm9yIGgxIHRocm91Z2ggaDYgZWxlbWVudHMuXHJcbiAqIEhlYWRpbmcgY2xhc3MgbGV0cyB5b3UgdXNlIG9uZSBoZWFkaW5nIHR5cGUgZm9yIHNlbWFudGljcywgYnV0IHN0eWxlIGl0IGFzIGFub3RoZXIgaGVhZGluZyB0eXBlLlxyXG4gKi9cclxuXHJcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xyXG5cdGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcblx0bGluZS1oZWlnaHQ6IDEuMjtcclxuXHRtYXJnaW46IDAgMCAxZW07XHJcblx0cGFkZGluZzogMWVtIDAgMDtcclxuXHR3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcblx0Zm9udC1mYW1pbHk6ICRmb250LXRpdGxlcztcclxufVxyXG5cclxuaDEsXHJcbi5oMSB7XHJcblx0Zm9udC1zaXplOiAxLjVlbTtcclxuXHRwYWRkaW5nLXRvcDogLjVlbTtcclxuXHRmb250LWZhbWlseTogJGZvbnQtdGl0bGVzO1xyXG5cclxuXHRAbWVkaWEgKG1pbi13aWR0aDogJGJwLW1lZGl1bSkge1xyXG5cdFx0Zm9udC1zaXplOiAxLjc1ZW07XHJcblx0fVxyXG59XHJcblxyXG5oMixcclxuLmgyIHtcclxuXHRmb250LXNpemU6IDEuMzEyNWVtO1xyXG59XHJcblxyXG5oMyxcclxuLmgzIHtcclxuXHRmb250LXNpemU6IDEuMTg3NWVtO1xyXG59XHJcblxyXG5oNCwgaDUsIGg2LFxyXG4uaDQsIC5oNSwgLmg2IHtcclxuXHRmb250LXNpemU6IDFlbTtcclxufVxyXG5cclxuaDQsXHJcbi5oNCB7XHJcblx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiBMaW5lcywgUXVvdGVzIGFuZCBFbXBoYXNpc1xyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxyXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cclxuICovXHJcbmhyIHtcclxuXHRib3JkZXI6IDA7XHJcblx0Ym9yZGVyLXRvcDogMXB4IHNvbGlkICRjb2xvci1ncmF5LWxpZ2h0O1xyXG5cdGJvcmRlci1ib3R0b206IDAgc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0Ym94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cclxuXHRtYXJnaW46IDJlbSBhdXRvO1xyXG5cdG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cclxuICovXHJcbmIsXHJcbnN0cm9uZyB7XHJcblx0Zm9udC13ZWlnaHQ6IGluaGVyaXQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxyXG4gKi9cclxuYixcclxuc3Ryb25nIHtcclxuXHRmb250LXdlaWdodDogYm9sZGVyO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxyXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxyXG4gKi9cclxuYWJiclt0aXRsZV0ge1xyXG5cdGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cclxuXHR0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xyXG5cdHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxyXG4gKi9cclxuZGZuIHtcclxuXHRmb250LXN0eWxlOiBpdGFsaWM7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxyXG4gKi9cclxubWFyayB7XHJcblx0YmFja2dyb3VuZDogI2ZiZjljOTtcclxuXHRjb2xvcjogJGNvbG9yLWJsYWNrO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5zbWFsbCB7XHJcblx0Zm9udC1zaXplOiA4MCU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5zdWIsXHJcbnN1cCB7XHJcblx0Zm9udC1zaXplOiA3NSU7XHJcblx0bGluZS1oZWlnaHQ6IDA7XHJcblx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG5cdHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxufVxyXG5cclxuc3VwIHtcclxuXHR0b3A6IC0wLjVlbTtcclxufVxyXG5cclxuc3ViIHtcclxuXHRib3R0b206IC0wLjI1ZW07XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogQmxvY2txdW90ZXNcclxuICovXHJcblxyXG5ibG9ja3F1b3RlIHtcclxuXHRmb250LXNpemU6IDEuMTg3NWVtO1xyXG5cdGZvbnQtc3R5bGU6IGl0YWxpYztcclxuXHRtYXJnaW46IDAgMCAkc3BhY2luZztcclxuXHRwYWRkaW5nLWxlZnQ6IDAuODQyMTA1MjYzMmVtO1xyXG5cdHBhZGRpbmctcmlnaHQ6IDAuODQyMTA1MjYzMmVtO1xyXG5cclxuXHRjaXRlIHtcclxuXHRcdGNvbG9yOiAkY29sb3ItZ3JheS1kYXJrO1xyXG5cdFx0Zm9udC1zaXplOiAwLjg0MjEwNTI2MzJlbTtcclxuXHRcdHBhZGRpbmctdG9wOiAxZW07XHJcblx0fVxyXG59XHJcblxyXG5ibG9ja3F1b3RlLFxyXG5xIHtcclxuXHRxdW90ZXM6IG5vbmU7XHJcbn1cclxuXHJcbmJsb2NrcXVvdGU6YmVmb3JlLFxyXG5ibG9ja3F1b3RlOmFmdGVyLFxyXG5xOmJlZm9yZSxcclxucTphZnRlciB7XHJcblx0Y29udGVudDogJyc7XHJcbn1cclxuIiwiLyoqXHJcbiAqIEBzZWN0aW9uIENvZGVcclxuICogU3R5bGluZyBmb3IgY29kZSBhbmQgcHJlZm9ybWF0dGVkIHRleHQuXHJcbiAqL1xyXG5cclxuIGNvZGUsXHJcbiBrYmQsXHJcbiBwcmUsXHJcbiBzYW1wIHtcclxuXHRmb250LWZhbWlseTogJGZvbnQtZm9ybWF0ZWQ7XHJcblx0Zm9udC1zaXplOiAwLjg3NWVtO1xyXG59XHJcblxyXG5jb2RlIHtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKCAkY29sb3ItZ3JheS1saWdodCwgNyUgKTtcclxuXHRjb2xvcjogJGNvbG9yLWNvZGU7XHJcblx0cGFkZGluZzogMC4yNWVtO1xyXG5cdHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxufVxyXG5cclxucHJlIHtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKCAkY29sb3ItZ3JheS1saWdodCwgNiUgKTtcclxuXHRkaXNwbGF5OiBibG9jaztcclxuXHRsaW5lLWhlaWdodDogMS41O1xyXG5cdG1hcmdpbi1ib3R0b206ICRzcGFjaW5nO1xyXG5cdG92ZXJmbG93OiBhdXRvO1xyXG5cdHBhZGRpbmc6IDAuODEyNWVtO1xyXG5cdHRhYi1zaXplOiA0O1xyXG5cdHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcclxuXHR3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcblxyXG5cdGNvZGUge1xyXG5cdFx0YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcblx0XHRib3JkZXI6IDA7XHJcblx0XHRjb2xvcjogaW5oZXJpdDtcclxuXHRcdGZvbnQtc2l6ZTogMWVtO1xyXG5cdFx0cGFkZGluZzogMDtcclxuXHR9XHJcbn0iLCIvKipcclxuICogQHNlY3Rpb24gQnV0dG9uc1xyXG4gKiBTdHlsaW5nIGZvciBDU1MgYnV0dG9ucy5cclxuICovXHJcblxyXG5cclxuLyoqXHJcbiAqIFByaW1hcnkgYnV0dG9uc1xyXG4gKi9cclxuLmJ0biB7XHJcblx0YmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCByZ2JhKCRsaWdodC1ibHVlLCAuOSksIHJnYmEoJGRhcmstYmx1ZSwgLjkpKTtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogMjAwJTtcclxuXHRib3JkZXI6IDJweCB3aGl0ZSBzb2xpZDtcclxuXHRib3JkZXItcmFkaXVzOiAycHg7XHJcblx0Y29sb3I6IHdoaXRlO1xyXG5cdGZvbnQtc2l6ZTogMWVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuXHRwYWRkaW5nOiAuNWVtIDFlbTtcclxuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcblx0d2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuICAgIHRyYW5zaXRpb246IC41cztcclxuXHRjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBib3gtc2hhZG93OiAycHggMnB4IDhweCByZ2JhKGJsYWNrLCAuMik7XHJcblxyXG5cdCY6aG92ZXIsICY6YWN0aXZle1xyXG5cdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgY2VudGVyO1xyXG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG5cdFx0Y29sb3I6IHdoaXRlO1xyXG5cdH1cclxuXHJcblx0Ji0tYmlne1xyXG5cdFx0cGFkZGluZzogLjdlbSAxLjI1ZW07XHJcblx0XHRmb250LXNpemU6IDEuMjVlbTtcclxuXHJcblx0fVxyXG5cclxuXHQmLS10cmFuc3BhcmVudHtcclxuXHRcdGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgdHJhbnNwYXJlbnQgNTAlLCByZ2JhKCRsaWdodC1ibHVlLCAuOSksIHJnYmEoJGRhcmstYmx1ZSwgLjkpKTtcclxuXHJcbiAgICAgICAgJjpob3ZlcntcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgY2VudGVyO1xyXG4gICAgICAgIH1cclxuXHR9XHJcblxyXG5cdCYtLWdyZWVue1xyXG5cdFx0YmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCByZ2JhKCRsaWdodC1ncmVlbiwgMSkgNTAlLCByZ2JhKCRsaWdodC1ncmVlbiwgLjkpLCByZ2JhKCRkYXJrLWdyZWVuLCAuOSkpO1xyXG5cclxuXHRcdCY6aG92ZXJ7XHJcblx0XHRcdGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IGNlbnRlcjtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdCYtLXNtYWxse1xyXG5cdFx0cGFkZGluZzogLjI1ZW0gLjVlbTtcclxuXHRcdGZvbnQtd2VpZ2h0OiA1MDA7XHJcblx0fVxyXG5cclxuXHJcbn1cclxuLy9cclxuLy9cclxuLy8vKipcclxuLy8gKiBTZWNvbmRhcnkgYnV0dG9uc1xyXG4vLyAqL1xyXG4vLy5idG4tc2Vjb25kYXJ5IHtcclxuLy9cdGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1ncmF5LWRhcms7XHJcbi8vXHRib3JkZXItY29sb3I6ICRjb2xvci1ncmF5LWRhcms7XHJcbi8vXHJcbi8vXHQmOmhvdmVyLFxyXG4vL1x0JjphY3RpdmUsXHJcbi8vXHQmLmFjdGl2ZSB7XHJcbi8vXHRcdGJhY2tncm91bmQtY29sb3I6IGRhcmtlbiggJGNvbG9yLWdyYXktZGFyaywgMTUlICk7XHJcbi8vXHRcdGJvcmRlci1jb2xvcjogZGFya2VuKCAkY29sb3ItZ3JheS1kYXJrLCAxNSUgKTtcclxuLy9cdH1cclxuLy99XHJcbi8vXHJcbi8vXHJcbi8vXHJcbi8vLyoqXHJcbi8vICogU2Vjb25kYXJ5IGJ1dHRvbnNcclxuLy8gKi9cclxuLy8uYnRuLXRyYW5zcGFyZW50IHtcclxuLy9cdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4vL1x0Ym9yZGVyLWNvbG9yOiAkY29sb3Itd2hpdGU7XHJcbi8vXHJcbi8vXHQmOmhvdmVyLFxyXG4vL1x0JjphY3RpdmUsXHJcbi8vXHQmLmFjdGl2ZSB7XHJcbi8vXHRcdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50aXplKCAkY29sb3Itd2hpdGUsIC41ICk7XHJcbi8vXHRcdGJvcmRlci1jb2xvcjogZGFya2VuKCAkY29sb3Itd2hpdGUsIDE1JSApO1xyXG4vL1x0XHRjb2xvcjogJGNvbG9yLWJsYWNrO1xyXG4vL1x0fVxyXG4vL31cclxuLy9cclxuLy9cclxuLy8vKipcclxuLy8gKiBBY3RpdmUgc3RhdGVcclxuLy8gKi9cclxuLy8uYnRuOmFjdGl2ZSxcclxuLy8uYnRuLmFjdGl2ZSB7XHJcbi8vXHRib3gtc2hhZG93OiBpbnNldCAwIDAuMTU2MjVlbSAwLjI1ZW0gcmdiYSgwLCAwLCAwLCAwLjE1KSwgMCAxcHggMC4xNTYyNWVtIHJnYmEoMCwgMCwgMCwgMC4wNSk7XHJcbi8vXHRvdXRsaW5lOiAwO1xyXG4vL31cclxuLy9cclxuLy9cclxuLy8vKipcclxuLy8gKiBEaXNhYmxlZCBzdGF0ZVxyXG4vLyAqL1xyXG4vLy5idG5bZGlzYWJsZWRdIHtcclxuLy9cdGJveC1zaGFkb3c6IG5vbmU7XHJcbi8vXHRjdXJzb3I6IG5vdC1hbGxvd2VkO1xyXG4vL1x0b3BhY2l0eTogMC41O1xyXG4vL1x0cG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbi8vfVxyXG4vL1xyXG4vL1xyXG4vLy8qKlxyXG4vLyAqIEJ1dHRvbiBzaXplXHJcbi8vICovXHJcbi8vLmJ0bi1sYXJnZSB7XHJcbi8vXHRmb250LXNpemU6IDFlbTtcclxuLy9cdGxpbmUtaGVpZ2h0OiBub3JtYWw7XHJcbi8vXHRwYWRkaW5nOiAwLjY4NzVlbSAwLjkzNzVlbTtcclxuLy99XHJcbi8vXHJcbi8vXHJcbi8vLyoqXHJcbi8vICogQmxvY2stbGV2ZWwgYnV0dG9uc1xyXG4vLyAqL1xyXG4vLy5idG4tYmxvY2ssXHJcbi8vaW5wdXRbdHlwZT1cInN1Ym1pdFwiXS5idG4tYmxvY2ssXHJcbi8vaW5wdXRbdHlwZT1cInJlc2V0XCJdLmJ0bi1ibG9jayxcclxuLy9pbnB1dFt0eXBlPVwiYnV0dG9uXCJdLmJ0bi1ibG9jayB7XHJcbi8vXHRkaXNwbGF5OiBibG9jaztcclxuLy9cdG1hcmdpbi1yaWdodDogMDtcclxuLy9cdHBhZGRpbmctcmlnaHQ6IDA7XHJcbi8vXHRwYWRkaW5nLWxlZnQ6IDA7XHJcbi8vXHR3aWR0aDogMTAwJTtcclxuLy99XHJcbi8vXHJcbi8vXHJcbi8vLyoqXHJcbi8vICogR2VuZXJhbCBzdHlsZXNcclxuLy8gKi9cclxuLy8uYnRuLFxyXG4vL2J1dHRvbixcclxuLy9odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sXHJcbi8vaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxyXG4vL2lucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xyXG4vL1x0Y3Vyc29yOiBwb2ludGVyO1xyXG4vL1x0dGV4dC1hbGlnbjogY2VudGVyO1xyXG4vL1x0dmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuLy9cclxuLy9cdC8qKlxyXG4vL1x0ICogQHdvcmthcm91bmQgT3ZlcnJpZGUgZGVmYXVsdCBidXR0b24gc3R5bGluZ1xyXG4vL1x0ICogQGFmZmVjdGVkIFdlYmtpdC9GaXJlZm94XHJcbi8vXHQgKi9cclxuLy9cdC8vIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XHJcbi8vXHQtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbi8vfVxyXG4vL1xyXG4vL1xyXG4vLy8qKlxyXG4vLyAqIFJlbW92ZSByaWdodCBtYXJnaW4gb24gbGFzdCBlbGVtZW50IGFuZCBpbnB1dHNcclxuLy8gKi9cclxuLy8uYnRuOmxhc3QtY2hpbGQsXHJcbi8vaW5wdXQuYnRuIHtcclxuLy9cdG1hcmdpbi1yaWdodDogMDtcclxuLy99IiwiLyoqXHJcbiAqIEBzZWN0aW9uIEZvcm1zXHJcbiAqIFN0eWxpbmcgZm9yIGZvcm0gZWxlbWVudHMuXHJcbiAqL1xyXG5cclxuZm9ybSxcclxuZmllbGRzZXQge1xyXG5cdG1hcmdpbi1ib3R0b206ICRzcGFjaW5nO1xyXG59XHJcblxyXG5maWVsZHNldCB7XHJcblx0Ym9yZGVyOiAwO1xyXG5cdHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbmxlZ2VuZCxcclxubGFiZWwge1xyXG5cdGRpc3BsYXk6IGJsb2NrO1xyXG5cdGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcblx0bWFyZ2luOiAwIDAgMC4zMTI1ZW07XHJcblx0cGFkZGluZzogMDtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZC5cclxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXHJcbiAqIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXHJcbiAqIDMuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxyXG4gKi9cclxuYnV0dG9uLFxyXG5pbnB1dCxcclxub3B0Z3JvdXAsXHJcbnNlbGVjdCxcclxudGV4dGFyZWEge1xyXG5cdGNvbG9yOiBsaWdodGVuKCAkY29sb3ItYmxhY2ssIDE4JSApOyAvKiAxICovXHJcblx0Zm9udDogaW5oZXJpdDsgLyogMiAqL1xyXG5cdG1hcmdpbjogMDsgLyogMyAqL1xyXG5cdHBhZGRpbmc6IDAuMzEyNWVtO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkcmVzcyBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAvMTEuXHJcbiAqL1xyXG5idXR0b24ge1xyXG5cdG92ZXJmbG93OiB2aXNpYmxlO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxyXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxyXG4gKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxyXG4gKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3guXHJcbiAqL1xyXG5idXR0b24sXHJcbnNlbGVjdCB7XHJcblx0dGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbn1cclxuXHJcbmlucHV0LFxyXG50ZXh0YXJlYSxcclxuc2VsZWN0IHtcclxuXHRkaXNwbGF5OiBibG9jaztcclxuXHRsaW5lLWhlaWdodDogMS41O1xyXG5cdG1hcmdpbi1ib3R0b206IDEuMTg3NWVtO1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdHBhZGRpbmc6IC4yNWVtIC41ZW07XHJcblx0YmFja2dyb3VuZDogd2hpdGU7XHJcblx0Ym9yZGVyOiAycHggc29saWQgJGNvbG9yLWJsdWUtbGlnaHQ7XHJcblxyXG5cdEBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWVkaXVtKSB7XHJcblx0XHRsaW5lLWhlaWdodDogMS41NjI1O1xyXG5cdH1cclxufVxyXG5cclxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXXtcclxuXHR3aWR0aDogYXV0bztcclxuICAgIG1hcmdpbjogYXV0bztcclxufVxyXG5cclxuLyoqXHJcbiAqIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cclxuICogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXHJcbiAqL1xyXG5vcHRncm91cCB7XHJcblx0Zm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbmZvcm0gYnV0dG9uLFxyXG5mb3JtIC5idXR0b24ge1xyXG5cdG1hcmdpbi1ib3R0b206IDEuMTg3NWVtO1xyXG59XHJcblxyXG50ZXh0YXJlYSB7XHJcblx0aGVpZ2h0OiAxMmVtO1xyXG5cdG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG5bdHlwZT1cImltYWdlXCJdLFxyXG5bdHlwZT1cImNoZWNrYm94XCJdLFxyXG5bdHlwZT1cInJhZGlvXCJdIHtcclxuXHRjdXJzb3I6IHBvaW50ZXI7XHJcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdGhlaWdodDogYXV0bztcclxuXHRtYXJnaW4tYm90dG9tOiAwLjMxMjVlbTtcclxuXHRwYWRkaW5nOiAwO1xyXG5cdHdpZHRoOiBhdXRvO1xyXG59XHJcblxyXG4vKipcclxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cclxuICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcclxuICogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxyXG4gKi9cclxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXHJcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcclxuXHRoZWlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbmlucHV0OmZvY3VzLFxyXG5zZWxlY3Q6Zm9jdXMsXHJcbnRleHRhcmVhOmZvY3VzIHtcclxuXHRib3JkZXItY29sb3I6IHJnYmEoODIsIDE2OCwgMjM2LCAwLjgpO1xyXG5cdGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDc1KSwgMCAwIDAuNWVtIHJnYmEoODIsIDE2OCwgMjM2LCAwLjYpO1xyXG5cdG91dGxpbmU6IDA7XHJcblx0b3V0bGluZTogdGhpbiBkb3R0ZWQgXFw5O1xyXG59XHJcblxyXG5bdHlwZT1cImZpbGVcIl06Zm9jdXMsXHJcblt0eXBlPVwiY2hlY2tib3hcIl06Zm9jdXMsXHJcbnNlbGVjdDpmb2N1cyB7XHJcblx0b3V0bGluZTogdGhpbiBkb3R0ZWQ7XHJcblx0b3V0bGluZTogMC4zMTI1ZW0gYXV0byAtd2Via2l0LWZvY3VzLXJpbmctY29sb3I7XHJcblx0b3V0bGluZS1vZmZzZXQ6IC0wLjEyNWVtO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAqL1xyXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXHJcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxyXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxyXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XHJcblx0Ym9yZGVyLXN0eWxlOiBub25lO1xyXG5cdHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxyXG4gKi9cclxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxyXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcclxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcclxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xyXG5cdG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXHJcbiAqL1xyXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcclxuXHQtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xyXG5cdGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiBJbmxpbmUgaW5wdXRzXHJcbiAqL1xyXG4uaW5wdXQtaW5saW5lIHtcclxuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0dmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuXHR3aWR0aDogYXV0bztcclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiBDb25kZW5zZWQgaW5wdXRzXHJcbiAqL1xyXG4uaW5wdXQtY29uZGVuc2VkIHtcclxuXHRwYWRkaW5nOiAxcHggMC4zMTI1ZW07XHJcblx0Zm9udC1zaXplOiAwLjkzNzVlbTtcclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiBTZWFyY2hcclxuICovXHJcblxyXG5cclxuIC8qKlxyXG4gICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXHJcbiAgKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cclxuICAqL1xyXG5bdHlwZT1cInNlYXJjaFwiXSB7XHJcblx0LXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cclxuXHRvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXHJcbiAqIFNhZmFyaSAoYnV0IG5vdCBDaHJvbWUpIGNsaXBzIHRoZSBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHNlYXJjaCBpbnB1dCBoYXNcclxuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxyXG4gKi9cclxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXHJcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcclxuXHQtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogQ3JlYXRlIHJvdW5kZWQgc2VhcmNoIGJhclxyXG4gKi9cclxuLmlucHV0LXNlYXJjaCB7XHJcblx0d2lkdGg6IDg1JTtcclxuXHRwYWRkaW5nLWxlZnQ6IDAuOTM3NWVtO1xyXG5cdHBhZGRpbmctcmlnaHQ6IDIuNWVtO1xyXG5cdGJvcmRlci1yYWRpdXM6IDEuMzEyNWVtO1xyXG5cdHRyYW5zaXRpb246IHdpZHRoIDMwMG1zIGVhc2UtaW47XHJcblxyXG5cdEBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWVkaXVtKSB7XHJcblx0XHR3aWR0aDogNjUlO1xyXG5cdH1cclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiBTcGVjaWFsIHN0eWxpbmcgZm9yIHNlYXJjaCBpY29uIGFzIGJ1dHRvblxyXG4gKi9cclxuLmJ0bi1zZWFyY2gge1xyXG5cdGRpc3BsYXk6IGlubGluZTtcclxuXHRjb2xvcjogJGNvbG9yLWdyYXktZGFyaztcclxuXHRib3JkZXI6IG5vbmU7XHJcblx0YmFja2dyb3VuZDogbm9uZTtcclxuXHRtYXJnaW4tbGVmdDogLTIuNWVtO1xyXG5cdG1hcmdpbi1ib3R0b206IDA7XHJcblxyXG5cdC5pY29uIHtcclxuXHRcdGZpbGw6ICRjb2xvci1ncmF5LWRhcms7XHJcblx0fVxyXG5cclxuXHQmOmhvdmVyIHtcclxuXHRcdGNvbG9yOiBkYXJrZW4oICRjb2xvci1ncmF5LWRhcmssIDE1JSApO1xyXG5cclxuXHRcdC5pY29uIHtcclxuXHRcdFx0ZmlsbDogZGFya2VuKCAkY29sb3ItZ3JheS1kYXJrLCAxNSUgKTtcclxuXHRcdH1cclxuXHR9XHJcbn0iLCIvKipcclxuICogQHNlY3Rpb24gVGFibGVzXHJcbiAqIFN0eWxpbmcgZm9yIHRhYmxlc1xyXG4gKi9cclxuXHJcbnRhYmxlIHtcclxuXHRib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG5cdGJvcmRlci1zcGFjaW5nOiAwO1xyXG5cdG1hcmdpbi1ib3R0b206ICRzcGFjaW5nO1xyXG5cdG1heC13aWR0aDogMTAwJTtcclxuXHR3aWR0aDogMTAwJTtcclxufVxyXG5cclxudGgsXHJcbnRkIHtcclxuXHR0ZXh0LWFsaWduOiBsZWZ0O1xyXG5cdHBhZGRpbmc6IDAuNWVtO1xyXG59XHJcblxyXG50aCB7XHJcblx0Ym9yZGVyLWJvdHRvbTogMC4xMjVlbSBzb2xpZCAkY29sb3ItZ3JheS1saWdodDtcclxuXHRmb250LXdlaWdodDogYm9sZDtcclxuXHR2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG59XHJcblxyXG50ZCB7XHJcblx0Ym9yZGVyLXRvcDogMXB4IHNvbGlkICRjb2xvci1ncmF5LWxpZ2h0O1xyXG5cdHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGRzIHplYnJhIHN0cmlwaW5nXHJcbiAqL1xyXG4udGFibGUtc3RyaXBlZCB0Ym9keSB0cjpudGgtY2hpbGQob2RkKSB7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogbGlnaHRlbiggJGNvbG9yLWdyYXktbGlnaHQsIDclICk7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogUmVkdWNlcyBwYWRkaW5nIG9uIGNvbmRlbnNlZCB0YWJsZXNcclxuICovXHJcbi50YWJsZS1jb25kZW5zZWQgdGgsXHJcbi50YWJsZS1jb25kZW5zZWQgdGQge1xyXG5cdHBhZGRpbmc6IDAuMjVlbTtcclxufSIsIi8qKlxyXG4gKiBAc2VjdGlvbiBPdmVycmlkZXNcclxuICogTnVkZ2UgYW5kIHR3ZWFrIGFsaWdubWVudCwgc3BhY2luZywgYW5kIHZpc2liaWxpdHkuXHJcbiAqL1xyXG5cclxuXHJcbi8qKlxyXG4gKiBUZXh0IHNpemVzXHJcbiAqL1xyXG5cclxuLnRleHQtc21hbGwge1xyXG5cdGZvbnQtc2l6ZTogMC45Mzc1ZW07XHJcbn1cclxuXHJcbi50ZXh0LWxhcmdlIHtcclxuXHRmb250LXNpemU6IDEuMTg3NWVtO1xyXG5cdGxpbmUtaGVpZ2h0OiAxLjQ7XHJcblxyXG5cdEBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWVkaXVtKSB7XHJcblx0XHRmb250LXNpemU6IDEuMzEyNWVtO1xyXG5cdH1cclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiBUZXh0IGNvbG9yc1xyXG4gKi9cclxuXHJcbi50ZXh0LW11dGVkIHtcclxuXHRjb2xvcjogJGNvbG9yLWdyYXktZGFyaztcclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiBUZXh0IGFsaWdubWVudFxyXG4gKi9cclxuXHJcbi50ZXh0LWNlbnRlciB7XHJcblx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4udGV4dC1yaWdodCB7XHJcblx0dGV4dC1hbGlnbjogcmlnaHQ7XHJcbn1cclxuXHJcbi50ZXh0LWxlZnQge1xyXG5cdHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWVkaXVtKSB7XHJcblx0LnRleHQtcmlnaHQtbWVkaXVtIHtcclxuXHRcdHRleHQtYWxpZ246IHJpZ2h0O1xyXG5cdH1cclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiBGbG9hdHNcclxuICovXHJcblxyXG4uZmxvYXQtbGVmdCB7XHJcblx0ZmxvYXQ6IGxlZnQ7XHJcbn1cclxuXHJcbi5mbG9hdC1jZW50ZXIge1xyXG5cdGZsb2F0OiBub25lO1xyXG5cdG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG5cdG1hcmdpbi1yaWdodDogYXV0bztcclxufVxyXG5cclxuLmZsb2F0LXJpZ2h0IHtcclxuXHRmbG9hdDogcmlnaHQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTWFyZ2luc1xyXG4gKi9cclxuXHJcbi5uby1tYXJnaW4tdG9wIHtcclxuXHRtYXJnaW4tdG9wOiAwO1xyXG59XHJcblxyXG4ubm8tbWFyZ2luLWJvdHRvbSB7XHJcblx0bWFyZ2luLWJvdHRvbTogMDtcclxufVxyXG5cclxuLm1hcmdpbi10b3Age1xyXG5cdG1hcmdpbi10b3A6ICRzcGFjaW5nO1xyXG59XHJcblxyXG4ubWFyZ2luLWJvdHRvbSB7XHJcblx0bWFyZ2luLWJvdHRvbTogJHNwYWNpbmc7XHJcbn1cclxuXHJcbi5tYXJnaW4tYm90dG9tLXNtYWxsIHtcclxuXHRtYXJnaW4tYm90dG9tOiAwLjVlbTtcclxufVxyXG5cclxuLm1hcmdpbi1ib3R0b20tbGFyZ2Uge1xyXG5cdG1hcmdpbi1ib3R0b206IDJlbTtcclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiBQYWRkaW5nXHJcbiAqL1xyXG5cclxuLm5vLXBhZGRpbmctdG9wIHtcclxuXHRwYWRkaW5nLXRvcDogMDtcclxufVxyXG5cclxuLm5vLXBhZGRpbmctYm90dG9tIHtcclxuXHRwYWRkaW5nLWJvdHRvbTogMDtcclxufVxyXG5cclxuLnBhZGRpbmctdG9wIHtcclxuXHRwYWRkaW5nLXRvcDogJHNwYWNpbmc7XHJcbn1cclxuXHJcbi5wYWRkaW5nLXRvcC1zbWFsbCB7XHJcblx0cGFkZGluZy10b3A6IDAuNWVtO1xyXG59XHJcblxyXG4ucGFkZGluZy10b3AtbGFyZ2Uge1xyXG5cdHBhZGRpbmctdG9wOiA0ZW07XHJcbn1cclxuXHJcbi5wYWRkaW5nLWJvdHRvbSB7XHJcblx0cGFkZGluZy1ib3R0b206ICRzcGFjaW5nO1xyXG59XHJcblxyXG4ucGFkZGluZy1ib3R0b20tc21hbGwge1xyXG5cdHBhZGRpbmctYm90dG9tOiAwLjVlbTtcclxufVxyXG5cclxuLnBhZGRpbmctYm90dG9tLWxhcmdlIHtcclxuXHRwYWRkaW5nLWJvdHRvbTogMmVtO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFZpc2liaWxpdHlcclxuICovXHJcblxyXG4vKlxyXG4gKiBIaWRlIG9ubHkgdmlzdWFsbHksIGJ1dCBoYXZlIGl0IGF2YWlsYWJsZSBmb3Igc2NyZWVuIHJlYWRlcnM6XHJcbiAqIEBsaW5rIGh0dHBzOi8vc25vb2suY2EvYXJjaGl2ZXMvaHRtbF9hbmRfY3NzL2hpZGluZy1jb250ZW50LWZvci1hY2Nlc3NpYmlsaXR5XHJcbiAqXHJcbiAqIDEuIEZvciBsb25nIGNvbnRlbnQsIGxpbmUgZmVlZHMgYXJlIG5vdCBpbnRlcnByZXRlZCBhcyBzcGFjZXMgYW5kIHNtYWxsIHdpZHRoXHJcbiAqICAgIGNhdXNlcyBjb250ZW50IHRvIHdyYXAgMSB3b3JkIHBlciBsaW5lOlxyXG4gKiAgICBodHRwczovL21lZGl1bS5jb20vQGplc3NlYmVhY2gvYmV3YXJlLXNtdXNoZWQtb2ZmLXNjcmVlbi1hY2Nlc3NpYmxlLXRleHQtNTk1MmE0YzJjYmZlXHJcbiAqL1xyXG4udmlzdWFsbHktaGlkZGVuIHtcclxuICAgIGJvcmRlcjogMDtcclxuICAgIGNsaXA6IHJlY3QoMCAwIDAgMCk7XHJcbiAgICBoZWlnaHQ6IDFweDtcclxuICAgIG1hcmdpbjogLTFweDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgLyogMSAqL1xyXG4gICAgd2lkdGg6IDFweDtcclxufVxyXG5cclxuLnNvZnQtaGlkZGVue1xyXG5cdHZpc2liaWxpdHk6IGhpZGRlbjtcclxufVxyXG5cclxuLypcclxuICogRXh0ZW5kcyB0aGUgLnZpc3VhbGx5aGlkZGVuIGNsYXNzIHRvIGFsbG93IHRoZSBlbGVtZW50IHRvIGJlIGZvY3VzYWJsZSB3aGVuIG5hdmlnYXRlZCB0byB2aWEgdGhlIGtleWJvYXJkXHJcbiAqIEBsaW5rIGh0dHBzOi8vd3d3LmRydXBhbC5vcmcvbm9kZS84OTc2MzhcclxuICovXHJcbi52aXN1YWxseS1oaWRkZW4uZm9jdXNhYmxlOmFjdGl2ZSxcclxuLnZpc3VhbGx5LWhpZGRlbi5mb2N1c2FibGU6Zm9jdXMge1xyXG4gICAgY2xpcDogYXV0bztcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIG1hcmdpbjogMDtcclxuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xyXG4gICAgcG9zaXRpb246IHN0YXRpYztcclxuICAgIHdoaXRlLXNwYWNlOiBpbmhlcml0O1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAd29ya2Fyb3VuZFxyXG4gKiBAYWZmZWN0ZWQgSUUgOC85LzEwXHJcbiAqIEBsaW5rIGh0dHA6Ly9qdWljeXN0dWRpby5jb20vYXJ0aWNsZS9zY3JlZW4tcmVhZGVycy1kaXNwbGF5LW5vbmUucGhwXHJcbiAqL1xyXG5baGlkZGVuXSB7XHJcblx0ZGlzcGxheTogbm9uZTtcclxuXHR2aXNpYmlsaXR5OiBoaWRkZW47XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogQ29udGFpbiBmbG9hdHNcclxuICogVGhlIHNwYWNlIGNvbnRlbnQgaXMgb25lIHdheSB0byBhdm9pZCBhbiBPcGVyYSBidWcgd2hlbiB0aGUgYGNvbnRlbnRlZGl0YWJsZWAgYXR0cmlidXRlIGlzIGluY2x1ZGVkIGFueXdoZXJlIGVsc2UgaW4gdGhlIGRvY3VtZW50LlxyXG4gKiBAbGluayBodHRwczovL2dpdGh1Yi5jb20vaDVicC9odG1sNS1ib2lsZXJwbGF0ZS9ibG9iL21hc3Rlci9kaXN0L2Nzcy9tYWluLmNzc1xyXG4gKi9cclxuXHJcbi5jbGVhcmZpeDpiZWZvcmUsXHJcbi5jbGVhcmZpeDphZnRlciB7XHJcblx0ZGlzcGxheTogdGFibGU7XHJcblx0Y29udGVudDogXCIgXCI7XHJcbn1cclxuXHJcbi5jbGVhcmZpeDphZnRlciB7XHJcblx0Y2xlYXI6IGJvdGg7XHJcbn1cclxuIiwiLyoqXHJcbiAqIEBzZWN0aW9uIFByaW50XHJcbiAqIFN0eWxpbmcgZm9yIHByaW50ZWQgY29udGVudC4gQWRhcHRlZCBmcm9tIEhUTUw1QlAuXHJcbiAqIEBsaW5rIGh0dHA6Ly9odG1sNWJvaWxlcnBsYXRlLmNvbVxyXG4gKi9cclxuXHJcbkBtZWRpYSBwcmludCB7XHJcblxyXG5cdC8qKlxyXG5cdCAqIFVuaXZlcnNhbCBzZWxlY3Rvci5cclxuXHQgKiBSZXNldCBhbGwgY29udGVudCB0byB0cmFuc3BhcmVudCBiYWNrZ3JvdW5kLCBibGFjayBjb2xvciwgYW5kIHJlbW92ZSBib3ggYW5kIHRleHQgc2hhZG93cy5cclxuXHQgKi9cclxuXHQqIHtcclxuXHRcdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XHJcblx0XHRjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xyXG5cdFx0Ym94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xyXG5cdFx0dGV4dC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIFNwZWNpZmllcyBwYWdlIG1hcmdpblxyXG5cdCAqL1xyXG5cdEBwYWdlIHtcclxuXHRcdG1hcmdpbjogMC41Y207XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBVbmRlcmxpbmUgYWxsIGxpbmtzXHJcblx0ICovXHJcblx0YSxcclxuXHRhOnZpc2l0ZWQge1xyXG5cdFx0dGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBTaG93IFVSTCBhZnRlciBsaW5rc1xyXG5cdCAqL1xyXG5cdGFbaHJlZl06YWZ0ZXIge1xyXG5cdFx0Y29udGVudDogXCIgKFwiIGF0dHIoaHJlZikgXCIpXCI7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBEb24ndCBzaG93IFVSTCBmb3IgaW50ZXJuYWwgbGlua3NcclxuXHQgKi9cclxuXHRhW2hyZWZePVwiI1wiXTphZnRlciB7XHJcblx0XHRjb250ZW50OiBcIlwiO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogU3BlY2lmaWVzIHRoZSBtaW5pbXVtIG51bWJlciBvZiBsaW5lcyB0byBwcmludCBhdCB0aGUgdG9wIGFuZCBib3R0b20gb2YgYSBwYWdlLlxyXG5cdCAqL1xyXG5cdHAsXHJcblx0aDEsIGgyLCBoMyB7XHJcblx0XHRvcnBoYW5zOiAzO1xyXG5cdFx0d2lkb3dzOiAzO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogQXZvaWQgaW5zZXJ0aW5nIGEgcGFnZSBicmVhayBhZnRlciBoZWFkZXJzXHJcblx0ICovXHJcblx0aDEsIGgyLCBoMyB7XHJcblx0XHRwYWdlLWJyZWFrLWFmdGVyOiBhdm9pZDtcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIENoYW5nZSBib3JkZXIgY29sb3Igb24gYmxvY2txdW90ZXMgYW5kIHByZWZvcm1hdHRlZCB0ZXh0LlxyXG5cdCAqIEF2b2lkIHBhZ2UgYnJlYWtzIGluc2lkZSB0aGUgY29udGVudFxyXG5cdCAqL1xyXG5cdHByZSxcclxuXHRibG9ja3F1b3RlIHtcclxuXHRcdGJvcmRlci1jb2xvcjogIzk5OTtcclxuXHRcdHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIERpc3BsYXllZCBhcyBhIHRhYmxlIGhlYWRlciByb3cgZ3JvdXBcclxuXHQgKi9cclxuXHR0aGVhZCB7XHJcblx0XHRkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXA7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBBdm9pZCBpbnNlcnRpbmcgYSBwYWdlIGJyZWFrIGluc2lkZSB0YWJsZSByb3dzIGFuZCBpbWFnZXNcclxuXHQgKi9cclxuXHR0cixcclxuXHRpbWcge1xyXG5cdFx0cGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xyXG5cdH1cclxuXHJcbn0iLCIvKiBvcml5YSAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnQmFsb28gQmhhaW5hJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJCYWxvbyBCaGFpbmEgUmVndWxhclwiKSwgbG9jYWwoXCJCYWxvb0JoYWluYS1SZWd1bGFyXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL2JhbG9vYmhhaW5hL3Y1L05vYTE2VXp6enAyRklrZmhxNXZtOXRoQklnNThxaEUud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzA5NjQtMDk2NSwgVSswQjAxLTBCNzcsIFUrMjAwQy0yMDBELCBVKzIwQjksIFUrMjVDQztcbn1cblxuLyogdmlldG5hbWVzZSAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnQmFsb28gQmhhaW5hJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJCYWxvbyBCaGFpbmEgUmVndWxhclwiKSwgbG9jYWwoXCJCYWxvb0JoYWluYS1SZWd1bGFyXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL2JhbG9vYmhhaW5hL3Y1L05vYTE2VXp6enAyRklrZmhxNXZtOXRoQk5BNThxaEUud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAxMDItMDEwMywgVSswMTEwLTAxMTEsIFUrMUVBMC0xRUY5LCBVKzIwQUI7XG59XG5cbi8qIGxhdGluLWV4dCAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnQmFsb28gQmhhaW5hJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJCYWxvbyBCaGFpbmEgUmVndWxhclwiKSwgbG9jYWwoXCJCYWxvb0JoYWluYS1SZWd1bGFyXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL2JhbG9vYmhhaW5hL3Y1L05vYTE2VXp6enAyRklrZmhxNXZtOXRoQk5RNThxaEUud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAxMDAtMDI0RiwgVSswMjU5LCBVKzFFMDAtMUVGRiwgVSsyMDIwLCBVKzIwQTAtMjBBQiwgVSsyMEFELTIwQ0YsIFUrMjExMywgVSsyQzYwLTJDN0YsIFUrQTcyMC1BN0ZGO1xufVxuXG4vKiBsYXRpbiAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnQmFsb28gQmhhaW5hJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJCYWxvbyBCaGFpbmEgUmVndWxhclwiKSwgbG9jYWwoXCJCYWxvb0JoYWluYS1SZWd1bGFyXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL2JhbG9vYmhhaW5hL3Y1L05vYTE2VXp6enAyRklrZmhxNXZtOXRoQk93NTgud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAwMDAtMDBGRiwgVSswMTMxLCBVKzAxNTItMDE1MywgVSswMkJCLTAyQkMsIFUrMDJDNiwgVSswMkRBLCBVKzAyREMsIFUrMjAwMC0yMDZGLCBVKzIwNzQsIFUrMjBBQywgVSsyMTIyLCBVKzIxOTEsIFUrMjE5MywgVSsyMjEyLCBVKzIyMTUsIFUrRkVGRiwgVStGRkZEO1xufVxuXG4vKiBjeXJpbGxpYy1leHQgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiT3BlbiBTYW5zIFJlZ3VsYXJcIiksIGxvY2FsKFwiT3BlblNhbnMtUmVndWxhclwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtOFlhR3MxMjZNaVpwQkEtVUZXSjBiYmNrLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswNDYwLTA1MkYsIFUrMUM4MC0xQzg4LCBVKzIwQjQsIFUrMkRFMC0yREZGLCBVK0E2NDAtQTY5RiwgVStGRTJFLUZFMkY7XG59XG5cbi8qIGN5cmlsbGljICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIk9wZW4gU2FucyBSZWd1bGFyXCIpLCBsb2NhbChcIk9wZW5TYW5zLVJlZ3VsYXJcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbThZYUdzMTI2TWlacEJBLVVGVVowYmJjay53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDQwMC0wNDVGLCBVKzA0OTAtMDQ5MSwgVSswNEIwLTA0QjEsIFUrMjExNjtcbn1cblxuLyogZ3JlZWstZXh0ICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIk9wZW4gU2FucyBSZWd1bGFyXCIpLCBsb2NhbChcIk9wZW5TYW5zLVJlZ3VsYXJcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbThZYUdzMTI2TWlacEJBLVVGV1owYmJjay53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMUYwMC0xRkZGO1xufVxuXG4vKiBncmVlayAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgUmVndWxhclwiKSwgbG9jYWwoXCJPcGVuU2Fucy1SZWd1bGFyXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW04WWFHczEyNk1pWnBCQS1VRlZwMGJiY2sud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAzNzAtMDNGRjtcbn1cblxuLyogdmlldG5hbWVzZSAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgUmVndWxhclwiKSwgbG9jYWwoXCJPcGVuU2Fucy1SZWd1bGFyXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW04WWFHczEyNk1pWnBCQS1VRldwMGJiY2sud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAxMDItMDEwMywgVSswMTEwLTAxMTEsIFUrMUVBMC0xRUY5LCBVKzIwQUI7XG59XG5cbi8qIGxhdGluLWV4dCAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgUmVndWxhclwiKSwgbG9jYWwoXCJPcGVuU2Fucy1SZWd1bGFyXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW04WWFHczEyNk1pWnBCQS1VRlc1MGJiY2sud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAxMDAtMDI0RiwgVSswMjU5LCBVKzFFMDAtMUVGRiwgVSsyMDIwLCBVKzIwQTAtMjBBQiwgVSsyMEFELTIwQ0YsIFUrMjExMywgVSsyQzYwLTJDN0YsIFUrQTcyMC1BN0ZGO1xufVxuXG4vKiBsYXRpbiAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgUmVndWxhclwiKSwgbG9jYWwoXCJPcGVuU2Fucy1SZWd1bGFyXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW04WWFHczEyNk1pWnBCQS1VRlZaMGIud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAwMDAtMDBGRiwgVSswMTMxLCBVKzAxNTItMDE1MywgVSswMkJCLTAyQkMsIFUrMDJDNiwgVSswMkRBLCBVKzAyREMsIFUrMjAwMC0yMDZGLCBVKzIwNzQsIFUrMjBBQywgVSsyMTIyLCBVKzIxOTEsIFUrMjE5MywgVSsyMjEyLCBVKzIyMTUsIFUrRkVGRiwgVStGRkZEO1xufVxuXG4vKiBjeXJpbGxpYy1leHQgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiT3BlbiBTYW5zIEJvbGRcIiksIGxvY2FsKFwiT3BlblNhbnMtQm9sZFwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtNVlhR3MxMjZNaVpwQkEtVU43cmdPWC1ocE9xYy53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDQ2MC0wNTJGLCBVKzFDODAtMUM4OCwgVSsyMEI0LCBVKzJERTAtMkRGRiwgVStBNjQwLUE2OUYsIFUrRkUyRS1GRTJGO1xufVxuXG4vKiBjeXJpbGxpYyAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgQm9sZFwiKSwgbG9jYWwoXCJPcGVuU2Fucy1Cb2xkXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW01WWFHczEyNk1pWnBCQS1VTjdyZ09WdWhwT3FjLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswNDAwLTA0NUYsIFUrMDQ5MC0wNDkxLCBVKzA0QjAtMDRCMSwgVSsyMTE2O1xufVxuXG4vKiBncmVlay1leHQgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiT3BlbiBTYW5zIEJvbGRcIiksIGxvY2FsKFwiT3BlblNhbnMtQm9sZFwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtNVlhR3MxMjZNaVpwQkEtVU43cmdPWHVocE9xYy53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMUYwMC0xRkZGO1xufVxuXG4vKiBncmVlayAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgQm9sZFwiKSwgbG9jYWwoXCJPcGVuU2Fucy1Cb2xkXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW01WWFHczEyNk1pWnBCQS1VTjdyZ09VZWhwT3FjLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswMzcwLTAzRkY7XG59XG5cbi8qIHZpZXRuYW1lc2UgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiT3BlbiBTYW5zIEJvbGRcIiksIGxvY2FsKFwiT3BlblNhbnMtQm9sZFwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtNVlhR3MxMjZNaVpwQkEtVU43cmdPWGVocE9xYy53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDEwMi0wMTAzLCBVKzAxMTAtMDExMSwgVSsxRUEwLTFFRjksIFUrMjBBQjtcbn1cblxuLyogbGF0aW4tZXh0ICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIk9wZW4gU2FucyBCb2xkXCIpLCBsb2NhbChcIk9wZW5TYW5zLUJvbGRcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbTVZYUdzMTI2TWlacEJBLVVON3JnT1hPaHBPcWMud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAxMDAtMDI0RiwgVSswMjU5LCBVKzFFMDAtMUVGRiwgVSsyMDIwLCBVKzIwQTAtMjBBQiwgVSsyMEFELTIwQ0YsIFUrMjExMywgVSsyQzYwLTJDN0YsIFUrQTcyMC1BN0ZGO1xufVxuXG4vKiBsYXRpbiAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgQm9sZFwiKSwgbG9jYWwoXCJPcGVuU2Fucy1Cb2xkXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW01WWFHczEyNk1pWnBCQS1VTjdyZ09VdWhwLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswMDAwLTAwRkYsIFUrMDEzMSwgVSswMTUyLTAxNTMsIFUrMDJCQi0wMkJDLCBVKzAyQzYsIFUrMDJEQSwgVSswMkRDLCBVKzIwMDAtMjA2RiwgVSsyMDc0LCBVKzIwQUMsIFUrMjEyMiwgVSsyMTkxLCBVKzIxOTMsIFUrMjIxMiwgVSsyMjE1LCBVK0ZFRkYsIFUrRkZGRDtcbn1cblxuKjo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg1MywgMjA3LCAyMTIsIDAuMyk7XG59XG5cbmJvZHkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbnN2Zy5maWx0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IC0xO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbi5pY29uIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRyYW5zaXRpb246IGFsbCAuM3MgZWFzZS1pbi1vdXQ7XG59XG5cbi5oZWFydCAjaGVhcnRfYm9yZGVyIHtcbiAgZmlsbDogd2hpdGU7XG59XG5cbi5oZWFydCAjaGVhcnRfaW5zaWRlIHtcbiAgZmlsbDogdHJhbnNwYXJlbnQ7XG59XG5cbi5oZWFydC0tZmlsbC1ncmVlbiAjaGVhcnRfaW5zaWRlIHtcbiAgZmlsbDogIzAwNGQwMDtcbn1cblxuLmhlYXJ0LS1maWxsLXdoaXRlICNoZWFydF9pbnNpZGUge1xuICBmaWxsOiB3aGl0ZTtcbn1cblxuLmhlYXJ0LS1pbnZlcnNlICNoZWFydF9ib3JkZXIge1xuICBmaWxsOiAjNjJhYjAzO1xufVxuXG4uaGVhcnQtLWludmVyc2UuaGVhcnQtLWZpbGwtd2hpdGUgI2hlYXJ0X2luc2lkZSB7XG4gIGZpbGw6ICM2MmFiMDM7XG59XG5cbi5hcnJvdyB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmFycm93LS1yb3RhdGUge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xufVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuVGl0bGU6IFJhZGlvIFN3aXRjaFxyXG5EZXNjcjogQ3VzdG9tIHJhZGlvIHRvZ2dsZVxyXG5cclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbjpyb290IHtcbiAgLS1yYWRpby1zd2l0Y2gtd2lkdGg6IDE4NnB4O1xuICAtLXJhZGlvLXN3aXRjaC1oZWlnaHQ6IDQ2cHg7XG4gIC0tcmFkaW8tc3dpdGNoLXBhZGRpbmc6IDNweDtcbiAgLS1yYWRpby1zd2l0Y2gtcmFkaXVzOiA1MGVtO1xuICAtLXJhZGlvLXN3aXRjaC1hbmltYXRpb24tZHVyYXRpb246IDAuM3M7XG59XG5cbi5yYWRpby1zd2l0Y2gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIHBhZGRpbmc6IHZhcigtLXJhZGlvLXN3aXRjaC1wYWRkaW5nKTtcbiAgYm9yZGVyLXJhZGl1czogY2FsYyh2YXIoLS1yYWRpby1zd2l0Y2gtcmFkaXVzKSAqIDEuNCk7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlNWU1ZTU7XG59XG5cbi5yYWRpby1zd2l0Y2g6Zm9jdXMtd2l0aGluLCAucmFkaW8tc3dpdGNoOmFjdGl2ZSB7XG4gIGJveC1zaGFkb3c6IDAgMCAwIDFweCAjZTVlNWU1O1xufVxuXG4ucmFkaW8tc3dpdGNoX19pdGVtIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGhlaWdodDogY2FsYyh2YXIoLS1yYWRpby1zd2l0Y2gtaGVpZ2h0KSAtIDIqdmFyKC0tcmFkaW8tc3dpdGNoLXBhZGRpbmcpKTtcbiAgd2lkdGg6IGNhbGModmFyKC0tcmFkaW8tc3dpdGNoLXdpZHRoKSowLjUgLSAgdmFyKC0tcmFkaW8tc3dpdGNoLXBhZGRpbmcpKTtcbn1cblxuLnJhZGlvLXN3aXRjaF9fbGFiZWwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBib3JkZXItcmFkaXVzOiB2YXIoLS1yYWRpby1zd2l0Y2gtcmFkaXVzKTtcbiAgbGluZS1oZWlnaHQ6IGNhbGModmFyKC0tcmFkaW8tc3dpdGNoLWhlaWdodCkgLSAyKnZhcigtLXJhZGlvLXN3aXRjaC1wYWRkaW5nKSk7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LXNpemU6IHZhcigtLXRleHQtc20pO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgdHJhbnNpdGlvbjogYWxsIHZhcigtLXJhZGlvLXN3aXRjaC1hbmltYXRpb24tZHVyYXRpb24pO1xufVxuXG4ucmFkaW8tc3dpdGNoX19pbnB1dDpjaGVja2VkIH4gLnJhZGlvLXN3aXRjaF9fbGFiZWwge1xuICBjb2xvcjogI2ZmZmZmZjtcbn1cblxuLnJhZGlvLXN3aXRjaF9faW5wdXQ6Zm9jdXMgfiAucmFkaW8tc3dpdGNoX19sYWJlbCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxNGEzZTk7XG59XG5cbi5yYWRpby1zd2l0Y2hfX2xhYmVsIDpub3QoKik6Zm9jdXMtd2l0aGluLFxuLnJhZGlvLXN3aXRjaF9faW5wdXQ6Zm9jdXMgfiAucmFkaW8tc3dpdGNoX19sYWJlbCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4ucmFkaW8tc3dpdGNoX19tYXJrZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDE7XG4gIHRvcDogMDtcbiAgbGVmdDogLTEwMCU7XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLXJhZGlvLXN3aXRjaC1yYWRpdXMpO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICMzNWNmZDQsICMxNGExZTYpO1xuICBoZWlnaHQ6IGNhbGModmFyKC0tcmFkaW8tc3dpdGNoLWhlaWdodCkgLSAyKnZhcigtLXJhZGlvLXN3aXRjaC1wYWRkaW5nKSk7XG4gIHdpZHRoOiBjYWxjKHZhcigtLXJhZGlvLXN3aXRjaC13aWR0aCkqMC41IC0gIHZhcigtLXJhZGlvLXN3aXRjaC1wYWRkaW5nKSk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSB2YXIoLS1yYWRpby1zd2l0Y2gtYW5pbWF0aW9uLWR1cmF0aW9uKTtcbn1cblxuLnJhZGlvLXN3aXRjaF9faW5wdXQ6Y2hlY2tlZCB+IC5yYWRpby1zd2l0Y2hfX21hcmtlciB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcbn1cblxuLmNvb2tpZSB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBib3R0b206IDFlbTtcbiAgbGVmdDogMmVtO1xuICB3aWR0aDogODAlO1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICBib3gtc2hhZG93OiAycHggMnB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gIHotaW5kZXg6IDQ7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmNvb2tpZSB7XG4gICAgYm90dG9tOiAyZW07XG4gICAgd2lkdGg6IDMwJTtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIGNvbGxhcHNlIHtcbiAgMCUge1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgIHdpZHRoOiA4MCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIHotaW5kZXg6IDQ7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICAxMDAlIHtcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICB3aWR0aDogODAlO1xuICAgIGhlaWdodDogYXV0bztcbiAgICB6LWluZGV4OiA0O1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBjb2xsYXBzZUxhcmdlIHtcbiAgMCUge1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgIHdpZHRoOiAzMCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIHotaW5kZXg6IDQ7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICAxMDAlIHtcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICB3aWR0aDogMzAlO1xuICAgIGhlaWdodDogYXV0bztcbiAgICB6LWluZGV4OiA0O1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cblxuLmNvb2tpZS0tbm8tdmlzaWJsZSB7XG4gIGFuaW1hdGlvbjogY29sbGFwc2UgLjNzIGVhc2UtaW4tb3V0IDE7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdpZHRoOiAwO1xuICBoZWlnaHQ6IDA7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmNvb2tpZS0tbm8tdmlzaWJsZSB7XG4gICAgYW5pbWF0aW9uOiBjb2xsYXBzZUxhcmdlIC4zcyBlYXNlLWluLW91dCAxO1xuICB9XG59XG5cbi5jb29raWVfX2ltZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAtMmVtO1xuICBsZWZ0OiAtMmVtO1xuICBtYXJnaW46IGF1dG87XG4gIHdpZHRoOiA0ZW07XG4gIGhlaWdodDogNGVtO1xufVxuXG4uY29va2llX19tZXNzYWdlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMWVtIDJlbSAuNWVtO1xufVxuXG4uY29va2llX19tZXNzYWdlIGgxLCAuY29va2llX19tZXNzYWdlIHAge1xuICBtYXJnaW4tYm90dG9tOiAuMjVlbTtcbn1cblxuLmNvb2tpZV9fYnRuIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1ib3R0b206IC41ZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uY29va2llLW92ZXJsYXkge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDM7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjc1KTtcbn1cblxuQGtleWZyYW1lcyBoaWRkZW4ge1xuICAwJSB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43NSk7XG4gICAgei1pbmRleDogMztcbiAgfVxuICAxMDAlIHtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwKTtcbiAgICB6LWluZGV4OiAzO1xuICB9XG59XG5cbi5jb29raWUtb3ZlcmxheS0tbm8tdmlzaWJsZSB7XG4gIGFuaW1hdGlvbjogaGlkZGVuIC4zcyBlYXNlLWluLW91dCAxO1xuICB6LWluZGV4OiAtMTtcbiAgd2lkdGg6IDA7XG4gIGhlaWdodDogMDtcbn1cblxuLmJsdXItdXAge1xuICBmaWx0ZXI6IGJsdXIoOHB4KTtcbiAgdHJhbnNpdGlvbjogZmlsdGVyIDYwMG1zO1xufVxuXG4uYmx1ci11cC5sYXp5bG9hZGluZyB7XG4gIGZpbHRlcjogYmx1cig1cHgpO1xufVxuXG4uYmx1ci11cC5sYXp5bG9hZGVkIHtcbiAgZmlsdGVyOiBibHVyKDApO1xufVxuXG4uZm9ybSB7XG4gIHdpZHRoOiA5NSU7XG4gIG1hcmdpbjogYXV0bztcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuZm9ybSB7XG4gICAgd2lkdGg6IDgwJTtcbiAgfVxufVxuXG4uZm9ybV9faXRlbSB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uZm9ybV9faXRlbV9fbGFiZWwge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAwIDFlbTtcbiAgcGFkZGluZzogLjVlbSAwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuZm9ybV9faXRlbV9fbGFiZWwge1xuICAgIHdpZHRoOiAzMCU7XG4gICAgbWFyZ2luOiAwIDJlbTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGxlZnQ7XG4gIH1cbn1cblxuLmZvcm1fX2l0ZW1fX2lucHV0IHtcbiAgd2lkdGg6IDkwJTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuZm9ybV9faXRlbV9faW5wdXQge1xuICAgIHdpZHRoOiA0MCU7XG4gIH1cbn1cblxuLmhlYWRlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgd2lkdGg6IDk4JTtcbiAgbWFyZ2luOiAwIDElO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHotaW5kZXg6IDM7XG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDNweDtcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDNweDtcbn1cblxuLmhlYWRlcl9fbG9nbyB7XG4gIG1hcmdpbjogLjI1ZW0gMWVtO1xuICB6LWluZGV4OiAzO1xufVxuXG4uaGVhZGVyX19sb2dvIGltZyB7XG4gIGhlaWdodDogM2VtO1xuICB3aWR0aDogYXV0bztcbn1cblxuLmhlYWRlcl9fbmF2IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCByZ2JhKDIwLCAxNjEsIDIzMCwgMC44KSwgIzE0YTFlNiwgIzIzYjZkZSk7XG4gIHotaW5kZXg6IDI7XG4gIGJvcmRlci1yYWRpdXM6IDAgMCAycHggMnB4O1xuICBjb2xvcjogd2hpdGU7XG4gIHRvcDogMy41ZW07XG4gIHRyYW5zZm9ybTogcm90YXRlWCgtMTAwZGVnKTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xuICBvcGFjaXR5OiAwO1xufVxuXG4uaGVhZGVyX19uYXZfX21lbnUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDAgMi41JTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuaGVhZGVyX19uYXZfX21lbnUge1xuICAgIHBhZGRpbmc6IDAgNSU7XG4gIH1cbn1cblxuLmhlYWRlcl9fbmF2X19tZW51X19jb2x1bW4ge1xuICB3aWR0aDogNTAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuaGVhZGVyX19uYXZfX21lbnVfX2NvbHVtbiB7XG4gICAgd2lkdGg6IDI0JTtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB9XG4gIC5oZWFkZXJfX25hdl9fbWVudV9fY29sdW1uOjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIGhlaWdodDogNTAlO1xuICAgIHdpZHRoOiAxcHg7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiAyNSU7XG4gIH1cbiAgLmhlYWRlcl9fbmF2X19tZW51X19jb2x1bW46bGFzdC1jaGlsZDo6YWZ0ZXIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmhlYWRlcl9fbmF2X19tZW51X19jb2x1bW46bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXRvcDogMmVtO1xuICB9XG59XG5cbi5oZWFkZXJfX25hdl9fbWVudV9fY29sdW1uOm50aC1jaGlsZCgxKSB7XG4gIG9yZGVyOiAxO1xufVxuXG4uaGVhZGVyX19uYXZfX21lbnVfX2NvbHVtbjpudGgtY2hpbGQoMikge1xuICBvcmRlcjogMjtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuaGVhZGVyX19uYXZfX21lbnVfX2NvbHVtbjpudGgtY2hpbGQoMikge1xuICAgIG9yZGVyOiAzO1xuICB9XG59XG5cbi5oZWFkZXJfX25hdl9fbWVudV9fY29sdW1uOm50aC1jaGlsZCgzKSB7XG4gIG9yZGVyOiAzO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5oZWFkZXJfX25hdl9fbWVudV9fY29sdW1uOm50aC1jaGlsZCgzKSB7XG4gICAgb3JkZXI6IDI7XG4gIH1cbn1cblxuLmhlYWRlcl9fbmF2X19tZW51X19jb2x1bW46bnRoLWNoaWxkKDQpIHtcbiAgb3JkZXI6IDQ7XG59XG5cbi5oZWFkZXJfX25hdl9fbWVudV9fY29sdW1uX190aXRsZSBhIHtcbiAgY29sb3I6IHdoaXRlO1xuICBtYXJnaW46IDA7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmhlYWRlcl9fbmF2X19tZW51X19jb2x1bW5fX3RpdGxlIGEge1xuICAgIG1hcmdpbjogMCAwIDFlbTtcbiAgfVxufVxuXG4uaGVhZGVyX19uYXZfX21lbnVfX2NvbHVtbl9fbGlzdCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogMCAwIDAgMWVtO1xufVxuXG4uaGVhZGVyX19uYXZfX21lbnVfX2NvbHVtbl9fbGlzdF9fbGluayB7XG4gIG1hcmdpbjogLjVlbSBhdXRvO1xufVxuXG4uaGVhZGVyX19uYXZfX21lbnVfX2NvbHVtbl9fbGlzdF9fbGluayBhIHtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uaGVhZGVyX19uYXZfX21lbnVfX2NvbHVtbl9fbGlzdF9fbGluayBzcGFuIHtcbiAgcGFkZGluZzogM3B4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIG1hcmdpbi1sZWZ0OiAuOGVtO1xuICBmb250LXNpemU6IDgwJTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCNmOWM5MGQsICNmOTZlMTApO1xufVxuXG4uaGVhZGVyX19tZW51LWljb24gLm1lbnUtaWNvbi13cmFwcGVyIHtcbiAgbWFyZ2luOiAxZW0gMmVtO1xufVxuXG4uaGVhZHJvb20ge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAjMzVjZmQ0LCAjMTRhMWU2KTtcbiAgYmFja2dyb3VuZC1zaXplOiAxMDAlIDIwMCU7XG4gIHRyYW5zaXRpb246IGFsbCAuM3MgZWFzZS1pbi1vdXQ7XG4gIHRyYW5zaXRpb24tZGVsYXk6IC4zcztcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTAwJSAyMDAlO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuXG4uaGVhZHJvb20tLXBpbm5lZCAuaGVhZHJvb20tLXRvcCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTAwJSAyMDAlO1xufVxuXG4uaGVhZHJvb20tLXBpbm5lZCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDAlKTtcbn1cblxuLmhlYWRyb29tLS11bnBpbm5lZCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTtcbn1cblxuLmhlYWRlci0tcGlubmVkLCAuaGVhZHJvb20tLW5vdC10b3AuaGVhZHJvb20tLXBpbm5lZCB7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDEwMCUgMDtcbn1cblxuLyogTWVudSBpY29uIHN0eWxlcyAqL1xuLm1lbnUtaWNvbi13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAzNHB4O1xuICBoZWlnaHQ6IDM0cHg7XG4gIG1hcmdpbjogMmVtO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgdHJhbnNpdGlvbjogMC4xcztcbn1cblxuLm1lbnUtaWNvbi13cmFwcGVyIHN2ZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAtMzNweDtcbiAgbGVmdDogLTMzcHg7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwLjEpO1xuICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgwLjEpO1xuICB0cmFuc2Zvcm06IHNjYWxlKDAuMSk7XG4gIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogMCAwO1xuICAtbXMtdHJhbnNmb3JtLW9yaWdpbjogMCAwO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiAwIDA7XG59XG5cbi5tZW51LWljb24td3JhcHBlciBzdmcgcGF0aCB7XG4gIHN0cm9rZTogI2ZmZjtcbiAgc3Ryb2tlLXdpZHRoOiAzMHB4O1xuICBzdHJva2UtbGluZWNhcDogcm91bmQ7XG4gIHN0cm9rZS1saW5lam9pbjogcm91bmQ7XG4gIGZpbGw6IHRyYW5zcGFyZW50O1xufVxuXG4ubWVudS1pY29uLXdyYXBwZXIgLm1lbnUtaWNvbi10cmlnZ2VyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBib3JkZXI6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLm1lbnUtaWNvbi13cmFwcGVyIC5tZW51LWljb24tdHJpZ2dlcjpob3Zlcixcbi5tZW51LWljb24td3JhcHBlciAubWVudS1pY29uLXRyaWdnZXI6Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xufVxuXG4ubWVudS1pY29uLXdyYXBwZXIge1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDEwMDtcbn1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiBHZW5lcmF0ZWQgYnkgQW5pbWlzdGEgb24gMjAxOS02LTYgMTY6NDM6NDBcclxuICogdzogaHR0cDovL2FuaW1pc3RhLm5ldCwgdDogQGNzc2FuaW1pc3RhXHJcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qKlxyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqIGFuaW1hdGlvbiBzd2luZy1pbi10b3AtYmNrXHJcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICovXG5ALXdlYmtpdC1rZXlmcmFtZXMgc3dpbmctaW4tdG9wLWJjayB7XG4gIDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlWCg3MGRlZyk7XG4gICAgdHJhbnNmb3JtOiByb3RhdGVYKDcwZGVnKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IHRvcDtcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICAxMDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlWCgwZGVnKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZVgoMGRlZyk7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBzd2luZy1pbi10b3AtYmNrIHtcbiAgMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGVYKDcwZGVnKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZVgoNzBkZWcpO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IHRvcDtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIDEwMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGVYKDBkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlWCgwZGVnKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IHRvcDtcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgc3dpbmctb3V0LXRvcC1iY2sge1xuICAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZVgoMGRlZyk7XG4gICAgdHJhbnNmb3JtOiByb3RhdGVYKDBkZWcpO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IHRvcDtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDEwMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGVYKC0xMDBkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlWCgtMTAwZGVnKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IHRvcDtcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIHN3aW5nLW91dC10b3AtYmNrIHtcbiAgMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGVYKDBkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlWCgwZGVnKTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IHRvcDtcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICAxMDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlWCgtMTAwZGVnKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZVgoLTEwMGRlZyk7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cblxuLnN3aW5nLWluLXRvcC1iY2sge1xuICBhbmltYXRpb246IHN3aW5nLWluLXRvcC1iY2sgMC40cyBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyLCAxLjI3NSkgYm90aDtcbiAgYW5pbWF0aW9uLWRlbGF5OiAuNnM7XG59XG5cbi5zd2luZy1vdXQtdG9wLWJjayB7XG4gIGFuaW1hdGlvbjogc3dpbmctb3V0LXRvcC1iY2sgMC4yNXMgY3ViaWMtYmV6aWVyKDAuNiwgLTAuMjgsIDAuNzM1LCAwLjA0NSkgYm90aDtcbn1cblxuLmhlcm8ge1xuICBoZWlnaHQ6IDc1dmg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmhlcm9fX2ltYWdlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG59XG5cbi5oZXJvX19pbWFnZSBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uaGVyb19fY29udGVudCB7XG4gIHdpZHRoOiA5MCU7XG4gIG1hcmdpbjogMmVtO1xuICB6LWluZGV4OiAxO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5oZXJvX19jb250ZW50IHtcbiAgICB3aWR0aDogNTAlO1xuICB9XG59XG5cbi5oZXJvX19jb250ZW50X190ZXh0IHtcbiAgdGV4dC1zaGFkb3c6IDJweCAycHggMTBweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmhlcm9fX2NvbnRlbnRfX3RleHQge1xuICAgIGZvbnQtc2l6ZTogM2VtO1xuICB9XG59XG5cbi5iYW5uZXJfc2t5IHtcbiAgaGVpZ2h0OiA3NXZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmJhbm5lcl9za3lfX2ltYWdlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uYmFubmVyX3NreV9fY29udGVudCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLmJhbm5lcl9za3lfX2NvbnRlbnRfX3RpdGxlcyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIHRleHQtc2hhZG93OiAycHggMnB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcbn1cblxuLmJhbm5lcl9za3lfX2NvbnRlbnRfX3RpdGxlcyBoMiwgLmJhbm5lcl9za3lfX2NvbnRlbnRfX3RpdGxlcyBoMyB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgbWFyZ2luOiAuNWVtO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uYmFubmVyX3NreV9fY29udGVudF9fdGl0bGVzIGgyIHtcbiAgZm9udC1zaXplOiAyLjVlbTtcbn1cblxuLmJhbm5lcl9za3lfX2NvbnRlbnRfX3RpdGxlcyBoMyB7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG59XG5cbi5zZWN0aW9uIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5cbi5zZWN0aW9uX190aXRsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5zZWN0aW9uX190aXRsZV9faGlnaGxpZ2h0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmbGV4LXdyYXA6IHdyYXA7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLnNlY3Rpb25fX3RpdGxlX19oaWdobGlnaHQge1xuICAgIGZsZXgtd3JhcDogbm93cmFwO1xuICB9XG59XG5cbi5zZWN0aW9uX190aXRsZV9faGlnaGxpZ2h0IGgyIHtcbiAgZm9udC1zaXplOiAyLjVlbTtcbiAgbWFyZ2luOiAwIDAgLjI1ZW07XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLnNlY3Rpb25fX3RpdGxlX19oaWdobGlnaHQgaDIge1xuICAgIG1hcmdpbjogMCAwIDFlbTtcbiAgfVxufVxuXG4uc2VjdGlvbl9fdGl0bGVfX2hpZ2hsaWdodDo6YmVmb3JlLCAuc2VjdGlvbl9fdGl0bGVfX2hpZ2hsaWdodDo6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDRweDtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICB3aWR0aDogNzAlO1xuICBtYXJnaW46IDAgLjVlbTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuc2VjdGlvbl9fdGl0bGVfX2hpZ2hsaWdodDo6YmVmb3JlLCAuc2VjdGlvbl9fdGl0bGVfX2hpZ2hsaWdodDo6YWZ0ZXIge1xuICAgIHdpZHRoOiA4ZW07XG4gIH1cbn1cblxuLnNlY3Rpb25fX3RpdGxlX19oaWdobGlnaHQ6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAjMzVjZmQ0LCAjMTRhMWU2KTtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuc2VjdGlvbl9fdGl0bGVfX2hpZ2hsaWdodDpiZWZvcmUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG5cbi5zZWN0aW9uX190aXRsZV9faGlnaGxpZ2h0OjphZnRlciB7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgtNDVkZWcsICMzNWNmZDQsICMxNGExZTYpO1xufVxuXG4uc2VjdGlvbl9fdGl0bGVfX2hpZ2hsaWdodCBwIHtcbiAgd2lkdGg6IDUwJTtcbn1cblxuLnNlY3Rpb25fX3RpdGxlX19oaWdobGlnaHQtLW9yYW5nZTpiZWZvcmUge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICNmOWM5MGQsICNmOTZlMTApO1xufVxuXG4uc2VjdGlvbl9fdGl0bGVfX2hpZ2hsaWdodC0tb3JhbmdlOjphZnRlciB7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgtNDVkZWcsICNmOWM5MGQsICNmOTZlMTApO1xufVxuXG4uc2VjdGlvbl9fdGl0bGVfX2hpZ2hsaWdodC0tZ3JlZW46YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAjNjJhYjAzLCAjMDA0ZDAwKTtcbn1cblxuLnNlY3Rpb25fX3RpdGxlX19oaWdobGlnaHQtLWdyZWVuOjphZnRlciB7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgtNDVkZWcsICM2MmFiMDMsICMwMDRkMDApO1xufVxuXG4uc2VjdGlvbl9fdGl0bGVfX2hpZ2hsaWdodC0tbm8tZGVjb3JhdG9yOjpiZWZvcmUsIC5zZWN0aW9uX190aXRsZV9faGlnaGxpZ2h0LS1uby1kZWNvcmF0b3I6OmFmdGVyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnNlY3Rpb25fX3RpdGxlX19kZXNjcmlwdGlvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAxZW07XG4gIHdpZHRoOiA5NSU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuc2VjdGlvbl9fdGl0bGVfX2Rlc2NyaXB0aW9uIHtcbiAgICB0b3A6IC0yZW07XG4gICAgd2lkdGg6IDUwJTtcbiAgfVxufVxuXG4uZGl2aWRlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDNlbSAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLmRpdmlkZXI6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiA4MCU7XG4gIGhlaWdodDogMnB4O1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgIzM1Y2ZkNCwgIzE0YTFlNik7XG59XG5cbi5kaXZpZGVyLS1vcmFuZ2U6OmJlZm9yZSB7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgI2Y5YzkwZCwgI2Y5NmUxMCk7XG59XG5cbi5kaXZpZGVyLS13aGl0ZTo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG59XG5cbi50b3BfZGVzdGluYXRpb25zIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLnRvcF9kZXN0aW5hdGlvbnNfX3BsYWNlcyB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAudG9wX2Rlc3RpbmF0aW9uc19fcGxhY2VzIHtcbiAgICB3aWR0aDogOTAlO1xuICB9XG59XG5cbi50b3BfZGVzdGluYXRpb25zX19wbGFjZXNfX3BsYWNlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMS41ZW0gMDtcbiAgbWF4LWhlaWdodDogNzV2aDtcbiAgbWluLWhlaWdodDogNTB2aDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC50b3BfZGVzdGluYXRpb25zX19wbGFjZXNfX3BsYWNlIHtcbiAgICBtYXJnaW46IDNlbSAwO1xuICAgIHdpZHRoOiA0OCU7XG4gICAgbWluLWhlaWdodDogYXV0bztcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTYwMHB4KSB7XG4gIC50b3BfZGVzdGluYXRpb25zX19wbGFjZXNfX3BsYWNlIHtcbiAgICBtYXJnaW46IDNlbSAwO1xuICAgIHdpZHRoOiAyMyU7XG4gIH1cbn1cblxuLnRvcF9kZXN0aW5hdGlvbnNfX3BsYWNlc19fcGxhY2U6aG92ZXIgaW1nIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcbn1cblxuLnRvcF9kZXN0aW5hdGlvbnNfX3BsYWNlc19fcGxhY2U6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICcnO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDA7XG4gIGxlZnQ6IC0xMHB4O1xuICB0b3A6IC0xMHB4O1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICMzNWNmZDQsICMxNGExZTYgMjAlLCB0cmFuc3BhcmVudCk7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLnRvcF9kZXN0aW5hdGlvbnNfX3BsYWNlc19fcGxhY2U6OmJlZm9yZSB7XG4gICAgbGVmdDogLTE1cHg7XG4gICAgdG9wOiAtMTVweDtcbiAgfVxufVxuXG4udG9wX2Rlc3RpbmF0aW9uc19fcGxhY2VzX19wbGFjZS0tb3JhbmdlOjpiZWZvcmUge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICNmOWM5MGQsICNmOTZlMTAgMjAlLCB0cmFuc3BhcmVudCk7XG59XG5cbi50b3BfZGVzdGluYXRpb25zX19wbGFjZXNfX3BsYWNlLS1ncmVlbjo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAjNjJhYjAzLCAjMDA0ZDAwIDIwJSwgdHJhbnNwYXJlbnQpO1xufVxuXG4udG9wX2Rlc3RpbmF0aW9uc19fcGxhY2VzX19wbGFjZV9faW1hZ2Uge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDE2MDBweCkge1xuICAudG9wX2Rlc3RpbmF0aW9uc19fcGxhY2VzX19wbGFjZV9faW1hZ2Uge1xuICAgIG1pbi1oZWlnaHQ6IDYwdmg7XG4gIH1cbn1cblxuLnRvcF9kZXN0aW5hdGlvbnNfX3BsYWNlc19fcGxhY2VfX2ltYWdlID4gZGl2IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnRvcF9kZXN0aW5hdGlvbnNfX3BsYWNlc19fcGxhY2VfX2ltYWdlIGltZyB7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuNXMgZWFzZS1pbi1vdXQ7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDE2MDBweCkge1xuICAudG9wX2Rlc3RpbmF0aW9uc19fcGxhY2VzX19wbGFjZV9faW1hZ2UgaW1nIHtcbiAgICB3aWR0aDogYXV0bztcbiAgfVxufVxuXG4udG9wX2Rlc3RpbmF0aW9uc19fcGxhY2VzX19wbGFjZV9fdGV4dCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogOTAlO1xuICBtYXJnaW46IDAgNSU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgei1pbmRleDogMjtcbiAgdGV4dC1zaGFkb3c6IDNweCAzcHggMTBweCByZ2JhKDAsIDAsIDAsIDAuNSk7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLnRvcF9kZXN0aW5hdGlvbnNfX3BsYWNlc19fcGxhY2VfX3RleHQge1xuICAgIGJvdHRvbTogMWVtO1xuICB9XG59XG5cbi50b3BfZGVzdGluYXRpb25zX19wbGFjZXNfX3BsYWNlX190ZXh0IHNwYW4ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LWZhbWlseTogXCJCYWxvbyBCaGFpbmFcIiwgY3Vyc2l2ZTtcbiAgZm9udC1zaXplOiAyZW07XG59XG5cbi50b3BfZGVzdGluYXRpb25zX19wbGFjZXNfX3BsYWNlX190ZXh0IHAge1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uYWN0aXZpdHkge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAuNWVtIC41ZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuYWN0aXZpdHkge1xuICAgIHdpZHRoOiAzMSU7XG4gIH1cbn1cblxuLmFjdGl2aXR5OmhvdmVyIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uYWN0aXZpdHk6aG92ZXIgaW1nIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xufVxuXG4uYWN0aXZpdHlfX2ltYWdlIHtcbiAgaGVpZ2h0OiA0MHZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBib3gtc2hhZG93OiAycHggMnB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmFjdGl2aXR5X19pbWFnZSBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjNzIGVhc2UtaW4tb3V0O1xufVxuXG4uYWN0aXZpdHlfX2NvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogLS43NWVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgYm94LXNoYWRvdzogMnB4IDJweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgcGFkZGluZzogLjVlbTtcbiAgd2lkdGg6IDk1JTtcbiAgbWFyZ2luOiBhdXRvO1xuICBib3JkZXItcmFkaXVzOiAycHg7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmFjdGl2aXR5X19jb250ZW50IHtcbiAgICBwYWRkaW5nOiAxZW07XG4gICAgd2lkdGg6IDkwJTtcbiAgfVxufVxuXG4uYWN0aXZpdHlfX2NvbnRlbnRfX3ByaWNlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICMzNWNmZDQsICMxNGExZTYpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSg1MCUsIC01MCUpO1xuICB0b3A6IC0uNWVtO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAuNWVtO1xuICB3aWR0aDogMy43NWVtO1xuICBoZWlnaHQ6IDMuNzVlbTtcbn1cblxuLmFjdGl2aXR5X19jb250ZW50X19wcmljZSBzcGFuIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW46IGF1dG87XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAuOTVlbTtcbn1cblxuLmFjdGl2aXR5X19jb250ZW50X19hY3Rpb25zIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogYXV0bztcbiAgei1pbmRleDogMTtcbn1cblxuLmFjdGl2aXR5X19jb250ZW50X19hY3Rpb25zX19hZGQge1xuICB3aWR0aDogMmVtO1xuICBoZWlnaHQ6IDJlbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uYWN0aXZpdHlfX2NvbnRlbnRfX2FjdGlvbnNfX2FkZDo6YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjb250ZW50OiAnJztcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xufVxuXG4uYWN0aXZpdHlfX2NvbnRlbnRfX3RpdGxlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogODAlO1xuICBtYXJnaW46IGF1dG87XG59XG5cbi5hY3Rpdml0eV9fY29udGVudF9fZGVzY3JpcHRpb24ge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5hY3Rpdml0eV9fY29udGVudF9fZGVzY3JpcHRpb24gcCB7XG4gIG1hcmdpbjogLjI1ZW07XG59XG5cbkBrZXlmcmFtZXMgbG9hZGluZ19kb3RzX2FuaW1hdGlvbiB7XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBsb2FkaW5nX2RvdHNfYW5pbWF0aW9uX193YWl0IHtcbiAgNTAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cblxuLmxvYWRpbmdfZG90cyB7XG4gIGhlaWdodDogMmVtO1xuICBtYXJnaW46IC41ZW07XG4gIHdpZHRoOiBhdXRvO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcyBlYXNlLWluLW91dDtcbn1cblxuLmxvYWRpbmdfZG90cyAqIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLmxvYWRpbmdfZG90cyAuZG90IHtcbiAgd2lkdGg6IDEuNWVtO1xuICBoZWlnaHQ6IDEuNWVtO1xuICBtYXJnaW46IDAgY2FsYygxLjVlbSAvIDIpO1xuICBib3JkZXI6IGNhbGMoMS41ZW0gLyA1KSBzb2xpZCAjMzVjZmQ0O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGZsb2F0OiBsZWZ0O1xuICB0cmFuc2Zvcm06IHNjYWxlKDApO1xuICBhbmltYXRpb246IGxvYWRpbmdfZG90c19hbmltYXRpb24gMXMgZWFzZSBpbmZpbml0ZSAwcztcbn1cblxuLmxvYWRpbmdfZG90cyAuZG90Om50aC1jaGlsZCgxKSB7XG4gIGFuaW1hdGlvbi1kZWxheTogY2FsYygzMDBtcyAqIDEpO1xufVxuXG4ubG9hZGluZ19kb3RzIC5kb3Q6bnRoLWNoaWxkKDIpIHtcbiAgYW5pbWF0aW9uLWRlbGF5OiBjYWxjKDMwMG1zICogMik7XG59XG5cbi5sb2FkaW5nX2RvdHMgLmRvdDpudGgtY2hpbGQoMykge1xuICBhbmltYXRpb24tZGVsYXk6IGNhbGMoMzAwbXMgKiAzKTtcbn1cblxuLmxvYWRpbmdfZG90cy0tdmlzaWJsZSB7XG4gIG9wYWNpdHk6IDEgIWltcG9ydGFudDtcbn1cblxuQGtleWZyYW1lcyBzaG93QmFyWCB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNzUlKTtcbiAgfVxuICA0MCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XG4gIH1cbiAgNjAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg3NSUpO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgc2hvd0Jhclkge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDc1JSk7XG4gIH1cbiAgNDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCUpO1xuICB9XG4gIDYwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDAlKTtcbiAgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNzUlKTtcbiAgfVxufVxuXG4uY2FydF9iYXIge1xuICBib3R0b206IDA7XG4gIHdpZHRoOiBjYWxjKCAxMDB2dyAtIDRweCk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg2MCUpO1xuICBoZWlnaHQ6IDZlbTtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBtYXJnaW46IDAgMnB4O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDI7XG4gIHBhZGRpbmc6IC4yNWVtO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsIHJnYmEoNTMsIDIwNywgMjEyLCAwLjk1KSwgcmdiYSgyMCwgMTYxLCAyMzAsIDAuOTUpKTtcbiAgY29sb3I6IHdoaXRlO1xuICBib3JkZXI6IDJweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSk7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4zcyBlYXNlLWluLW91dDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuY2FydF9iYXIge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg3NSUpO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICBib3R0b206IDJlbTtcbiAgICByaWdodDogMDtcbiAgICB3aWR0aDogYXV0bztcbiAgfVxufVxuXG4uY2FydF9iYXI6aG92ZXIge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmNhcnRfYmFyOmhvdmVyIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gIH1cbn1cblxuLmNhcnRfYmFyLS12aXNpYmxlIHtcbiAgYW5pbWF0aW9uOiBzaG93QmFyWSAzLjVzIGVhc2UtaW4tb3V0IDE7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmNhcnRfYmFyLS12aXNpYmxlIHtcbiAgICBhbmltYXRpb246IHNob3dCYXJYIDMuNXMgZWFzZS1pbi1vdXQgMTtcbiAgfVxufVxuXG4uY2FydF9iYXJfX3RpdGxlIHtcbiAgbWFyZ2luOiAxZW0gLjVlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgd2hpdGU7XG4gIHdpZHRoOiAzMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBhZGRpbmctdG9wOiAxZW07XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmNhcnRfYmFyX190aXRsZSB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcbiAgICBwYWRkaW5nLXRvcDogMDtcbiAgfVxufVxuXG4uY2FydF9iYXJfX3RpdGxlX19pY29uIHtcbiAgd2lkdGg6IDJlbTtcbiAgaGVpZ2h0OiAyZW07XG59XG5cbi5jYXJ0X2Jhcl9fdGl0bGUgaDQge1xuICBtYXJnaW4tdG9wOiAuNWVtO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uY2FydF9iYXJfX2NvbnRlbnQge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMCAxZW07XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmNhcnRfYmFyX19jb250ZW50IHtcbiAgICBwYWRkaW5nOiAxZW07XG4gIH1cbn1cblxuLmNhcnRfYmFyX19jb250ZW50X190ZXh0IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgY29sb3I6IHdoaXRlO1xuICBtYXJnaW46IDA7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmNhcnRfYmFyX19jb250ZW50X190ZXh0IHtcbiAgICBtYXJnaW46IC41ZW0gMDtcbiAgfVxufVxuXG4uY2FydF9iYXJfX2NvbnRlbnRfX3RleHQgcCB7XG4gIG1hcmdpbjogMDtcbn1cblxuLmNhcnRfYmFyX19jb250ZW50X19idXR0b24ge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG59XG5cbi5jYXJ0X2Jhcl9fY29udGVudF9fYnV0dG9uIGEge1xuICBtYXJnaW46IDAgLjI1ZW07XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmNhcnRfYmFyIFtkYXRhLXNob3c9J2VtcHR5J10ge1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAwO1xuICB3aWR0aDogMDtcbiAgei1pbmRleDogLTE7XG59XG5cbi5jYXJ0X2Jhci0taW5pdGlhbCBbZGF0YS1zaG93PSduby1lbXB0eSddIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogMDtcbiAgd2lkdGg6IDA7XG4gIHotaW5kZXg6IC0xO1xufVxuXG4uY2FydF9iYXItLWluaXRpYWwgW2RhdGEtc2hvdz0nZW1wdHknXSB7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG4gIGhlaWdodDogYXV0bztcbiAgd2lkdGg6IGF1dG87XG4gIHotaW5kZXg6IGF1dG87XG59XG5cbi5mb290ZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgIzM1Y2ZkNCwgIzE0YTFlNik7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuXG4uZm9vdGVyX19iYW5uZXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA3NXZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uZm9vdGVyX19iYW5uZXJfX2ltYWdlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uZm9vdGVyX19iYW5uZXJfX2NvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5mb290ZXJfX2Jhbm5lcl9fY29udGVudF9fdGl0bGVzIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1zaGFkb3c6IDJweCAycHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xufVxuXG4uZm9vdGVyX19iYW5uZXJfX2NvbnRlbnRfX3RpdGxlcyBoMiwgLmZvb3Rlcl9fYmFubmVyX19jb250ZW50X190aXRsZXMgaDMge1xuICBjb2xvcjogd2hpdGU7XG4gIG1hcmdpbjogLjVlbTtcbiAgcGFkZGluZzogMDtcbn1cblxuLmZvb3Rlcl9fYmFubmVyX19jb250ZW50X190aXRsZXMgaDIge1xuICBmb250LXNpemU6IDIuNWVtO1xufVxuXG4uZm9vdGVyX19iYW5uZXJfX2NvbnRlbnRfX3RpdGxlcyBoMyB7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG59XG5cbi5mb290ZXJfX2NvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDE7XG4gIHBhZGRpbmc6IC41ZW07XG4gIHdpZHRoOiA5MCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5mb290ZXJfX2NvbnRlbnQge1xuICAgIHBhZGRpbmc6IDJlbSAyZW0gLjVlbSAyZW07XG4gIH1cbn1cblxuLmZvb3Rlcl9fY29udGVudF9fbGlua3Mge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5mb290ZXJfX2NvbnRlbnRfX2xpbmtzX19jb2x1bW4ge1xuICB3aWR0aDogNTAlO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5mb290ZXJfX2NvbnRlbnRfX2xpbmtzX19jb2x1bW4ge1xuICAgIHdpZHRoOiAyMyU7XG4gIH1cbn1cblxuLmZvb3Rlcl9fY29udGVudF9fbGlua3NfX2NvbHVtbjpudGgtY2hpbGQoMSkge1xuICBvcmRlcjogMTtcbn1cblxuLmZvb3Rlcl9fY29udGVudF9fbGlua3NfX2NvbHVtbjpudGgtY2hpbGQoMikge1xuICBvcmRlcjogMjtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuZm9vdGVyX19jb250ZW50X19saW5rc19fY29sdW1uOm50aC1jaGlsZCgyKSB7XG4gICAgb3JkZXI6IDM7XG4gIH1cbn1cblxuLmZvb3Rlcl9fY29udGVudF9fbGlua3NfX2NvbHVtbjpudGgtY2hpbGQoMykge1xuICBvcmRlcjogMztcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuZm9vdGVyX19jb250ZW50X19saW5rc19fY29sdW1uOm50aC1jaGlsZCgzKSB7XG4gICAgb3JkZXI6IDI7XG4gIH1cbn1cblxuLmZvb3Rlcl9fY29udGVudF9fbGlua3NfX2NvbHVtbjpudGgtY2hpbGQoNCkge1xuICBvcmRlcjogNDtcbn1cblxuLmZvb3Rlcl9fY29udGVudF9fbGlua3NfX2NvbHVtbl9fdGl0bGUgYSB7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmZvb3Rlcl9fY29udGVudF9fbGlua3NfX2NvbHVtbiB1bCB7XG4gIG1hcmdpbi1sZWZ0OiAuMjVlbTtcbn1cblxuLmZvb3Rlcl9fY29udGVudF9fbGlua3NfX2NvbHVtbiB1bCBsaSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogLjI1ZW0gMDtcbn1cblxuLmZvb3Rlcl9fY29udGVudF9fbGlua3NfX2NvbHVtbiB1bCBsaSBhIHtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uZm9vdGVyX19jb250ZW50X19pbmZvcyB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGZsZXgtd3JhcDogd3JhcDtcbn1cblxuLmZvb3Rlcl9fY29udGVudF9faW5mb3NfX2NvbHVtbiB7XG4gIHdpZHRoOiA0OCU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmZvb3Rlcl9fY29udGVudF9faW5mb3NfX2NvbHVtbiB7XG4gICAgd2lkdGg6IDI1JTtcbiAgfVxufVxuXG4uZm9vdGVyX19jb250ZW50X19pbmZvc19fY29sdW1uOmxhc3QtY2hpbGQge1xuICB3aWR0aDogMTAwJTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuZm9vdGVyX19jb250ZW50X19pbmZvc19fY29sdW1uOmxhc3QtY2hpbGQge1xuICAgIHdpZHRoOiAyNSU7XG4gIH1cbn1cblxuLmZvb3Rlcl9fY29udGVudF9fYWdiIHtcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IDEwMCU7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uZm9vdGVyX19jb250ZW50X19hZ2IgYSB7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmZvb3Rlcl9fY29udGVudF9fY29weXJpZ2h0IHtcbiAgd2lkdGg6IGF1dG87XG59XG5cbi5mb290ZXJfX2NvbnRlbnRfX21hZGUtYnkge1xuICB3aWR0aDogYXV0bztcbn1cblxuLmZvb3Rlcl9fY29udGVudF9fbWFkZS1ieSBhIHtcbiAgY29sb3I6IHdoaXRlO1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5mb290ZXJfX2NvbnRlbnRfX3NvY2lhbC1uZXR3b3JrcyB7XG4gIHdpZHRoOiBhdXRvO1xuICBtYXJnaW46IGF1dG8gMmVtO1xufVxuXG4uZm9vdGVyX19jb250ZW50X19zb2NpYWwtbmV0d29ya3MgdWwge1xuICBtYXJnaW46IDA7XG59XG5cbi5mb290ZXJfX2NvbnRlbnRfX3NvY2lhbC1uZXR3b3JrcyB1bCBsaSB7XG4gIG1hcmdpbjogMCAuMjVlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG4uZm9vdGVyX19jb250ZW50X19zb2NpYWwtbmV0d29ya3MgdWwgbGkgYSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmZvb3Rlcl9fY29udGVudF9fc29jaWFsLW5ldHdvcmtzIHVsIGxpIGEgc3ZnIHtcbiAgd2lkdGg6IDJlbTtcbiAgaGVpZ2h0OiAyZW07XG59XG5cbi5mb290ZXJfX2JhY2tncm91bmQtaW1hZ2Uge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgei1pbmRleDogMDtcbn1cblxuLnRyYXZlbC1vcHRpb25zIHtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4udHJhdmVsLW9wdGlvbnNfX2dyaWQge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcImltZzEgaW1nNlwiICBcImltZzIgaW1nNlwiICBcImltZzkgaW1nOVwiICBcImltZzEwIGltZzEwXCIgIFwiaW1nMyBpbWczXCIgIFwiaW1nNCBpbWcxMVwiICBcImltZzUgaW1nNyBcIiAgXCJpbWc1IGltZzhcIiAgXCJpbWcxMiBpbWcxNFwiICBcImltZzEzIGltZzE0XCI7XG4gIGdyaWQtdGVtcGxhdGUtcm93czogMzN2aCAzM3ZoIDMzdmggMzN2aCAzM3ZoIDMzdmggMzN2aCAzM3ZoIDMzdmggMzN2aDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xuICB3aWR0aDogMTAwJTtcbiAgZ3JpZC1nYXA6IC4xNWVtO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC50cmF2ZWwtb3B0aW9uc19fZ3JpZCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXCJpbWcxIGltZzYgaW1nOSBpbWc5XCIgIFwiaW1nMiBpbWc2IGltZzEwIGltZzEwXCIgIFwiaW1nMyBpbWczIGltZzMgaW1nM1wiICBcImltZzQgaW1nNCBpbWcxMSBpbWcxMVwiICBcImltZzUgaW1nNyBpbWcxMiBpbWcxNFwiICBcImltZzUgaW1nOCBpbWcxMyBpbWcxNFwiO1xuICAgIGdyaWQtdGVtcGxhdGUtcm93czogNDB2aCA0MHZoIDQwdmggNDB2aDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyIDFmcjtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuXG4udHJhdmVsLW9wdGlvbnNfX2dyaWRfX2l0ZW0ge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4udHJhdmVsLW9wdGlvbnNfX2dyaWRfX2l0ZW0gaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnRyYXZlbC1vcHRpb25zX19ncmlkX292ZXJsYXkge1xuICBkaXNwbGF5OiBncmlkO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXCJzZWN0aW9uMSBzZWN0aW9uMVwiICBcInNlY3Rpb24xIHNlY3Rpb24xXCIgIFwic2VjdGlvbjIgc2VjdGlvbjJcIiAgXCJzZWN0aW9uMiBzZWN0aW9uMlwiICBcInNlY3Rpb24zIHNlY3Rpb24zXCIgIFwic2VjdGlvbjMgc2VjdGlvbjNcIiAgXCJzZWN0aW9uNCBzZWN0aW9uNFwiICBcInNlY3Rpb240IHNlY3Rpb240XCIgIFwic2VjdGlvbjUgc2VjdGlvbjVcIiAgXCJzZWN0aW9uNSBzZWN0aW9uNVwiO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IDMzdmggMzN2aCAzM3ZoIDMzdmggMzN2aCAzM3ZoIDMzdmggMzN2aCAzM3ZoIDMzdmg7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcbiAgZ3JpZC1nYXA6IC4xNWVtO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC50cmF2ZWwtb3B0aW9uc19fZ3JpZF9vdmVybGF5IHtcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcInNlY3Rpb24xIHNlY3Rpb24xIHNlY3Rpb24yIHNlY3Rpb24yXCIgIFwic2VjdGlvbjEgc2VjdGlvbjEgc2VjdGlvbjIgc2VjdGlvbjJcIiAgXCJzZWN0aW9uMyBzZWN0aW9uMyBzZWN0aW9uMyBzZWN0aW9uM1wiICBcInNlY3Rpb24zIHNlY3Rpb24zIHNlY3Rpb24zIHNlY3Rpb24zXCIgIFwic2VjdGlvbjQgc2VjdGlvbjQgc2VjdGlvbjUgc2VjdGlvbjVcIiAgXCJzZWN0aW9uNCBzZWN0aW9uNCBzZWN0aW9uNSBzZWN0aW9uNVwiO1xuICAgIGdyaWQtdGVtcGxhdGUtcm93czogNDB2aCA0MHZoIDQwdmggNDB2aDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyIDFmcjtcbiAgfVxufVxuXG4udHJhdmVsLW9wdGlvbnNfX2dyaWRfb3ZlcmxheSBhIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtc2l6ZTogM2VtO1xuICB0ZXh0LXNoYWRvdzogMnB4IDJweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yNSk7XG59XG5cbi50cmF2ZWwtb3B0aW9uc19fZ3JpZF9vdmVybGF5IGE6aG92ZXIgPiBkaXYge1xuICBvcGFjaXR5OiAxO1xufVxuXG4udHJhdmVsLW9wdGlvbnNfX2dyaWRfb3ZlcmxheSBhIGRpdiB7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIG9wYWNpdHk6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNTMsIDIwNywgMjEyLCAwLjUpO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcyBlYXNlLWluLW91dDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4iLCIqOjpzZWxlY3Rpb257XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRsaWdodC1ibHVlLCAuMyk7XHJcbn1cclxuXHJcbmJvZHl7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbnN2Zy5maWx0ZXJ7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB6LWluZGV4OiAtMTtcclxuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcclxufVxyXG4iLCIuaWNvbiB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIC4zcyBlYXNlLWluLW91dDtcclxuXHJcbn1cclxuXHJcbi5oZWFydHtcclxuXHJcbiAgICAmICNoZWFydF9ib3JkZXJ7XHJcbiAgICAgICAgZmlsbDogd2hpdGU7XHJcbiAgICB9XHJcblxyXG4gICAgJiAjaGVhcnRfaW5zaWRle1xyXG4gICAgICAgIGZpbGw6IHRyYW5zcGFyZW50O1xyXG4gICAgfVxyXG5cclxuICAgICYtLWZpbGx7XHJcblxyXG4gICAgICAgICYtZ3JlZW4ge1xyXG4gICAgICAgICAgICAmICNoZWFydF9pbnNpZGUge1xyXG4gICAgICAgICAgICAgICAgZmlsbDogJGRhcmstZ3JlZW47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYtd2hpdGV7XHJcbiAgICAgICAgICAgICYgI2hlYXJ0X2luc2lkZSB7XHJcbiAgICAgICAgICAgICAgICBmaWxsOiB3aGl0ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLS1pbnZlcnNle1xyXG4gICAgICAgICYgI2hlYXJ0X2JvcmRlcntcclxuICAgICAgICAgICAgZmlsbDogJGxpZ2h0LWdyZWVuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi5oZWFydC0tZmlsbC13aGl0ZXtcclxuXHJcbiAgICAgICAgICAgICYgI2hlYXJ0X2luc2lkZSB7XHJcbiAgICAgICAgICAgICAgICBmaWxsOiAkbGlnaHQtZ3JlZW47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5hcnJvd3tcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIFxyXG4gICAgJi0tcm90YXRle1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XHJcbiAgICB9XHJcbn0iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuVGl0bGU6IFJhZGlvIFN3aXRjaFxyXG5EZXNjcjogQ3VzdG9tIHJhZGlvIHRvZ2dsZVxyXG5cclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi8gXHJcblxyXG46cm9vdCB7XHJcbiAgLy8gc3R5bGVcclxuICAtLXJhZGlvLXN3aXRjaC13aWR0aDogMTg2cHg7XHJcbiAgLS1yYWRpby1zd2l0Y2gtaGVpZ2h0OiA0NnB4O1xyXG4gIC0tcmFkaW8tc3dpdGNoLXBhZGRpbmc6IDNweDtcclxuICAtLXJhZGlvLXN3aXRjaC1yYWRpdXM6IDUwZW07XHJcblxyXG4gIC8vIGFuaW1hdGlvblxyXG4gIC0tcmFkaW8tc3dpdGNoLWFuaW1hdGlvbi1kdXJhdGlvbjogMC4zcztcclxufVxyXG5cclxuLnJhZGlvLXN3aXRjaCB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgLy8gZmxleGJveCBmYWxsYmFja1xyXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gIHBhZGRpbmc6IHZhcigtLXJhZGlvLXN3aXRjaC1wYWRkaW5nKTtcclxuICBib3JkZXItcmFkaXVzOiBjYWxjKHZhcigtLXJhZGlvLXN3aXRjaC1yYWRpdXMpICogMS40KTtcclxuICBib3JkZXI6IDFweCBzb2xpZCAkY29sb3ItZ3JheS1saWdodDtcclxuXHJcbiAgJjpmb2N1cy13aXRoaW4sICY6YWN0aXZlIHtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAwIDFweCAkY29sb3ItZ3JheS1saWdodDsgLy8gZm9jdXMgZWZmZWN0XHJcbiAgfVxyXG59XHJcblxyXG4ucmFkaW8tc3dpdGNoX19pdGVtIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvLyBmbGV4Ym94IGZhbGxiYWNrXHJcbiAgaGVpZ2h0OiBjYWxjKHZhcigtLXJhZGlvLXN3aXRjaC1oZWlnaHQpIC0gMip2YXIoLS1yYWRpby1zd2l0Y2gtcGFkZGluZykpO1xyXG4gIHdpZHRoOiBjYWxjKHZhcigtLXJhZGlvLXN3aXRjaC13aWR0aCkqMC41IC0gIHZhcigtLXJhZGlvLXN3aXRjaC1wYWRkaW5nKSk7XHJcbn1cclxuXHJcbi5yYWRpby1zd2l0Y2hfX2xhYmVsIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgei1pbmRleDogMjtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBib3JkZXItcmFkaXVzOiB2YXIoLS1yYWRpby1zd2l0Y2gtcmFkaXVzKTtcclxuICBsaW5lLWhlaWdodDogY2FsYyh2YXIoLS1yYWRpby1zd2l0Y2gtaGVpZ2h0KSAtIDIqdmFyKC0tcmFkaW8tc3dpdGNoLXBhZGRpbmcpKTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7IFxyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBmb250LXNpemU6IHZhcigtLXRleHQtc20pO1xyXG4gIHVzZXItc2VsZWN0OiBub25lO1xyXG4gIHRyYW5zaXRpb246IGFsbCB2YXIoLS1yYWRpby1zd2l0Y2gtYW5pbWF0aW9uLWR1cmF0aW9uKTtcclxuXHJcbiAgLnJhZGlvLXN3aXRjaF9faW5wdXQ6Y2hlY2tlZCB+ICYge1xyXG4gICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICB9XHJcblxyXG4gIC5yYWRpby1zd2l0Y2hfX2lucHV0OmZvY3VzIH4gJiB7IC8vIGZvY3VzIGVmZmVjdCBpbiBicm93c2VycyBub3Qgc3VwcG9ydGluZyA6Zm9jdXMtd2l0aGluXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKCRjb2xvci1ibHVlLWRhcmssIDAuNik7XHJcbiAgfVxyXG5cclxuICA6bm90KCopOmZvY3VzLXdpdGhpbiwgLy8gdHJpY2sgdG8gZGV0ZWN0IDpmb2N1cy13aXRoaW4gc3VwcG9ydCAtPiBodHRwczovL2Nzcy10cmlja3MuY29tL3VzaW5nLWZlYXR1cmUtZGV0ZWN0aW9uLWNvbmRpdGlvbmFscy1hbmQtZ3JvdXBzLXdpdGgtc2VsZWN0b3JzL1xyXG4gIC5yYWRpby1zd2l0Y2hfX2lucHV0OmZvY3VzIH4gJiB7IC8vIHJlc2V0IGZvY3VzIHN0eWxlIGZvciBicm93c2VycyBzdXBwb3J0aW5nIDpmb2N1cy13aXRoaW5cclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gIH1cclxufVxyXG5cclxuLnJhZGlvLXN3aXRjaF9fbWFya2VyIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgei1pbmRleDogMTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogLTEwMCU7XHJcbiAgYm9yZGVyLXJhZGl1czogdmFyKC0tcmFkaW8tc3dpdGNoLXJhZGl1cyk7XHJcblxyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgJGxpZ2h0LWJsdWUsICRkYXJrLWJsdWUpO1xyXG5cclxuICBoZWlnaHQ6IGNhbGModmFyKC0tcmFkaW8tc3dpdGNoLWhlaWdodCkgLSAyKnZhcigtLXJhZGlvLXN3aXRjaC1wYWRkaW5nKSk7XHJcbiAgd2lkdGg6IGNhbGModmFyKC0tcmFkaW8tc3dpdGNoLXdpZHRoKSowLjUgLSAgdmFyKC0tcmFkaW8tc3dpdGNoLXBhZGRpbmcpKTtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gdmFyKC0tcmFkaW8tc3dpdGNoLWFuaW1hdGlvbi1kdXJhdGlvbik7XHJcblxyXG4gIC5yYWRpby1zd2l0Y2hfX2lucHV0OmNoZWNrZWQgfiAmIHtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcclxuICB9XHJcbn1cclxuIiwiLmNvb2tpZXtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICBib3R0b206IDFlbTtcclxuICAgIGxlZnQ6IDJlbTtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcclxuICAgIGJveC1zaGFkb3c6IDJweCAycHggOHB4IHJnYmEoYmxhY2ssIC4yKTtcclxuICAgIHotaW5kZXg6IDQ7XHJcblxyXG4gICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICBib3R0b206IDJlbTtcclxuICAgICAgICB3aWR0aDogMzAlO1xyXG4gICAgfVxyXG5cclxuICAgIEBrZXlmcmFtZXMgY29sbGFwc2Uge1xyXG4gICAgICAgIDAle1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogdmlzaWJsZTtcclxuICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgICAgICB6LWluZGV4OiA0O1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICAxMDAle1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogdmlzaWJsZTtcclxuICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgICAgICB6LWluZGV4OiA0O1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAa2V5ZnJhbWVzIGNvbGxhcHNlTGFyZ2Uge1xyXG4gICAgICAgIDAle1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogdmlzaWJsZTtcclxuICAgICAgICAgICAgd2lkdGg6IDMwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgICAgICB6LWluZGV4OiA0O1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICAxMDAle1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogdmlzaWJsZTtcclxuICAgICAgICAgICAgd2lkdGg6IDMwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgICAgICB6LWluZGV4OiA0O1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLS1uby12aXNpYmxle1xyXG4gICAgICAgIGFuaW1hdGlvbjogY29sbGFwc2UgLjNzIGVhc2UtaW4tb3V0IDE7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICB3aWR0aDogMDtcclxuICAgICAgICBoZWlnaHQ6IDA7XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgIGFuaW1hdGlvbjogY29sbGFwc2VMYXJnZSAuM3MgZWFzZS1pbi1vdXQgMTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9faW1ne1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IC0yZW07XHJcbiAgICAgICAgbGVmdDogLTJlbTtcclxuICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICAgICAgd2lkdGg6IDRlbTtcclxuICAgICAgICBoZWlnaHQ6IDRlbTtcclxuICAgIH1cclxuXHJcbiAgICAmX19tZXNzYWdle1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIG1hcmdpbjogMWVtIDJlbSAuNWVtO1xyXG5cclxuICAgICAgICAmIGgxLCAmIHB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC4yNWVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19idG57XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogLjVlbTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgfVxyXG59XHJcblxyXG4uY29va2llLW92ZXJsYXl7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB6LWluZGV4OiAzO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYShibGFjaywgLjc1KTtcclxuXHJcbiAgICBAa2V5ZnJhbWVzIGhpZGRlbiB7XHJcbiAgICAgICAgMCV7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoYmxhY2ssIC43NSk7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IDM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIDEwMCV7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoYmxhY2ssIDApO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAzO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLS1uby12aXNpYmxle1xyXG4gICAgICAgIGFuaW1hdGlvbjogaGlkZGVuIC4zcyBlYXNlLWluLW91dCAxIDtcclxuICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgICB3aWR0aDogMDtcclxuICAgICAgICBoZWlnaHQ6IDA7XHJcbiAgICB9XHJcbn0iLCJAbWl4aW4gYXRYTGFyZ2Uge1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDE2MDBweCkge1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gYXRMYXJnZSB7XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiBhdE1lZGl1bSB7XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogODAwcHgpIHtcclxuICAgICAgICBAY29udGVudDtcclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIGF0U21hbGwge1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDUzMHB4KSB7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn0iLCJcclxuLmJsdXItdXAge1xyXG4gICAgZmlsdGVyOiBibHVyKDhweCk7XHJcbiAgICB0cmFuc2l0aW9uOiBmaWx0ZXIgNjAwbXM7XHJcblxyXG4gICAgJi5sYXp5bG9hZGluZ3tcclxuICAgICAgICBmaWx0ZXI6IGJsdXIoNXB4KTtcclxuICAgIH1cclxuXHJcbiAgICAmLmxhenlsb2FkZWQge1xyXG4gICAgICAgIGZpbHRlcjogYmx1cigwKTtcclxuICAgIH1cclxufVxyXG4iLCIuZm9ybXtcclxuICAgIHdpZHRoOiA5NSU7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2l0ZW17XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gICAgICAgICZfX2xhYmVse1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgbWFyZ2luOiAwIDFlbTtcclxuICAgICAgICAgICAgcGFkZGluZzogLjVlbSAwO1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuXHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMzAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwIDJlbTtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogbGVmdDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9faW5wdXR7XHJcbiAgICAgICAgICAgIHdpZHRoOiA5MCU7XHJcblxyXG5cclxuICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA0MCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIiwiLmhlYWRlcntcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHdpZHRoOiA5OCU7XHJcbiAgICBtYXJnaW46IDAgMSU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgei1pbmRleDogMztcclxuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDNweDtcclxuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAzcHg7XHJcblxyXG4gICAgJl9fbG9nb3tcclxuICAgICAgICBtYXJnaW46IC4yNWVtIDFlbTtcclxuICAgICAgICB6LWluZGV4OiAzO1xyXG5cclxuICAgICAgICAmIGltZ3tcclxuICAgICAgICAgICAgaGVpZ2h0OiAzZW07XHJcbiAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19uYXZ7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsIHJnYmEoJGRhcmstYmx1ZSwgLjgpLCAkZGFyay1ibHVlLCAjMjNiNmRlKTtcclxuICAgICAgICB6LWluZGV4OiAyO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDAgMCAycHggMnB4O1xyXG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICB0b3A6IDMuNWVtO1xyXG5cclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZVgoLTEwMGRlZyk7XHJcbiAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcblxyXG4gICAgICAgICZfX21lbnV7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgcGFkZGluZzogMCAyLjUlO1xyXG5cclxuICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDAgNSU7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICZfX2NvbHVtbiB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuXHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBhdExhcmdlIHtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjQlO1xyXG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogNTAlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiAyNSU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAmOmxhc3QtY2hpbGQ6OmFmdGVyIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICY6bGFzdC1jaGlsZCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDJlbTsgLy9wYXJhIHVzbyBzaW4gdGl0dWxvIGRlIGNvbHVtbmFcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJjpudGgtY2hpbGQoMSl7XHJcbiAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDE7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAmOm50aC1jaGlsZCgyKXtcclxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogMjtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDM7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgJjpudGgtY2hpbGQoMyl7XHJcbiAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDM7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9yZGVyOiAyO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICY6bnRoLWNoaWxkKDQpe1xyXG4gICAgICAgICAgICAgICAgICAgIG9yZGVyOiA0O1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgICAgICAgICAmX190aXRsZXtcclxuICAgICAgICAgICAgICAgICAgICAmIGF7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMCAwIDFlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmX19saXN0e1xyXG4gICAgICAgICAgICAgICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwIDAgMCAxZW07XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIEBtaXhpbiBhdExhcmdle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMWVtO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgJl9fbGlua3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAuNWVtIGF1dG87XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAmIGEge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAmIHNwYW4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogM3B4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC44ZW07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDgwJTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgkY29sb3IteWVsbG93LWxpZ2h0ZXIsICRjb2xvci15ZWxsb3ctbGlnaHQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX21lbnUtaWNvbntcclxuICAgICAgICAmIC5tZW51LWljb24td3JhcHBlcntcclxuICAgICAgICAgICAgbWFyZ2luOiAgMWVtIDJlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5oZWFkcm9vbSB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAkbGlnaHQtYmx1ZSwgJGRhcmstYmx1ZSk7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDEwMCUgMjAwJTtcclxuICAgIHRyYW5zaXRpb246IGFsbCAuM3MgZWFzZS1pbi1vdXQ7XHJcbiAgICB0cmFuc2l0aW9uLWRlbGF5OiAuM3M7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIDIwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG5cclxuXHJcbiAgICAmLS1waW5uZWQgJi0tdG9wIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTAwJSAyMDAlO1xyXG4gICAgfVxyXG5cclxuICAgICYtLXBpbm5lZHtcclxuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDAlKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgJi0tdW5waW5uZWR7XHJcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTAwJSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5oZWFkZXItLXBpbm5lZCwgLmhlYWRyb29tLS1ub3QtdG9wLmhlYWRyb29tLS1waW5uZWR7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIDA7XHJcbn1cclxuXHJcbi8qIE1lbnUgaWNvbiBzdHlsZXMgKi9cclxuXHJcbi5tZW51LWljb24td3JhcHBlciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogMzRweDtcclxuICAgIGhlaWdodDogMzRweDtcclxuICAgIG1hcmdpbjogMmVtO1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjFzO1xyXG59XHJcblxyXG5cclxuLm1lbnUtaWNvbi13cmFwcGVyIHN2ZyB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IC0zM3B4O1xyXG4gICAgbGVmdDogLTMzcHg7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMC4xKTtcclxuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDAuMSk7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuMSk7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IDAgMDtcclxuICAgIC1tcy10cmFuc2Zvcm0tb3JpZ2luOiAwIDA7XHJcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiAwIDA7XHJcbn1cclxuXHJcbi5tZW51LWljb24td3JhcHBlciBzdmcgcGF0aCB7XHJcbiAgICBzdHJva2U6ICNmZmY7XHJcbiAgICBzdHJva2Utd2lkdGg6IDMwcHg7XHJcbiAgICBzdHJva2UtbGluZWNhcDogcm91bmQ7XHJcbiAgICBzdHJva2UtbGluZWpvaW46IHJvdW5kO1xyXG4gICAgZmlsbDogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbi5tZW51LWljb24td3JhcHBlciAubWVudS1pY29uLXRyaWdnZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBwb2ludGVyLWV2ZW50czogYXV0bztcclxuICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4ubWVudS1pY29uLXdyYXBwZXIgLm1lbnUtaWNvbi10cmlnZ2VyOmhvdmVyLFxyXG4ubWVudS1pY29uLXdyYXBwZXIgLm1lbnUtaWNvbi10cmlnZ2VyOmZvY3VzIHtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbn1cclxuXHJcbi5tZW51LWljb24td3JhcHBlcntcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgei1pbmRleDogMTAwO1xyXG59XHJcblxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqIEdlbmVyYXRlZCBieSBBbmltaXN0YSBvbiAyMDE5LTYtNiAxNjo0Mzo0MFxyXG4gKiB3OiBodHRwOi8vYW5pbWlzdGEubmV0LCB0OiBAY3NzYW5pbWlzdGFcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuLyoqXHJcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogYW5pbWF0aW9uIHN3aW5nLWluLXRvcC1iY2tcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKi9cclxuQC13ZWJraXQta2V5ZnJhbWVzIHN3aW5nLWluLXRvcC1iY2sge1xyXG4gICAgMCUge1xyXG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGVYKDcwZGVnKTtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZVgoNzBkZWcpO1xyXG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xyXG4gICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IHRvcDtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgfVxyXG4gICAgMTAwJSB7XHJcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZVgoMGRlZyk7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGVYKDBkZWcpO1xyXG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xyXG4gICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IHRvcDtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG59XHJcbkBrZXlmcmFtZXMgc3dpbmctaW4tdG9wLWJjayB7XHJcbiAgICAwJSB7XHJcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZVgoNzBkZWcpO1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlWCg3MGRlZyk7XHJcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XHJcbiAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICB9XHJcbiAgICAxMDAlIHtcclxuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlWCgwZGVnKTtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZVgoMGRlZyk7XHJcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XHJcbiAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICB9XHJcbn1cclxuXHJcbkAtd2Via2l0LWtleWZyYW1lcyBzd2luZy1vdXQtdG9wLWJjayB7XHJcbiAgICAwJSB7XHJcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZVgoMGRlZyk7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGVYKDBkZWcpO1xyXG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xyXG4gICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IHRvcDtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG4gICAgMTAwJSB7XHJcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZVgoLTEwMGRlZyk7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGVYKC0xMDBkZWcpO1xyXG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xyXG4gICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IHRvcDtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgfVxyXG59XHJcbkBrZXlmcmFtZXMgc3dpbmctb3V0LXRvcC1iY2sge1xyXG4gICAgMCUge1xyXG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGVYKDBkZWcpO1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlWCgwZGVnKTtcclxuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IHRvcDtcclxuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgIH1cclxuICAgIDEwMCUge1xyXG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGVYKC0xMDBkZWcpO1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlWCgtMTAwZGVnKTtcclxuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IHRvcDtcclxuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbi5zd2luZy1pbi10b3AtYmNrIHtcclxuICAgIGFuaW1hdGlvbjogc3dpbmctaW4tdG9wLWJjayAuNHMgY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMjAsIDEuMjc1KSBib3RoO1xyXG4gICAgYW5pbWF0aW9uLWRlbGF5OiAuNnM7XHJcbn1cclxuXHJcbi5zd2luZy1vdXQtdG9wLWJjayB7XHJcbiAgICBhbmltYXRpb246IHN3aW5nLW91dC10b3AtYmNrIC4yNXMgY3ViaWMtYmV6aWVyKDAuNjAwLCAtMC4yODAsIDAuNzM1LCAwLjA0NSkgYm90aDtcclxufSIsIi5oZXJve1xyXG4gICAgaGVpZ2h0OiA3NXZoO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgICZfX2ltYWdle1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcblxyXG4gICAgICAgICYgaW1ne1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgJl9fY29udGVudHtcclxuICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgIG1hcmdpbjogMmVtO1xyXG4gICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX190ZXh0e1xyXG4gICAgICAgICAgICB0ZXh0LXNoYWRvdzogMnB4IDJweCAxMHB4IHJnYmEoYmxhY2ssIC40KTtcclxuXHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDNlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi5iYW5uZXJfc2t5e1xyXG4gICAgaGVpZ2h0OiA3NXZoO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgJl9faW1hZ2V7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgIH1cclxuXHJcbiAgICAmX19jb250ZW50e1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHJcbiAgICAgICAgJl9fdGl0bGVze1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICB0ZXh0LXNoYWRvdzogMnB4IDJweCAxMHB4IHJnYmEoYmxhY2ssIC4yNSk7XHJcblxyXG4gICAgICAgICAgICAmIGgyLCAmIGgze1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAuNWVtO1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJiBoMntcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMi41ZW07XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYgaDN7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuNWVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLnNlY3Rpb257XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG5cclxuICAgICZfX3RpdGxle1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgICAgICAgJl9faGlnaGxpZ2h0IHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcblxyXG4gICAgICAgICAgICBAaW5jbHVkZSBhdExhcmdle1xyXG4gICAgICAgICAgICAgICAgZmxleC13cmFwOiBub3dyYXA7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYgaDJ7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDIuNWVtO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwIDAgLjI1ZW07XHJcblxyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDAgMCAxZW07O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmOjpiZWZvcmUsICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA0cHg7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNzAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwIC41ZW07XHJcblxyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogOGVtO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICRsaWdodC1ibHVlLCAkZGFyay1ibHVlKTtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgtNDVkZWcsICRsaWdodC1ibHVlLCAkZGFyay1ibHVlKTtcclxuXHJcbiAgICAgICAgICAgIH1cclxuXHJcblxyXG5cclxuICAgICAgICAgICAgJiBwIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYtLW9yYW5nZSB7XHJcblxyXG4gICAgICAgICAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgJGxpZ2h0LW9yYW5nZSwgJGRhcmstb3JhbmdlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoLTQ1ZGVnLCAkbGlnaHQtb3JhbmdlLCAkZGFyay1vcmFuZ2UpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJi0tZ3JlZW4ge1xyXG5cclxuICAgICAgICAgICAgICAgICY6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICRsaWdodC1ncmVlbiwgJGRhcmstZ3JlZW4pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgtNDVkZWcsICRsaWdodC1ncmVlbiwgJGRhcmstZ3JlZW4pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJi0tbm8tZGVjb3JhdG9yOjpiZWZvcmUsXHJcbiAgICAgICAgICAgICYtLW5vLWRlY29yYXRvcjo6YWZ0ZXJ7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19kZXNjcmlwdGlvbntcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICB0b3A6IDFlbTtcclxuICAgICAgICAgICAgd2lkdGg6IDk1JTtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgIHRvcDogLTJlbTtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59IiwiLmRpdmlkZXJ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbjogM2VtIDA7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gICAgJjo6YmVmb3Jle1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgICAgIGhlaWdodDogMnB4O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDJweDtcclxuICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICRsaWdodC1ibHVlLCAkZGFyay1ibHVlKTtcclxuICAgIH1cclxuXHJcbiAgICAmLS1vcmFuZ2U6OmJlZm9yZXtcclxuICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICRsaWdodC1vcmFuZ2UsICRkYXJrLW9yYW5nZSk7XHJcbiAgICB9XHJcblxyXG4gICAgJi0td2hpdGU6OmJlZm9yZXtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIH1cclxufSIsIi50b3BfZGVzdGluYXRpb25ze1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cclxuICAgICZfX3BsYWNlc3tcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19wbGFjZXtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMS41ZW0gMDtcclxuICAgICAgICAgICAgbWF4LWhlaWdodDogNzV2aDtcclxuICAgICAgICAgICAgbWluLWhlaWdodDogNTB2aDtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogM2VtIDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNDglO1xyXG4gICAgICAgICAgICAgICAgbWluLWhlaWdodDogYXV0bztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgQGluY2x1ZGUgYXRYTGFyZ2V7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDNlbSAwO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDIzJTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJjpob3ZlciBpbWd7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDUpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmOjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgei1pbmRleDogMDtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IC0xMHB4O1xyXG4gICAgICAgICAgICAgICAgdG9wOiAtMTBweDtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgJGxpZ2h0LWJsdWUsICRkYXJrLWJsdWUgMjAlLCB0cmFuc3BhcmVudCk7XHJcblxyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAtMTVweDtcclxuICAgICAgICAgICAgICAgICAgICB0b3A6IC0xNXB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmLS1vcmFuZ2U6OmJlZm9yZXtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgJGxpZ2h0LW9yYW5nZSwgJGRhcmstb3JhbmdlIDIwJSwgdHJhbnNwYXJlbnQpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmLS1ncmVlbjo6YmVmb3Jle1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAkbGlnaHQtZ3JlZW4sICRkYXJrLWdyZWVuIDIwJSwgdHJhbnNwYXJlbnQpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmX19pbWFnZSB7XHJcbiAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG5cclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGF0WExhcmdlIHtcclxuICAgICAgICAgICAgICAgICAgICBtaW4taGVpZ2h0OiA2MHZoO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICYgPiBkaXZ7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICYgaW1nIHtcclxuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjVzIGVhc2UtaW4tb3V0O1xyXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgYXRYTGFyZ2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogYXV0bztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmX190ZXh0IHtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDAgNSU7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICB6LWluZGV4OiAyO1xyXG4gICAgICAgICAgICAgICAgdGV4dC1zaGFkb3c6IDNweCAzcHggMTBweCByZ2JhKGJsYWNrLCAuNSk7XHJcblxyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgICAgICBib3R0b206IDFlbTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmIHNwYW4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogJGZvbnQtdGl0bGVzO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMmVtO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICYgcCB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIi5hY3Rpdml0eSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbjogLjVlbSAuNWVtO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgd2lkdGg6IDMxJTtcclxuICAgIH1cclxuXHJcbiAgICAmOmhvdmVye1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuXHJcbiAgICAgICAgJiBpbWd7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9faW1hZ2V7XHJcbiAgICAgICAgaGVpZ2h0OiA0MHZoO1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgYm94LXNoYWRvdzogMnB4IDJweCAxMHB4IHJnYmEoYmxhY2ssIC4yKTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgICAmIGltZ3tcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4zcyBlYXNlLWluLW91dDtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbnRlbnR7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHRvcDogLS43NWVtO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDJweCAycHggMTBweCByZ2JhKGJsYWNrLCAuMik7XHJcbiAgICAgICAgcGFkZGluZzogLjVlbTtcclxuICAgICAgICB3aWR0aDogOTUlO1xyXG4gICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAycHg7XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbTtcclxuICAgICAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3ByaWNle1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgJGxpZ2h0LWJsdWUsICRkYXJrLWJsdWUpO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSg1MCUsIC01MCUpO1xyXG4gICAgICAgICAgICB0b3A6IC0uNWVtO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAuNWVtO1xyXG4gICAgICAgICAgICB3aWR0aDogMy43NWVtO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDMuNzVlbTtcclxuXHJcbiAgICAgICAgICAgICYgc3BhbntcclxuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IC45NWVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19hY3Rpb25ze1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG5cclxuICAgICAgICAgICAgJl9fYWRke1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDJlbTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMmVtO1xyXG4gICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgICAgICAgICAgICAgICY6OmJlZm9yZXtcclxuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX190aXRsZXtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19kZXNjcmlwdGlvbntcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgJiBwe1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAuMjVlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIkBrZXlmcmFtZXMgbG9hZGluZ19kb3RzX2FuaW1hdGlvbiB7XHJcbiAgICA1MCUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgIH1cclxuICAgIDEwMCUge1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgbG9hZGluZ19kb3RzX2FuaW1hdGlvbl9fd2FpdCB7XHJcbiAgICA1MCUge1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICB9XHJcbiAgICAxMDAlIHtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG59XHJcblxyXG4ubG9hZGluZ19kb3RzIHtcclxuICAgIGhlaWdodDogMmVtO1xyXG4gICAgbWFyZ2luOiAuNWVtO1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIGVhc2UtaW4tb3V0O1xyXG5cclxuICAgICYgKntcclxuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgfVxyXG5cclxuICAgICYgLmRvdCB7XHJcbiAgICAgICAgd2lkdGg6IDEuNWVtO1xyXG4gICAgICAgIGhlaWdodDogMS41ZW07XHJcbiAgICAgICAgbWFyZ2luOiAwIGNhbGMoMS41ZW0gLyAyKTtcclxuICAgICAgICBib3JkZXI6IGNhbGMoMS41ZW0gLyA1KSBzb2xpZCAkbGlnaHQtYmx1ZTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcclxuICAgICAgICBhbmltYXRpb246IGxvYWRpbmdfZG90c19hbmltYXRpb24gMXMgZWFzZSBpbmZpbml0ZSAwcztcclxuXHJcbiAgICAgICAgJjpudGgtY2hpbGQoMSkge1xyXG4gICAgICAgICAgICBhbmltYXRpb24tZGVsYXk6IGNhbGMoMzAwbXMgKiAxKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICY6bnRoLWNoaWxkKDIpIHtcclxuICAgICAgICAgICAgYW5pbWF0aW9uLWRlbGF5OiBjYWxjKDMwMG1zICogMik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmOm50aC1jaGlsZCgzKSB7XHJcbiAgICAgICAgICAgIGFuaW1hdGlvbi1kZWxheTogY2FsYygzMDBtcyAqIDMpO1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi0tdmlzaWJsZXtcclxuICAgICAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbiIsIkBrZXlmcmFtZXMgc2hvd0Jhclgge1xyXG4gICAgMCV7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDc1JSk7XHJcbiAgICB9XHJcbiAgICA0MCV7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTtcclxuICAgIH1cclxuICAgIDYwJXtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xyXG4gICAgfVxyXG4gICAgMTAwJXtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNzUlKTtcclxuICAgIH1cclxufVxyXG5Aa2V5ZnJhbWVzIHNob3dCYXJZIHtcclxuICAgIDAle1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg3NSUpO1xyXG4gICAgfVxyXG4gICAgNDAle1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwJSk7XHJcbiAgICB9XHJcbiAgICA2MCV7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDAlKTtcclxuICAgIH1cclxuICAgIDEwMCV7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDc1JSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5jYXJ0X2JhcntcclxuXHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogY2FsYyggMTAwdncgLSA0cHgpO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDYwJSk7XHJcbiAgICBoZWlnaHQ6IDZlbTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcclxuICAgIG1hcmdpbjogMCAycHg7XHJcblxyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgei1pbmRleDogMjtcclxuICAgIHBhZGRpbmc6IC4yNWVtO1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKCRsaWdodC1ibHVlLCAuOTUpLCByZ2JhKCRkYXJrLWJsdWUsIC45NSkpO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgcmdiYSh3aGl0ZSwgLjkpO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcblxyXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4zcyBlYXNlLWluLW91dDtcclxuXHJcblxyXG4gICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNzUlKTtcclxuICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICAgICAgYm90dG9tOiAyZW07XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgd2lkdGg6IGF1dG87XHJcbiAgICB9XHJcblxyXG4gICAgJjpob3ZlcntcclxuICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XHJcbiAgICAgICAgQGluY2x1ZGUgYXRMYXJnZSB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi0tdmlzaWJsZXtcclxuICAgICAgICBhbmltYXRpb246IHNob3dCYXJZIDMuNXMgZWFzZS1pbi1vdXQgMTtcclxuICAgICAgICBAaW5jbHVkZSBhdExhcmdlIHtcclxuICAgICAgICAgICAgYW5pbWF0aW9uOiBzaG93QmFyWCAzLjVzIGVhc2UtaW4tb3V0IDE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX3RpdGxle1xyXG4gICAgICAgIG1hcmdpbjogMWVtIC41ZW07XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB3aGl0ZTtcclxuICAgICAgICB3aWR0aDogMzAlO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiAxZW07XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGF0TGFyZ2Uge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xyXG4gICAgICAgICAgICBwYWRkaW5nLXRvcDogMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2ljb257XHJcbiAgICAgICAgICAgIHdpZHRoOiAyZW07XHJcbiAgICAgICAgICAgIGhlaWdodDogMmVtO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJiBoNHtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogLjVlbTtcclxuICAgICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fY29udGVudHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBwYWRkaW5nOiAwIDFlbTtcclxuICAgICAgICBAaW5jbHVkZSBhdExhcmdle1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX190ZXh0e1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMDtcclxuXHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IC41ZW0gMDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJiBwe1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19idXR0b257XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuXHJcbiAgICAgICAgICAgICYgYXtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogMCAuMjVlbTtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmIFtkYXRhLXNob3c9J2VtcHR5J117XHJcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBoZWlnaHQ6IDA7XHJcbiAgICAgICAgd2lkdGg6IDA7XHJcbiAgICAgICAgei1pbmRleDogLTE7XHJcbiAgICB9XHJcblxyXG4gICAgJi0taW5pdGlhbHtcclxuICAgICAgICAmIFtkYXRhLXNob3c9J25vLWVtcHR5J117XHJcbiAgICAgICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDA7XHJcbiAgICAgICAgICAgIHdpZHRoOiAwO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYgW2RhdGEtc2hvdz0nZW1wdHknXXtcclxuICAgICAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcclxuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgICAgICB3aWR0aDogYXV0bztcclxuICAgICAgICAgICAgei1pbmRleDogYXV0bztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG4iLCIuZm9vdGVye1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAkY29sb3ItYmx1ZS1saWdodCwkY29sb3ItYmx1ZS1kYXJrKTtcclxuICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XHJcblxyXG4gICAgJl9fYmFubmVye1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogNzV2aDtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgICAgICZfX2ltYWdle1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19jb250ZW50e1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gICAgICAgICAgICAmX190aXRsZXN7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHRleHQtc2hhZG93OiAycHggMnB4IDEwcHggcmdiYShibGFjaywgLjI1KTtcclxuXHJcbiAgICAgICAgICAgICAgICAmIGgyLCAmIGgze1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IC41ZW07XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmIGgye1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMi41ZW07XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJiBoM3tcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuNWVtO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbnRlbnR7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgcGFkZGluZzogLjVlbTtcclxuICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgcGFkZGluZzogMmVtIDJlbSAuNWVtIDJlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2xpbmtze1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcblxyXG4gICAgICAgICAgICAmX19jb2x1bW57XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNTAlO1xyXG5cclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDIzJTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmOm50aC1jaGlsZCgxKXtcclxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogMTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICY6bnRoLWNoaWxkKDIpe1xyXG4gICAgICAgICAgICAgICAgICAgIG9yZGVyOiAyO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBhdExhcmdle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvcmRlcjogMztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAmOm50aC1jaGlsZCgzKXtcclxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogMztcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDI7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgJjpudGgtY2hpbGQoNCl7XHJcbiAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJl9fdGl0bGV7XHJcbiAgICAgICAgICAgICAgICAgICAgJiBhe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICYgdWx7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC4yNWVtO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAmIGxpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAuMjVlbSAwO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgJiBhe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19pbmZvc3tcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG5cclxuICAgICAgICAgICAgJl9fY29sdW1uIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA0OCU7XHJcblxyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjUlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICY6bGFzdC1jaGlsZHtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDI1JTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2FnYntcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgJiBhe1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19jb3B5cmlnaHR7XHJcbiAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmX19tYWRlLWJ5e1xyXG4gICAgICAgICAgICB3aWR0aDogYXV0bztcclxuXHJcbiAgICAgICAgICAgICYgYXtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19zb2NpYWwtbmV0d29ya3N7XHJcbiAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW46IGF1dG8gMmVtO1xyXG5cclxuICAgICAgICAgICAgJiB1bHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuXHJcbiAgICAgICAgICAgICAgICAmIGxpe1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMCAuMjVlbTtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgJiBhe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAmIHN2Z3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyZW07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDJlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19iYWNrZ3JvdW5kLWltYWdle1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgei1pbmRleDogMDtcclxuICAgIH1cclxufSIsIi50cmF2ZWwtb3B0aW9uc3tcclxuICAgIG1hcmdpbi1ib3R0b206IDJlbTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgICAmX19ncmlke1xyXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogICAgXCJpbWcxIGltZzZcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaW1nMiBpbWc2XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImltZzkgaW1nOVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpbWcxMCBpbWcxMFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpbWczIGltZzNcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaW1nNCBpbWcxMVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpbWc1IGltZzcgXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImltZzUgaW1nOFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpbWcxMiBpbWcxNFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpbWcxMyBpbWcxNFwiO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMzN2aCAzM3ZoIDMzdmggMzN2aCAzM3ZoIDMzdmggMzN2aCAzM3ZoIDMzdmggMzN2aDtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgZ3JpZC1nYXA6IC4xNWVtO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBhdExhcmdle1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiAgICBcImltZzEgaW1nNiBpbWc5IGltZzlcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImltZzIgaW1nNiBpbWcxMCBpbWcxMFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaW1nMyBpbWczIGltZzMgaW1nM1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaW1nNCBpbWc0IGltZzExIGltZzExXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpbWc1IGltZzcgaW1nMTIgaW1nMTRcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImltZzUgaW1nOCBpbWcxMyBpbWcxNFwiO1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDQwdmggNDB2aCA0MHZoIDQwdmg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnIgMWZyO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2l0ZW17XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgICAgICAgICAmIGltZ3tcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19ncmlkX292ZXJsYXkge1xyXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXCJzZWN0aW9uMSBzZWN0aW9uMVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWN0aW9uMSBzZWN0aW9uMVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWN0aW9uMiBzZWN0aW9uMlwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWN0aW9uMiBzZWN0aW9uMlwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWN0aW9uMyBzZWN0aW9uM1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWN0aW9uMyBzZWN0aW9uM1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWN0aW9uNCBzZWN0aW9uNFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWN0aW9uNCBzZWN0aW9uNFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWN0aW9uNSBzZWN0aW9uNVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWN0aW9uNSBzZWN0aW9uNVwiO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMzN2aCAzM3ZoIDMzdmggMzN2aCAzM3ZoIDMzdmggMzN2aCAzM3ZoIDMzdmggMzN2aDtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XHJcbiAgICAgICAgZ3JpZC1nYXA6IC4xNWVtO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBhdExhcmdle1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcInNlY3Rpb24xIHNlY3Rpb24xIHNlY3Rpb24yIHNlY3Rpb24yXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInNlY3Rpb24xIHNlY3Rpb24xIHNlY3Rpb24yIHNlY3Rpb24yXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInNlY3Rpb24zIHNlY3Rpb24zIHNlY3Rpb24zIHNlY3Rpb24zXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInNlY3Rpb24zIHNlY3Rpb24zIHNlY3Rpb24zIHNlY3Rpb24zXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInNlY3Rpb240IHNlY3Rpb240IHNlY3Rpb241IHNlY3Rpb241XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInNlY3Rpb240IHNlY3Rpb240IHNlY3Rpb241IHNlY3Rpb241XCI7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogNDB2aCA0MHZoIDQwdmggNDB2aDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmciAxZnI7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmIGEge1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAzZW07XHJcbiAgICAgICAgICAgIHRleHQtc2hhZG93OiAycHggMnB4IDEwcHggcmdiYShibGFjaywgLjI1KTtcclxuXHJcblxyXG4gICAgICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICAgICAgJiA+IGRpdiB7XHJcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJiBkaXYge1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkbGlnaHQtYmx1ZSwgLjUpO1xyXG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuM3MgZWFzZS1pbi1vdXQ7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufSJdLCJzb3VyY2VSb290IjoiIn0=*/