/**
 * @section Normalize.css
 * Normalize.css base with custom code.
 * Additional normalize styles incorporated throughout components.
 * @link http://necolas.github.io/normalize.css/
 */
/**
 * Remove the tap delay in webkit
 * @link https://medium.com/@adactio/delay-a9df9edceef3#.7dmbl3xow
 */
a,
button,
input,
select,
textarea,
label,
summary {
  touch-action: manipulation;
}

/**
 * Add box sizing to everything
 * @link http://www.paulirish.com/2012/box-sizing-border-box-ftw/
 */
*,
*:before,
*:after {
  box-sizing: border-box;
}

/**
 * 1. Force scrollbar display to prevent jumping on pages.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  overflow-y: scroll;
  /* 1 */
  text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
cite,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/**
 * Correct `inline-block` display not defined in IE 8/9.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
}

/**
 * Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Prevent img and video elements from spilling outside of the page on smaller screens.
 */
img,
video {
  width: 100%;
  max-width: 100%;
  height: 100%;
  object-fit: cover;
}

/**
 * Prevent iframe, object, and embed elements from spilling outside of the page on smaller screens.
 * height: auto causes iframes to smush, so it's omitted here.
 */
iframe,
object,
embed {
  max-width: 100%;
}

/**
 * Hide the template element in IE, Safari, and Firefox < 22.
 */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Prevents IE from making scaled images look like crap
 */
img {
  border-style: none;
  /* 1 */
  -ms-interpolation-mode: bicubic;
  /* 2 */
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/**
 * Address inconsistent margin.
 */
figure {
  margin: 0;
}

/**
 * @workaround Remove focus from <main> element when using tabindex="-1" hack for skipnav link
 * @link https://code.google.com/p/chromium/issues/detail?id=37721
 */
[tabindex="-1"]:focus {
  outline: none;
}

/**
 * @section Grid
 * Structure and layout
 */
/**
 * Base grid styles: single column
 */
.container {
  margin-left: auto;
  margin-right: auto;
  max-width: 80em;
  width: 88%;
}

.row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  margin-left: -1.4%;
  margin-right: -1.4%;
}

.no-lat-margins {
  margin-left: 0 !important;
  margin-right: 0 !important;
}

/**
 * Alignment
 */
/* Float content to the top */
.row-top {
  align-items: flex-start;
}

/* Float content in the middle */
.row-middle {
  align-items: center;
}

/* Push content to the bottom */
.row-bottom {
  align-items: flex-end;
}

/* Move content to the start of the row */
.row-start {
  justify-content: flex-start;
}

/* Float content in the center of the row */
.row-center {
  justify-content: center;
}

/* Move content to the end of the row */
.row-end {
  justify-content: flex-end;
}

/* Add even spacing around each item */
.row-around {
  justify-content: space-around;
}

/* Add even spacing between items */
.row-between {
  justify-content: space-between;
}

/* Reverse content order */
.row-reverse {
  flex-direction: row-reverse;
}

.grid-tenth, .grid-p16, .grid-fifth, .grid-fourth, .grid-p28, .grid-three-tenth, .grid-third, .grid-four-tenth, .grid-half, .grid-two-thirds, .grid-three-fourths, .grid-full, .grid-auto {
  flex-basis: 100%;
  margin-left: 1.4%;
  margin-right: 1.4%;
}

/**
 * Add columns to grid on bigger screens
 */
@media (min-width: 20em) {
  .row.row-start-xsmall {
    flex-wrap: nowrap;
  }
  .row-wrap.row-start-xsmall {
    flex-wrap: wrap;
  }
  .row-wrap.row-start-xsmall .grid-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-p16 {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-fifth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-fourth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-p28 {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-three-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-third {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-four-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-half {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-two-thirds {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-three-fourths {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-full {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-auto {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-start-xsmall .grid-auto {
    flex-basis: auto;
    flex-grow: 1;
  }
  .row-start-xsmall .grid-tenth {
    flex-basis: 10%;
    max-width: 10%;
  }
  .row-start-xsmall .grid-p16 {
    flex-basis: 16%;
    max-width: 16%;
  }
  .row-start-xsmall .grid-fifth {
    flex-basis: 20%;
    max-width: 20%;
  }
  .row-start-xsmall .grid-fourth {
    flex-basis: 25%;
    max-width: 25%;
  }
  .row-start-xsmall .grid-p28 {
    flex-basis: 28%;
    max-width: 28%;
  }
  .row-start-xsmall .grid-three-tenth {
    flex-basis: 30%;
    max-width: 30%;
  }
  .row-start-xsmall .grid-third {
    flex-basis: 33.33333%;
    max-width: 33.33333%;
  }
  .row-start-xsmall .grid-four-tenth {
    flex-basis: 40%;
    max-width: 40%;
  }
  .row-start-xsmall .grid-half {
    flex-basis: 50%;
    max-width: 50%;
  }
  .row-start-xsmall .grid-two-thirds {
    flex-basis: 66.66667%;
    max-width: 66.66667%;
  }
  .row-start-xsmall .grid-three-fourths {
    flex-basis: 75%;
    max-width: 75%;
  }
  .row-start-xsmall .grid-full {
    flex-basis: 100%;
    max-width: 100%;
  }
  .row-start-xsmall .grid-first {
    -webkit-box-ordinal-group: 0;
    order: -1;
  }
  .row-start-xsmall .grid-last {
    -webkit-box-ordinal-group: 2;
    order: 1;
  }
}

@media (min-width: 30em) {
  .row.row-start-small {
    flex-wrap: nowrap;
  }
  .row-wrap.row-start-small {
    flex-wrap: wrap;
  }
  .row-wrap.row-start-small .grid-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-p16 {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-fifth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-fourth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-p28 {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-three-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-third {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-four-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-half {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-two-thirds {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-three-fourths {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-full {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-auto {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-start-small .grid-auto {
    flex-basis: auto;
    flex-grow: 1;
  }
  .row-start-small .grid-tenth {
    flex-basis: 10%;
    max-width: 10%;
  }
  .row-start-small .grid-p16 {
    flex-basis: 16%;
    max-width: 16%;
  }
  .row-start-small .grid-fifth {
    flex-basis: 20%;
    max-width: 20%;
  }
  .row-start-small .grid-fourth {
    flex-basis: 25%;
    max-width: 25%;
  }
  .row-start-small .grid-p28 {
    flex-basis: 28%;
    max-width: 28%;
  }
  .row-start-small .grid-three-tenth {
    flex-basis: 30%;
    max-width: 30%;
  }
  .row-start-small .grid-third {
    flex-basis: 33.33333%;
    max-width: 33.33333%;
  }
  .row-start-small .grid-four-tenth {
    flex-basis: 40%;
    max-width: 40%;
  }
  .row-start-small .grid-half {
    flex-basis: 50%;
    max-width: 50%;
  }
  .row-start-small .grid-two-thirds {
    flex-basis: 66.66667%;
    max-width: 66.66667%;
  }
  .row-start-small .grid-three-fourths {
    flex-basis: 75%;
    max-width: 75%;
  }
  .row-start-small .grid-full {
    flex-basis: 100%;
    max-width: 100%;
  }
  .row-start-small .grid-first {
    -webkit-box-ordinal-group: 0;
    order: -1;
  }
  .row-start-small .grid-last {
    -webkit-box-ordinal-group: 2;
    order: 1;
  }
}

@media (min-width: 40em) {
  .row {
    flex-wrap: nowrap;
  }
  .row-wrap {
    flex-wrap: wrap;
  }
  .row-wrap .grid-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-p16 {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-fifth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-fourth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-p28 {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-three-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-third {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-four-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-half {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-two-thirds {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-three-fourths {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-full {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-auto {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .grid-auto {
    flex-basis: auto;
    flex-grow: 1;
  }
  .grid-tenth {
    flex-basis: 10%;
    max-width: 10%;
  }
  .grid-p16 {
    flex-basis: 16%;
    max-width: 16%;
  }
  .grid-fifth {
    flex-basis: 20%;
    max-width: 20%;
  }
  .grid-fourth {
    flex-basis: 25%;
    max-width: 25%;
  }
  .grid-p28 {
    flex-basis: 28%;
    max-width: 28%;
  }
  .grid-three-tenth {
    flex-basis: 30%;
    max-width: 30%;
  }
  .grid-third {
    flex-basis: 33.33333%;
    max-width: 33.33333%;
  }
  .grid-four-tenth {
    flex-basis: 40%;
    max-width: 40%;
  }
  .grid-half {
    flex-basis: 50%;
    max-width: 50%;
  }
  .grid-two-thirds {
    flex-basis: 66.66667%;
    max-width: 66.66667%;
  }
  .grid-three-fourths {
    flex-basis: 75%;
    max-width: 75%;
  }
  .grid-full {
    flex-basis: 100%;
    max-width: 100%;
  }
  .offset-tenth {
    margin-left: 10%;
  }
  .offset-p16 {
    margin-left: 16%;
  }
  .offset-fifth {
    margin-left: 20%;
  }
  .offset-fourth {
    margin-left: 25%;
  }
  .offset-p28 {
    margin-left: 28%;
  }
  .offset-three-tenth {
    margin-left: 30%;
  }
  .offset-third {
    margin-left: 33.33333%;
  }
  .offset-four-tenth {
    margin-left: 40%;
  }
  .offset-half {
    margin-left: 50%;
  }
  .offset-two-thirds {
    margin-left: 66.66667%;
  }
  .offset-three-fourths {
    margin-left: 75%;
  }
  .offset-full {
    margin-left: 100%;
  }
  .grid-first {
    -webkit-box-ordinal-group: 0;
    order: -1;
  }
  .grid-last {
    -webkit-box-ordinal-group: 2;
    order: 1;
  }
}

/**
 * @section Typography
 * Sets font styles for entire site
 */
*::selection {
  background-color: rgba(53, 207, 212, 0.3);
}

body {
  background: white;
  color: #666;
  font-family: "Open Sans", sans-serif;
  font-size: 100%;
  line-height: 1.5;
}

@media (min-width: 40em) {
  body {
    line-height: 1.5625;
  }
}

main {
  background: white;
}

p {
  margin: 0 0 1.5625em;
}

.underline {
  text-decoration: underline;
}

/**
 * Hyperlink styling
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  color: #666;
  background-color: transparent;
  /* 1 */
  text-decoration: none;
  text-decoration-skip: objects;
  /* 2 */
  word-wrap: break-word;
  /**
	 * Improve readability when focused and also mouse hovered in all browsers.
	 */
}

a:active, a:hover {
  outline: 0;
}

/**
 * List styling
 */
ul,
ol {
  margin: 0 0 1.5625em 2em;
  padding: 0;
}

ul ul,
ul ol,
ol ol,
ol ul {
  margin-bottom: 0;
}

dl,
dd {
  margin: 0;
  padding: 0;
}

dd {
  margin-bottom: 1.5625em;
}

dt {
  font-weight: bold;
}

/**
 * @bugfix Prevent webkit from removing list semantics
 * 1. Add a non-breaking space
 * 2. Make sure it doesn't mess up the DOM flow
 */
.list-unstyled, .list-inline {
  list-style: none;
}

.list-unstyled > li:before, .list-inline > li:before {
  content: "\200B";
  /* 1 */
  position: absolute;
  /* 2 */
}

/**
 * Removes list styling.
 * For semantic reasons, should only be used on unordered lists.
 */
.list-unstyled {
  margin-left: 0;
}

/**
 * Display lists on a single line.
 */
.list-inline {
  margin-left: -0.5em;
  margin-right: -0.5em;
  padding: 0;
}

.list-inline > li {
  display: inline-block;
  margin-left: 0.5em;
  margin-right: 0.5em;
}

/**
 * Heading styling for h1 through h6 elements.
 * Heading class lets you use one heading type for semantics, but style it as another heading type.
 */
h1, h2, h3, h4, h5, h6 {
  font-weight: normal;
  line-height: 1.2;
  margin: 0 0 1em;
  padding: 1em 0 0;
  word-wrap: break-word;
  font-family: "Baloo Bhaina", cursive;
}

h1,
.h1 {
  font-size: 1.5em;
  padding-top: .5em;
  font-family: "Baloo Bhaina", cursive;
}

@media (min-width: 40em) {
  h1,
  .h1 {
    font-size: 1.75em;
  }
}

h2,
.h2 {
  font-size: 1.3125em;
}

h3,
.h3 {
  font-size: 1.1875em;
}

h4, h5, h6,
.h4, .h5, .h6 {
  font-size: 1em;
}

h4,
.h4 {
  text-transform: uppercase;
}

/**
 * Lines, Quotes and Emphasis
 */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  border: 0;
  border-top: 1px solid #e5e5e5;
  border-bottom: 0 solid transparent;
  box-sizing: content-box;
  /* 1 */
  margin: 2em auto;
  overflow: visible;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #fbf9c9;
  color: #000000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/**
 * Blockquotes
 */
blockquote {
  font-size: 1.1875em;
  font-style: italic;
  margin: 0 0 1.5625em;
  padding-left: 0.8421052632em;
  padding-right: 0.8421052632em;
}

blockquote cite {
  color: #666666;
  font-size: 0.8421052632em;
  padding-top: 1em;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
}

/**
 * @section Code
 * Styling for code and preformatted text.
 */
code,
kbd,
pre,
samp {
  font-family: "Open Sans", monospace;
  font-size: 0.875em;
}

code {
  background-color: #f7f7f7;
  color: #dd1144;
  padding: 0.25em;
  word-wrap: break-word;
}

pre {
  background-color: #f4f4f4;
  display: block;
  line-height: 1.5;
  margin-bottom: 1.5625em;
  overflow: auto;
  padding: 0.8125em;
  tab-size: 4;
  white-space: pre-wrap;
  word-break: break-all;
}

pre code {
  background-color: transparent;
  border: 0;
  color: inherit;
  font-size: 1em;
  padding: 0;
}

/**
 * @section Buttons
 * Styling for CSS buttons.
 */
/**
 * Primary buttons
 */
.btn {
  background-image: linear-gradient(to right, rgba(53, 207, 212, 0.9), rgba(20, 161, 230, 0.9));
  background-size: 200%;
  border: 2px white solid;
  border-radius: 2px;
  color: white;
  font-size: 1em;
  font-weight: 700;
  padding: .5em 1em;
  text-decoration: none;
  white-space: normal;
  transition: .5s;
  cursor: pointer;
  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);
}

.btn:hover, .btn:active {
  background-position: right center;
  text-decoration: none;
  color: white;
}

.btn--big {
  padding: .7em 1.25em;
  font-size: 1.25em;
}

.btn--transparent {
  background-image: linear-gradient(to right, transparent 50%, rgba(53, 207, 212, 0.9), rgba(20, 161, 230, 0.9));
}

.btn--transparent:hover {
  background-position: right center;
}

.btn--green {
  background-image: linear-gradient(to right, #62ab03 50%, rgba(98, 171, 3, 0.9), rgba(0, 77, 0, 0.9));
}

.btn--green:hover {
  background-position: right center;
}

.btn--small {
  padding: .25em .5em;
  font-weight: 500;
}

/**
 * @section Forms
 * Styling for form elements.
 */
form,
fieldset {
  margin-bottom: 1.5625em;
}

fieldset {
  border: 0;
  padding: 0;
}

legend,
label {
  display: block;
  font-weight: normal;
  margin: 0 0 0.3125em;
  padding: 0;
}

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: #2e2e2e;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
  padding: 0.3125em;
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

input,
textarea,
select {
  display: block;
  line-height: 1.5;
  margin-bottom: 1.1875em;
  width: 100%;
  padding: .25em .5em;
  background: white;
  border: 2px solid #35cfd4;
}

@media (min-width: 40em) {
  input,
  textarea,
  select {
    line-height: 1.5625;
  }
}

input[type="submit"] {
  width: auto;
  margin: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

form button,
form .button {
  margin-bottom: 1.1875em;
}

textarea {
  height: 12em;
  overflow: auto;
}

[type="image"],
[type="checkbox"],
[type="radio"] {
  cursor: pointer;
  display: inline-block;
  height: auto;
  margin-bottom: 0.3125em;
  padding: 0;
  width: auto;
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

input:focus,
select:focus,
textarea:focus {
  border-color: rgba(82, 168, 236, 0.8);
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 0.5em rgba(82, 168, 236, 0.6);
  outline: 0;
  outline: thin dotted \9;
}

[type="file"]:focus,
[type="checkbox"]:focus,
select:focus {
  outline: thin dotted;
  outline: 0.3125em auto -webkit-focus-ring-color;
  outline-offset: -0.125em;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/**
 * Inline inputs
 */
.input-inline {
  display: inline-block;
  vertical-align: middle;
  width: auto;
}

/**
 * Condensed inputs
 */
.input-condensed {
  padding: 1px 0.3125em;
  font-size: 0.9375em;
}

/**
 * Search
 */
/**
  * 1. Correct the odd appearance in Chrome and Safari.
  * 2. Correct the outline style in Safari.
  */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Create rounded search bar
 */
.input-search {
  width: 85%;
  padding-left: 0.9375em;
  padding-right: 2.5em;
  border-radius: 1.3125em;
  transition: width 300ms ease-in;
}

@media (min-width: 40em) {
  .input-search {
    width: 65%;
  }
}

/**
 * Special styling for search icon as button
 */
.btn-search {
  display: inline;
  color: #666666;
  border: none;
  background: none;
  margin-left: -2.5em;
  margin-bottom: 0;
}

.btn-search .icon {
  fill: #666666;
}

.btn-search:hover {
  color: #404040;
}

.btn-search:hover .icon {
  fill: #404040;
}

/**
 * @section Tables
 * Styling for tables
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
  margin-bottom: 1.5625em;
  max-width: 100%;
  width: 100%;
}

th,
td {
  text-align: left;
  padding: 0.5em;
}

th {
  border-bottom: 0.125em solid #e5e5e5;
  font-weight: bold;
  vertical-align: bottom;
}

td {
  border-top: 1px solid #e5e5e5;
  vertical-align: top;
}

/**
 * Adds zebra striping
 */
.table-striped tbody tr:nth-child(odd) {
  background-color: #f7f7f7;
}

/**
 * Reduces padding on condensed tables
 */
.table-condensed th,
.table-condensed td {
  padding: 0.25em;
}

/* Import add-ons here... */
/**
 * @section Overrides
 * Nudge and tweak alignment, spacing, and visibility.
 */
/**
 * Text sizes
 */
.text-small {
  font-size: 0.9375em;
}

.text-large {
  font-size: 1.1875em;
  line-height: 1.4;
}

@media (min-width: 40em) {
  .text-large {
    font-size: 1.3125em;
  }
}

/**
 * Text colors
 */
.text-muted {
  color: #666666;
}

/**
 * Text alignment
 */
.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-left {
  text-align: left;
}

@media (min-width: 40em) {
  .text-right-medium {
    text-align: right;
  }
}

/**
 * Floats
 */
.float-left {
  float: left;
}

.float-center {
  float: none;
  margin-left: auto;
  margin-right: auto;
}

.float-right {
  float: right;
}

/**
 * Margins
 */
.no-margin-top {
  margin-top: 0;
}

.no-margin-bottom {
  margin-bottom: 0;
}

.margin-top {
  margin-top: 1.5625em;
}

.margin-bottom {
  margin-bottom: 1.5625em;
}

.margin-bottom-small {
  margin-bottom: 0.5em;
}

.margin-bottom-large {
  margin-bottom: 2em;
}

/**
 * Padding
 */
.no-padding-top {
  padding-top: 0;
}

.no-padding-bottom {
  padding-bottom: 0;
}

.padding-top {
  padding-top: 1.5625em;
}

.padding-top-small {
  padding-top: 0.5em;
}

.padding-top-large {
  padding-top: 4em;
}

.padding-bottom {
  padding-bottom: 1.5625em;
}

.padding-bottom-small {
  padding-bottom: 0.5em;
}

.padding-bottom-large {
  padding-bottom: 2em;
}

/**
 * Visibility
 */
/*
 * Hide only visually, but have it available for screen readers:
 * @link https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  /* 1 */
  width: 1px;
}

.soft-hidden {
  visibility: hidden;
}

/*
 * Extends the .visuallyhidden class to allow the element to be focusable when navigated to via the keyboard
 * @link https://www.drupal.org/node/897638
 */
.visually-hidden.focusable:active,
.visually-hidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/**
 * @workaround
 * @affected IE 8/9/10
 * @link http://juicystudio.com/article/screen-readers-display-none.php
 */
[hidden], template {
  display: none;
  visibility: hidden;
}

/**
 * Contain floats
 * The space content is one way to avoid an Opera bug when the `contenteditable` attribute is included anywhere else in the document.
 * @link https://github.com/h5bp/html5-boilerplate/blob/master/dist/css/main.css
 */
.clearfix:before, .container:before,
.clearfix:after,
.container:after {
  display: table;
  content: " ";
}


.clearfix:after,
.container:after {
  clear: both;
}

/**
 * @section Print
 * Styling for printed content. Adapted from HTML5BP.
 * @link http://html5boilerplate.com
 */
@media print {
  /**
	 * Universal selector.
	 * Reset all content to transparent background, black color, and remove box and text shadows.
	 */
  * {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  /**
	 * Specifies page margin
	 */
  @page {
    margin: 0.5cm;
  }
  /**
	 * Underline all links
	 */
  a,
  a:visited {
    text-decoration: underline;
  }
  /**
	 * Show URL after links
	 */
  a[href]:after {
    content: " (" attr(href) ")";
  }
  /**
	 * Don't show URL for internal links
	 */
  a[href^="#"]:after {
    content: "";
  }
  /**
	 * Specifies the minimum number of lines to print at the top and bottom of a page.
	 */
  p,
  h1, h2, h3 {
    orphans: 3;
    widows: 3;
  }
  /**
	 * Avoid inserting a page break after headers
	 */
  h1, h2, h3 {
    page-break-after: avoid;
  }
  /**
	 * Change border color on blockquotes and preformatted text.
	 * Avoid page breaks inside the content
	 */
  pre,
  blockquote {
    border-color: #999;
    page-break-inside: avoid;
  }
  /**
	 * Displayed as a table header row group
	 */
  thead {
    display: table-header-group;
  }
  /**
	 * Avoid inserting a page break inside table rows and images
	 */
  tr,
  img {
    page-break-inside: avoid;
  }
}

/* oriya */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBIg58qhE.woff2) format("woff2");
  unicode-range: U+0964-0965, U+0B01-0B77, U+200C-200D, U+20B9, U+25CC;
}

/* vietnamese */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBNA58qhE.woff2) format("woff2");
  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
}

/* latin-ext */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBNQ58qhE.woff2) format("woff2");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

/* latin */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBOw58.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

/* cyrillic-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFWJ0bbck.woff2) format("woff2");
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}

/* cyrillic */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFUZ0bbck.woff2) format("woff2");
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}

/* greek-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFWZ0bbck.woff2) format("woff2");
  unicode-range: U+1F00-1FFF;
}

/* greek */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFVp0bbck.woff2) format("woff2");
  unicode-range: U+0370-03FF;
}

/* vietnamese */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFWp0bbck.woff2) format("woff2");
  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
}

/* latin-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFW50bbck.woff2) format("woff2");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

/* latin */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFVZ0b.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

/* cyrillic-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOX-hpOqc.woff2) format("woff2");
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}

/* cyrillic */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOVuhpOqc.woff2) format("woff2");
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}

/* greek-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOXuhpOqc.woff2) format("woff2");
  unicode-range: U+1F00-1FFF;
}

/* greek */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOUehpOqc.woff2) format("woff2");
  unicode-range: U+0370-03FF;
}

/* vietnamese */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOXehpOqc.woff2) format("woff2");
  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
}

/* latin-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOXOhpOqc.woff2) format("woff2");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

/* latin */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOUuhp.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

*::selection {
  background-color: rgba(53, 207, 212, 0.3);
}

body {
  position: relative;
}

svg.filter {
  position: absolute;
  z-index: -1;
  visibility: hidden;
}

.icon {
  display: block;
  width: 100%;
  height: 100%;
  transition: all .3s ease-in-out;
}

.heart #heart_border {
  fill: white;
}

.heart #heart_inside {
  fill: transparent;
}

.heart--fill-green #heart_inside {
  fill: #004d00;
}

.heart--fill-white #heart_inside {
  fill: white;
}

.heart--inverse #heart_border {
  fill: #62ab03;
}

.heart--inverse.heart--fill-white #heart_inside {
  fill: #62ab03;
}

.arrow {
  cursor: pointer;
  transform: rotate(0);
  transition: transform .3s ease-in-out;
}

/* --------------------------------

Title: Radio Switch
Descr: Custom radio toggle

-------------------------------- */
:root {
  --radio-switch-width: 186px;
  --radio-switch-height: 46px;
  --radio-switch-padding: 3px;
  --radio-switch-radius: 50em;
  --radio-switch-animation-duration: 0.3s;
}

.radio-switch {
  position: relative;
  display: inline-block;
  display: inline-flex;
  padding: var(--radio-switch-padding);
  border-radius: calc(var(--radio-switch-radius) * 1.4);
  border: 1px solid #e5e5e5;
}

.radio-switch:focus-within, .radio-switch:active {
  box-shadow: 0 0 0 1px #e5e5e5;
}

.radio-switch__item {
  position: relative;
  display: inline-block;
  height: calc(var(--radio-switch-height) - 2*var(--radio-switch-padding));
  width: calc(var(--radio-switch-width)*0.5 -  var(--radio-switch-padding));
}

.radio-switch__label {
  position: relative;
  z-index: 2;
  display: block;
  border-radius: var(--radio-switch-radius);
  line-height: calc(var(--radio-switch-height) - 2*var(--radio-switch-padding));
  text-align: center;
  cursor: pointer;
  font-size: var(--text-sm);
  user-select: none;
  transition: all var(--radio-switch-animation-duration);
}

.radio-switch__input:checked ~ .radio-switch__label {
  color: #ffffff;
}

.radio-switch__input:focus ~ .radio-switch__label {
  background-color: #14a3e9;
}

.radio-switch__label :not(*):focus-within,
.radio-switch__input:focus ~ .radio-switch__label {
  background-color: transparent;
}

.radio-switch__marker {
  position: absolute;
  z-index: 1;
  top: 0;
  left: -100%;
  border-radius: var(--radio-switch-radius);
  background: linear-gradient(45deg, #35cfd4, #14a1e6);
  height: calc(var(--radio-switch-height) - 2*var(--radio-switch-padding));
  width: calc(var(--radio-switch-width)*0.5 -  var(--radio-switch-padding));
  transition: transform var(--radio-switch-animation-duration);
}

.radio-switch__input:checked ~ .radio-switch__marker {
  transform: translateX(100%);
}

.cookie {
  position: fixed;
  display: flex;
  flex-wrap: wrap;
  bottom: 1em;
  left: 2em;
  width: 80%;
  background: white;
  border-radius: 2px;
  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);
  z-index: 4;
}

@media (min-width: 1200px) {
  .cookie {
    bottom: 2em;
    width: 30%;
  }
}

@keyframes collapse {
  0% {
    overflow: visible;
    width: 80%;
    height: auto;
    z-index: 4;
    opacity: 1;
  }
  100% {
    overflow: visible;
    width: 80%;
    height: auto;
    z-index: 4;
    opacity: 0;
  }
}

@keyframes collapseLarge {
  0% {
    overflow: visible;
    width: 30%;
    height: auto;
    z-index: 4;
    opacity: 1;
  }
  100% {
    overflow: visible;
    width: 30%;
    height: auto;
    z-index: 4;
    opacity: 0;
  }
}

.cookie--no-visible {
  animation: collapse .3s ease-in-out 1;
  overflow: hidden;
  width: 0;
  height: 0;
}

@media (min-width: 1200px) {
  .cookie--no-visible {
    animation: collapseLarge .3s ease-in-out 1;
  }
}

.cookie__img {
  position: absolute;
  top: -2em;
  left: -2em;
  margin: auto;
  width: 4em;
  height: 4em;
}

.cookie__message {
  width: 100%;
  margin: 1em 2em .5em;
}

.cookie__message h1, .cookie__message p {
  margin-bottom: .25em;
}

.cookie__btn {
  width: 100%;
  margin-bottom: .5em;
  display: flex;
  justify-content: center;
}

.cookie-overlay {
  position: fixed;
  z-index: 3;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.75);
}

@keyframes hidden {
  0% {
    height: 100%;
    width: 100%;
    background-color: rgba(0, 0, 0, 0.75);
    z-index: 3;
  }
  100% {
    height: 100%;
    width: 100%;
    background-color: rgba(0, 0, 0, 0);
    z-index: 3;
  }
}

.cookie-overlay--no-visible {
  animation: hidden .3s ease-in-out 1;
  z-index: -1;
  width: 0;
  height: 0;
}

.blur-up {
  filter: blur(8px);
  transition: filter 600ms;
}

.blur-up.lazyloading {
  filter: blur(5px);
}

.blur-up.lazyloaded {
  filter: blur(0);
}

.form {
  width: 95%;
  margin: auto;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

@media (min-width: 1200px) {
  .form {
    width: 80%;
  }
}

.form__item {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.form__item__label {
  width: 100%;
  margin: 0 1em;
  padding: .5em 0;
  justify-content: center;
  display: flex;
}

@media (min-width: 1200px) {
  .form__item__label {
    width: 30%;
    margin: 0 2em;
    justify-content: left;
  }
}

.form__item__input {
  width: 90%;
}

@media (min-width: 1200px) {
  .form__item__input {
    width: 40%;
  }
}

.form__item__input--center {
  display: flex;
  justify-content: center;
}

@media (min-width: 1200px) {
  .form__item__input--center {
    justify-content: left;
  }
}

.header {
  position: fixed;
  width: 98%;
  margin: 0 1%;
  display: flex;
  justify-content: space-between;
  z-index: 3;
  border-bottom-left-radius: 3px;
  border-bottom-right-radius: 3px;
}

.header__logo {
  margin: .25em 1em;
  z-index: 3;
}

.header__logo img {
  height: 3em;
  width: auto;
}

.header__nav {
  display: flex;
  flex-wrap: wrap;
  position: absolute;
  width: 100%;
  background: linear-gradient(to top, rgba(20, 161, 230, 0.8), #14a1e6, #23b6de);
  z-index: 2;
  border-radius: 0 0 2px 2px;
  color: white;
  top: 3.5em;
  transform: rotateX(-100deg);
  transform-origin: top;
  opacity: 0;
}

.header__nav__menu {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  width: 100%;
  padding: 0 2.5%;
}

@media (min-width: 1200px) {
  .header__nav__menu {
    padding: 0 5%;
  }
}

.header__nav__menu__column {
  width: 50%;
  position: relative;
  text-align: center;
}

@media (min-width: 1200px) {
  .header__nav__menu__column {
    width: 24%;
    text-align: left;
  }
  .header__nav__menu__column::after {
    content: '';
    position: absolute;
    background-color: white;
    height: 50%;
    width: 1px;
    right: 0;
    top: 25%;
  }
  .header__nav__menu__column:last-child::after {
    display: none;
  }
  .header__nav__menu__column:last-child {
    margin-top: 2em;
  }
}

.header__nav__menu__column:nth-child(1) {
  order: 1;
}

.header__nav__menu__column:nth-child(2) {
  order: 2;
}

@media (min-width: 1200px) {
  .header__nav__menu__column:nth-child(2) {
    order: 3;
  }
}

.header__nav__menu__column:nth-child(3) {
  order: 3;
}

@media (min-width: 1200px) {
  .header__nav__menu__column:nth-child(3) {
    order: 2;
  }
}

.header__nav__menu__column:nth-child(4) {
  order: 4;
}

.header__nav__menu__column__title a {
  color: white;
  margin: 0;
}

@media (min-width: 1200px) {
  .header__nav__menu__column__title a {
    margin: 0 0 1em;
  }
}

.header__nav__menu__column__list {
  list-style: none;
  margin: 0 0 0 1em;
}

.header__nav__menu__column__list__link {
  margin: .5em auto;
}

.header__nav__menu__column__list__link a {
  color: white;
}

.header__nav__menu__column__list__link span {
  padding: 3px;
  border-radius: 5px;
  margin-left: .8em;
  font-size: 80%;
  background: linear-gradient(#f9c90d, #f96e10);
}

.header__menu-icon .menu-icon-wrapper {
  margin: 1em 2em;
}

.headroom {
  background: linear-gradient(to top, #35cfd4, #14a1e6);
  background-size: 100% 200%;
  transition: all .3s ease-in-out;
  transition-delay: .3s;
  background-position: 100% 200%;
  background-repeat: no-repeat;
}

.headroom--pinned .headroom--top {
  position: relative;
  background-position: 100% 200%;
}

.headroom--pinned {
  position: fixed;
  transform: translateY(0%);
}

.headroom--unpinned {
  position: fixed;
  transform: translateY(-100%);
}

.header--pinned, .headroom--not-top.headroom--pinned {
  background-position: 100% 0;
}

/* Menu icon styles */
.menu-icon-wrapper {
  position: relative;
  display: inline-block;
  width: 34px;
  height: 34px;
  margin: 2em;
  pointer-events: none;
  transition: 0.1s;
}

.menu-icon-wrapper svg {
  position: absolute;
  top: -33px;
  left: -33px;
  -webkit-transform: scale(0.1);
  -ms-transform: scale(0.1);
  transform: scale(0.1);
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.menu-icon-wrapper svg path {
  stroke: #fff;
  stroke-width: 30px;
  stroke-linecap: round;
  stroke-linejoin: round;
  fill: transparent;
}

.menu-icon-wrapper .menu-icon-trigger {
  position: relative;
  width: 100%;
  height: 100%;
  cursor: pointer;
  pointer-events: auto;
  background: none;
  border: none;
  margin: 0;
  padding: 0;
}

.menu-icon-wrapper .menu-icon-trigger:hover,
.menu-icon-wrapper .menu-icon-trigger:focus {
  outline: none;
}

.menu-icon-wrapper {
  right: 0;
  top: 0;
  position: fixed;
  z-index: 100;
}

/* ----------------------------------------------
 * Generated by Animista on 2019-6-6 16:43:40
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */
/**
 * ----------------------------------------
 * animation swing-in-top-bck
 * ----------------------------------------
 */
@keyframes swing-in-top-bck {
  0% {
    transform: rotateX(70deg);
    transform-origin: top;
    opacity: 0;
  }
  100% {
    transform: rotateX(0deg);
    transform-origin: top;
    opacity: 1;
  }
}

@keyframes swing-out-top-bck {
  0% {
    transform: rotateX(0deg);
    transform-origin: top;
    opacity: 1;
  }
  100% {
    transform: rotateX(-90deg);
    transform-origin: top;
    opacity: 0;
  }
}

.swing-in-top-bck {
  animation: swing-in-top-bck 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;
  animation-delay: .6s;
}

.swing-out-top-bck {
  animation: swing-out-top-bck 0.25s cubic-bezier(0.6, -0.28, 0.735, 0.045) both;
}

.hero {
  height: 75vh;
  overflow: hidden;
  position: relative;
  display: flex;
  align-items: center;
}

.hero__image {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.hero__image img {
  width: 100%;
  height: 100%;
}

.hero__content {
  width: 90%;
  margin: 2em;
  z-index: 1;
  position: relative;
  color: #ffffff;
}

@media (min-width: 1200px) {
  .hero__content {
    width: 50%;
  }
}

.hero__content__text {
  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.4);
}

@media (min-width: 1200px) {
  .hero__content__text {
    font-size: 3em;
  }
}

.banner {
  height: 75vh;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

.banner__image {
  position: absolute;
  width: 100%;
  height: 100%;
}

.banner__content {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.banner__content__title {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  width: 100%;
  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.25);
}

.banner__content__title h2, .banner__content__title h3 {
  text-align: center;
  color: white;
  margin: .5em;
  padding: 0;
}

@media (min-width: 1200px) {
  .banner__content__title h2, .banner__content__title h3 {
    width: 75%;
  }
}

.banner__content__title h2 {
  font-size: 2.5em;
}

.banner__content__title h3 {
  font-size: 1.5em;
}

.introduction {
  position: relative;
  width: 100%;
}

.introduction__content {
  width: 95%;
  margin: 1em auto;
}

@media (min-width: 1200px) {
  .introduction__content {
    margin: auto;
    width: 50%;
  }
}

nav.breadcrumb {
  position: relative;
  width: 95%;
  margin: 1em auto;
  display: flex;
  align-items: center;
}

@media (min-width: 1200px) {
  nav.breadcrumb {
    width: 75%;
    margin: 1em auto 0 auto;
  }
}

nav.breadcrumb ul {
  list-style: none;
  margin: 0;
}

nav.breadcrumb ul li {
  display: inline;
  margin-right: 1em;
  font-family: "Baloo Bhaina", cursive;
}

nav.breadcrumb ul li::after {
  content: '\\';
  position: absolute;
  margin: .2em 0 0 .2em;
}

nav.breadcrumb ul li:last-child::after {
  display: none;
}

nav.breadcrumb ul li a {
  text-decoration: underline;
}

.section {
  width: 100%;
  position: relative;
  background-color: white;
}

.section__title {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  text-align: center;
}

.section__title__highlight {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: 600;
  flex-wrap: wrap;
}

@media (min-width: 1200px) {
  .section__title__highlight {
    flex-wrap: nowrap;
  }
}

.section__title__highlight h2 {
  font-size: 2.5em;
  margin: 0 0 .25em;
}

@media (min-width: 1200px) {
  .section__title__highlight h2 {
    margin: 0 0 1em;
  }
}

.section__title__highlight::before, .section__title__highlight::after {
  content: '';
  position: relative;
  height: 4px;
  border-radius: 2px;
  width: 70%;
  margin: 0 .5em;
}

@media (min-width: 1200px) {
  .section__title__highlight::before, .section__title__highlight::after {
    width: 8em;
  }
}

.section__title__highlight:before {
  background: linear-gradient(45deg, #35cfd4, #14a1e6);
  display: none;
}

@media (min-width: 1200px) {
  .section__title__highlight:before {
    display: block;
  }
}

.section__title__highlight::after {
  background: linear-gradient(-45deg, #35cfd4, #14a1e6);
}

.section__title__highlight p {
  width: 50%;
}

.section__title__highlight--orange:before {
  background: linear-gradient(45deg, #f9c90d, #f96e10);
}

.section__title__highlight--orange::after {
  background: linear-gradient(-45deg, #f9c90d, #f96e10);
}

.section__title__highlight--green:before {
  background: linear-gradient(45deg, #62ab03, #004d00);
}

.section__title__highlight--green::after {
  background: linear-gradient(-45deg, #62ab03, #004d00);
}

.section__title__highlight--no-decorator::before, .section__title__highlight--no-decorator::after {
  display: none;
}

.section__title__description {
  position: relative;
  top: 1em;
  width: 95%;
  text-align: center;
}

@media (min-width: 1200px) {
  .section__title__description {
    top: -2em;
    width: 50%;
  }
}

.feature {
  display: flex;
  width: 100%;
  position: relative;
  flex-wrap: wrap;
  justify-content: space-around;
  margin: 2em 0;
}

.feature:first-child {
  margin-top: auto;
}

.feature:last-child {
  margin-bottom: 0;
}

.feature__text {
  order: 2;
  width: 100%;
  padding: 1em;
}

@media (min-width: 1200px) {
  .feature__text {
    order: 1;
    width: 33%;
    padding: 1em 1em;
    overflow-y: auto;
    max-height: 80vh;
  }
}

.feature__text__title {
  width: 100%;
}

.feature__text__title h2 {
  font-size: 2em;
}

.feature__image {
  order: 1;
  width: 100%;
  position: relative;
}

@media (min-width: 1200px) {
  .feature__image {
    order: 2;
    width: 60%;
  }
}

.feature__image img {
  max-height: 80vh;
  min-height: 50vh;
}

@media (min-width: 1200px) {
  .feature__image img {
    min-height: auto;
  }
}

.feature--inverse .feature__text {
  order: 2;
}

.feature--inverse .feature__image {
  order: 1;
}

.divider {
  width: 100%;
  margin: 3em 0;
  display: flex;
  justify-content: center;
}

.divider::before {
  content: '';
  position: relative;
  width: 80%;
  height: 2px;
  border-radius: 2px;
  background: white;
}

.top_destinations {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.top_destinations__places {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

@media (min-width: 1200px) {
  .top_destinations__places {
    width: 90%;
  }
}

.top_destinations__places__place {
  width: 100%;
  margin: 1.5em 0;
  max-height: 75vh;
  min-height: 50vh;
  position: relative;
}

@media (min-width: 1200px) {
  .top_destinations__places__place {
    margin: 3em 0;
    width: 48%;
    min-height: auto;
  }
}

@media (min-width: 1600px) {
  .top_destinations__places__place {
    margin: 3em 0;
    width: 23%;
  }
}

.top_destinations__places__place:hover img {
  transform: scale(1.05);
}

.top_destinations__places__place::before {
  content: '';
  width: 100%;
  height: 100%;
  position: absolute;
  z-index: 0;
  left: -10px;
  top: -10px;
  background: linear-gradient(45deg, #35cfd4, #14a1e6 20%, transparent);
}

@media (min-width: 1200px) {
  .top_destinations__places__place::before {
    left: -15px;
    top: -15px;
  }
}

.top_destinations__places__place--orange::before {
  background: linear-gradient(45deg, #f9c90d, #f96e10 20%, transparent);
}

.top_destinations__places__place--green::before {
  background: linear-gradient(45deg, #62ab03, #004d00 20%, transparent);
}

.top_destinations__places__place__image {
  overflow: hidden;
  position: relative;
  height: 100%;
}

@media (min-width: 1600px) {
  .top_destinations__places__place__image {
    min-height: 60vh;
  }
}

.top_destinations__places__place__image > div {
  width: 100%;
  height: 100%;
}

.top_destinations__places__place__image img {
  transition: transform .5s ease-in-out;
  height: 100%;
}

@media (min-width: 1600px) {
  .top_destinations__places__place__image img {
    width: auto;
  }
}

.top_destinations__places__place__text {
  position: absolute;
  bottom: 0;
  width: 90%;
  margin: 0 5%;
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  text-align: center;
  z-index: 2;
  text-shadow: 3px 3px 10px rgba(0, 0, 0, 0.5);
}

@media (min-width: 1200px) {
  .top_destinations__places__place__text {
    bottom: 1em;
  }
}

.top_destinations__places__place__text span {
  display: block;
  color: white;
  font-family: "Baloo Bhaina", cursive;
  font-size: 2em;
}

.top_destinations__places__place__text p {
  color: white;
  font-weight: bold;
}

.activity {
  width: 100%;
  margin: .5em .5em;
  position: relative;
}

@media (min-width: 1200px) {
  .activity {
    width: 31%;
  }
}

.activity:hover {
  text-decoration: none;
}

.activity:hover img {
  transform: scale(1.1);
}

.activity__image {
  height: 40vh;
  overflow: hidden;
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);
  border-radius: 2px;
  position: relative;
}

.activity__image__tag {
  background: linear-gradient(45deg, #35cfd4, #14a1e6);
  color: white;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  padding: .5em 3.5em;
  width: auto;
  transform: translateY(100%) translateX(-30%) rotate(-45deg);
  transform-origin: 50% 0;
}

.activity__image img {
  width: 100%;
  height: 100%;
  transition: transform .3s ease-in-out;
}

.activity__content {
  position: relative;
  top: -.75em;
  background-color: white;
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);
  padding: .5em;
  width: 95%;
  margin: auto;
  border-radius: 2px;
}

@media (min-width: 1200px) {
  .activity__content {
    padding: 1em;
    width: 90%;
  }
}

.activity__content__price {
  display: flex;
  border-radius: 50%;
  background: linear-gradient(45deg, #35cfd4, #14a1e6);
  transform: translate(50%, -50%);
  top: -.5em;
  position: absolute;
  right: .5em;
  width: 3.75em;
  height: 3.75em;
}

.activity__content__price span {
  text-align: center;
  margin: auto;
  color: white;
  font-weight: 700;
  font-size: .95em;
}

.activity__content__actions {
  position: absolute;
  width: auto;
  z-index: 1;
}

.activity__content__actions__add {
  width: 2em;
  height: 2em;
  cursor: pointer;
}

.activity__content__actions__add::before {
  position: absolute;
  content: '';
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
}

.activity__content__title {
  text-align: center;
  width: 80%;
  margin: auto;
}

.activity__content__description {
  text-align: center;
}

.activity__content__description p {
  margin: .25em;
}

@keyframes loading_dots_animation {
  50% {
    transform: scale(1);
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes loading_dots_animation__wait {
  50% {
    opacity: 1;
  }
  100% {
    opacity: 1;
  }
}

.loading_dots {
  height: 2em;
  margin: .5em;
  width: auto;
  box-sizing: border-box;
  opacity: 0;
  transition: opacity .3s ease-in-out;
}

.loading_dots * {
  box-sizing: border-box;
}

.loading_dots .dot {
  width: 1.5em;
  height: 1.5em;
  margin: 0 calc(1.5em / 2);
  border: calc(1.5em / 5) solid #35cfd4;
  border-radius: 50%;
  float: left;
  transform: scale(0);
  animation: loading_dots_animation 1s ease infinite 0s;
}

.loading_dots .dot:nth-child(1) {
  animation-delay: calc(300ms * 1);
}

.loading_dots .dot:nth-child(2) {
  animation-delay: calc(300ms * 2);
}

.loading_dots .dot:nth-child(3) {
  animation-delay: calc(300ms * 3);
}

.loading_dots--visible {
  opacity: 1 !important;
}

@keyframes showBar {
  0% {
    transform: translateY(calc( 100% - 3em));
  }
  40% {
    transform: translateY(0%);
  }
  60% {
    transform: translateY(0%);
  }
  100% {
    transform: translateY(calc( 100% - 3em));
  }
}

@keyframes showActivityItem {
  0% {
    transform: translateY(-50%);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

.cart_bar {
  width: 100vw;
  position: fixed;
  bottom: 0;
  border-top-left-radius: 2px;
  border-bottom-left-radius: 2px;
  margin: auto;
  z-index: 2;
  padding: .25em;
  background: linear-gradient(45deg, rgba(53, 207, 212, 0.95), rgba(20, 161, 230, 0.95));
  color: white;
  border: 2px solid rgba(255, 255, 255, 0.9);
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
  transform: translateY(calc( 100% - 3em));
  transition: transform .3s ease-in-out;
}

@media (min-width: 1200px) {
  .cart_bar {
    width: 25vw;
    right: 2em;
  }
}

.cart_bar:hover {
  transform: translateY(0);
}

.cart_bar--visible {
  animation: showBar 3.5s ease-in-out 1;
}

.cart_bar__title {
  margin: .25em auto;
  text-align: center;
  border-bottom: 1px solid white;
  width: 80%;
  display: flex;
  justify-content: center;
}

.cart_bar__title__icon {
  width: 2em;
  height: 2em;
}

.cart_bar__title h4 {
  margin: .5em 1em;
  padding: 0;
}

.cart_bar__title span {
  padding: .5em;
  border-radius: 50%;
  height: 2em;
  width: 2em;
  background: linear-gradient(#f9c90d, #f96e10);
  font-family: "Baloo Bhaina", cursive;
}

.cart_bar__content {
  padding: 1em;
  width: 100%;
}

.cart_bar__content__activities {
  max-height: 30vh;
  position: relative;
  overflow-y: auto;
}

.cart_bar__content__activities__item {
  width: 80%;
  margin: auto;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  animation: .3s ease-in 1 showActivityItem;
}

.cart_bar__content__activities__item__prototype {
  display: none;
}

.cart_bar__content__activities__item img {
  width: 2em;
  height: 2em;
  display: inline;
}

.cart_bar__content__activities__item h5 {
  display: inline;
  margin-left: 1em;
}

.cart_bar__content__activities__item__drop {
  position: absolute;
  right: 3em;
  width: 1.25em;
  height: 1.25em;
  cursor: pointer;
}

.cart_bar__content__activities__item__drop:before {
  content: '';
  position: absolute;
  z-index: 1;
  height: 100%;
  width: 100%;
}

.cart_bar__content__activities__item__drop svg {
  width: 100%;
  height: 100%;
}

.cart_bar__content__text {
  text-align: center;
  width: 100%;
  margin: .5em 0;
  color: white;
}

.cart_bar__content__text p {
  margin: 0;
}

.cart_bar__content__button {
  width: 100%;
  display: flex;
  justify-content: space-around;
}

.cart_bar__content__button a {
  margin: 0 .25em;
  color: white;
}

.cart_bar [data-show='empty'] {
  visibility: hidden;
  position: relative;
  height: 0;
  width: 0;
  z-index: -1;
}

.cart_bar--initial [data-show='no-empty'] {
  visibility: hidden;
  position: relative;
  height: 0;
  width: 0;
  z-index: -1;
}

.cart_bar--initial [data-show='empty'] {
  visibility: visible;
  height: auto;
  width: auto;
  z-index: auto;
}

.footer {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  position: relative;
  background: linear-gradient(45deg, #35cfd4, #14a1e6);
  color: #ffffff;
}

.footer__banner {
  width: 100%;
  height: 75vh;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  position: relative;
}

.footer__banner__image {
  position: absolute;
  width: 100%;
  height: 100%;
}

.footer__banner__content {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.footer__banner__content__titles {
  text-align: center;
  width: 100%;
  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.25);
}

.footer__banner__content__titles h2, .footer__banner__content__titles h3 {
  color: white;
  margin: .5em;
  padding: 0;
}

.footer__banner__content__titles h2 {
  font-size: 2.5em;
}

.footer__banner__content__titles h3 {
  font-size: 1.5em;
}

.footer__content {
  position: relative;
  z-index: 1;
  padding: .5em;
  width: 90%;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

@media (min-width: 1200px) {
  .footer__content {
    padding: 2em 2em 3.5em;
  }
}

.footer__content__links {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

.footer__content__links__column {
  width: 50%;
}

@media (min-width: 1200px) {
  .footer__content__links__column {
    width: 23%;
  }
}

.footer__content__links__column:nth-child(1) {
  order: 1;
}

.footer__content__links__column:nth-child(2) {
  order: 2;
}

@media (min-width: 1200px) {
  .footer__content__links__column:nth-child(2) {
    order: 3;
  }
}

.footer__content__links__column:nth-child(3) {
  order: 3;
}

@media (min-width: 1200px) {
  .footer__content__links__column:nth-child(3) {
    order: 2;
  }
}

.footer__content__links__column:nth-child(4) {
  order: 4;
}

.footer__content__links__column__title a {
  color: white;
}

.footer__content__links__column ul {
  margin-left: .25em;
}

.footer__content__links__column ul li {
  list-style: none;
  margin: .25em 0;
}

.footer__content__links__column ul li a {
  color: white;
}

.footer__content__infos {
  width: 100%;
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}

.footer__content__infos__column {
  width: 48%;
}

@media (min-width: 1200px) {
  .footer__content__infos__column {
    width: 25%;
  }
}

.footer__content__infos__column:last-child {
  width: 100%;
}

@media (min-width: 1200px) {
  .footer__content__infos__column:last-child {
    width: 25%;
  }
}

.footer__content__agb {
  display: flex;
  width: 100%;
  justify-content: center;
}

.footer__content__agb a {
  color: white;
}

.footer__content__copyright {
  width: auto;
}

.footer__content__made-by {
  width: auto;
}

.footer__content__made-by a {
  color: white;
  text-decoration: underline;
  font-weight: bold;
}

.footer__content__social-networks {
  width: auto;
  margin: auto 2em;
}

.footer__content__social-networks ul {
  margin: 0;
}

.footer__content__social-networks ul li {
  margin: 0 .25em;
  display: inline-block;
  list-style: none;
}

.footer__content__social-networks ul li a {
  display: inline-block;
}

.footer__content__social-networks ul li a svg {
  width: 2em;
  height: 2em;
}

.footer__background-image {
  position: absolute;
  bottom: 0;
  z-index: 0;
}

.travel-options {
  margin-bottom: 2em;
  position: relative;
  width: 100%;
  overflow: hidden;
}

.travel-options__grid {
  display: grid;
  grid-template-areas: "img1 img6"  "img2 img6"  "img9 img9"  "img10 img10"  "img3 img3"  "img4 img11"  "img5 img7 "  "img5 img8"  "img12 img14"  "img13 img14";
  grid-template-rows: 33vh 33vh 33vh 33vh 33vh 33vh 33vh 33vh 33vh 33vh;
  grid-template-columns: 1fr 1fr;
  width: 100%;
  grid-gap: .15em;
}

@media (min-width: 1200px) {
  .travel-options__grid {
    grid-template-areas: "img1 img6 img9 img9"  "img2 img6 img10 img10"  "img3 img3 img3 img3"  "img4 img4 img11 img11"  "img5 img7 img12 img14"  "img5 img8 img13 img14";
    grid-template-rows: 40vh 40vh 40vh 40vh;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    width: 100%;
  }
}

.travel-options__grid__item {
  height: 100%;
  width: 100%;
  overflow: hidden;
}

.travel-options__grid__item img {
  width: 100%;
  height: 100%;
}

.travel-options__grid_overlay {
  display: grid;
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  grid-template-areas: "section1 section1"  "section1 section1"  "section2 section2"  "section2 section2"  "section3 section3"  "section3 section3"  "section4 section4"  "section4 section4"  "section5 section5"  "section5 section5";
  grid-template-rows: 33vh 33vh 33vh 33vh 33vh 33vh 33vh 33vh 33vh 33vh;
  grid-template-columns: 1fr 1fr;
  grid-gap: .15em;
}

@media (min-width: 1200px) {
  .travel-options__grid_overlay {
    grid-template-areas: "section1 section1 section2 section2"  "section1 section1 section2 section2"  "section3 section3 section3 section3"  "section3 section3 section3 section3"  "section4 section4 section5 section5"  "section4 section4 section5 section5";
    grid-template-rows: 40vh 40vh 40vh 40vh;
    grid-template-columns: 1fr 1fr 1fr 1fr;
  }
}

.travel-options__grid_overlay a {
  text-decoration: none;
  color: white;
  font-size: 3em;
  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.25);
}

.travel-options__grid_overlay a:hover > div {
  opacity: 1;
}

.travel-options__grid_overlay a div {
  height: 100%;
  width: 100%;
  opacity: 0;
  background-color: rgba(53, 207, 212, 0.5);
  transition: opacity .3s ease-in-out;
  display: flex;
  justify-content: center;
  align-items: center;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/