/* oriya */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBIg58qhE.woff2) format("woff2");
  unicode-range: U+0964-0965, U+0B01-0B77, U+200C-200D, U+20B9, U+25CC;
}

/* vietnamese */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBNA58qhE.woff2) format("woff2");
  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
}

/* latin-ext */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBNQ58qhE.woff2) format("woff2");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

/* latin */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBOw58.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

/* cyrillic-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFWJ0bbck.woff2) format("woff2");
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}

/* cyrillic */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFUZ0bbck.woff2) format("woff2");
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}

/* greek-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFWZ0bbck.woff2) format("woff2");
  unicode-range: U+1F00-1FFF;
}

/* greek */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFVp0bbck.woff2) format("woff2");
  unicode-range: U+0370-03FF;
}

/* vietnamese */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFWp0bbck.woff2) format("woff2");
  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
}

/* latin-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFW50bbck.woff2) format("woff2");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

/* latin */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFVZ0b.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

/* cyrillic-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOX-hpOqc.woff2) format("woff2");
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}

/* cyrillic */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOVuhpOqc.woff2) format("woff2");
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}

/* greek-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOXuhpOqc.woff2) format("woff2");
  unicode-range: U+1F00-1FFF;
}

/* greek */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOUehpOqc.woff2) format("woff2");
  unicode-range: U+0370-03FF;
}

/* vietnamese */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOXehpOqc.woff2) format("woff2");
  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
}

/* latin-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOXOhpOqc.woff2) format("woff2");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

/* latin */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOUuhp.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

/**
 * @section Normalize.css
 * Normalize.css base with custom code.
 * Additional normalize styles incorporated throughout components.
 * @link http://necolas.github.io/normalize.css/
 */
/**
 * Remove the tap delay in webkit
 * @link https://medium.com/@adactio/delay-a9df9edceef3#.7dmbl3xow
 */
a,
button,
input,
select,
textarea,
label,
summary {
  touch-action: manipulation;
}

/**
 * Add box sizing to everything
 * @link http://www.paulirish.com/2012/box-sizing-border-box-ftw/
 */
*,
*:before,
*:after {
  box-sizing: border-box;
}

/**
 * 1. Force scrollbar display to prevent jumping on pages.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  overflow-y: scroll;
  /* 1 */
  text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
cite,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/**
 * Correct `inline-block` display not defined in IE 8/9.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
}

/**
 * Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Prevent img and video elements from spilling outside of the page on smaller screens.
 */
img,
video {
  width: 100%;
  max-width: 100%;
  height: 100%;
  object-fit: cover;
}

/**
 * Prevent iframe, object, and embed elements from spilling outside of the page on smaller screens.
 * height: auto causes iframes to smush, so it's omitted here.
 */
iframe,
object,
embed {
  max-width: 100%;
}

/**
 * Hide the template element in IE, Safari, and Firefox < 22.
 */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Prevents IE from making scaled images look like crap
 */
img {
  border-style: none;
  /* 1 */
  -ms-interpolation-mode: bicubic;
  /* 2 */
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/**
 * Address inconsistent margin.
 */
figure {
  margin: 0;
}

/**
 * @workaround Remove focus from <main> element when using tabindex="-1" hack for skipnav link
 * @link https://code.google.com/p/chromium/issues/detail?id=37721
 */
[tabindex="-1"]:focus {
  outline: none;
}

/**
 * @section Grid
 * Structure and layout
 */
/**
 * Base grid styles: single column
 */
.container {
  margin-left: auto;
  margin-right: auto;
  max-width: 80em;
  width: 88%;
}

.row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  margin-left: -1.4%;
  margin-right: -1.4%;
}

.no-lat-margins {
  margin-left: 0 !important;
  margin-right: 0 !important;
}

/**
 * Alignment
 */
/* Float content to the top */
.row-top {
  align-items: flex-start;
}

/* Float content in the middle */
.row-middle {
  align-items: center;
}

/* Push content to the bottom */
.row-bottom {
  align-items: flex-end;
}

/* Move content to the start of the row */
.row-start {
  justify-content: flex-start;
}

/* Float content in the center of the row */
.row-center {
  justify-content: center;
}

/* Move content to the end of the row */
.row-end {
  justify-content: flex-end;
}

/* Add even spacing around each item */
.row-around {
  justify-content: space-around;
}

/* Add even spacing between items */
.row-between {
  justify-content: space-between;
}

/* Reverse content order */
.row-reverse {
  flex-direction: row-reverse;
}

.grid-tenth, .grid-p16, .grid-fifth, .grid-fourth, .grid-p28, .grid-three-tenth, .grid-third, .grid-four-tenth, .grid-half, .grid-two-thirds, .grid-three-fourths, .grid-full, .grid-auto {
  flex-basis: 100%;
  margin-left: 1.4%;
  margin-right: 1.4%;
}

/**
 * Add columns to grid on bigger screens
 */
@media (min-width: 20em) {
  .row.row-start-xsmall {
    flex-wrap: nowrap;
  }
  .row-wrap.row-start-xsmall {
    flex-wrap: wrap;
  }
  .row-wrap.row-start-xsmall .grid-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-p16 {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-fifth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-fourth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-p28 {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-three-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-third {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-four-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-half {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-two-thirds {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-three-fourths {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-full {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-xsmall .grid-auto {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-start-xsmall .grid-auto {
    flex-basis: auto;
    flex-grow: 1;
  }
  .row-start-xsmall .grid-tenth {
    flex-basis: 10%;
    max-width: 10%;
  }
  .row-start-xsmall .grid-p16 {
    flex-basis: 16%;
    max-width: 16%;
  }
  .row-start-xsmall .grid-fifth {
    flex-basis: 20%;
    max-width: 20%;
  }
  .row-start-xsmall .grid-fourth {
    flex-basis: 25%;
    max-width: 25%;
  }
  .row-start-xsmall .grid-p28 {
    flex-basis: 28%;
    max-width: 28%;
  }
  .row-start-xsmall .grid-three-tenth {
    flex-basis: 30%;
    max-width: 30%;
  }
  .row-start-xsmall .grid-third {
    flex-basis: 33.33333%;
    max-width: 33.33333%;
  }
  .row-start-xsmall .grid-four-tenth {
    flex-basis: 40%;
    max-width: 40%;
  }
  .row-start-xsmall .grid-half {
    flex-basis: 50%;
    max-width: 50%;
  }
  .row-start-xsmall .grid-two-thirds {
    flex-basis: 66.66667%;
    max-width: 66.66667%;
  }
  .row-start-xsmall .grid-three-fourths {
    flex-basis: 75%;
    max-width: 75%;
  }
  .row-start-xsmall .grid-full {
    flex-basis: 100%;
    max-width: 100%;
  }
  .row-start-xsmall .grid-first {
    -webkit-box-ordinal-group: 0;
    order: -1;
  }
  .row-start-xsmall .grid-last {
    -webkit-box-ordinal-group: 2;
    order: 1;
  }
}

@media (min-width: 30em) {
  .row.row-start-small {
    flex-wrap: nowrap;
  }
  .row-wrap.row-start-small {
    flex-wrap: wrap;
  }
  .row-wrap.row-start-small .grid-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-p16 {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-fifth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-fourth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-p28 {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-three-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-third {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-four-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-half {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-two-thirds {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-three-fourths {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-full {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap.row-start-small .grid-auto {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-start-small .grid-auto {
    flex-basis: auto;
    flex-grow: 1;
  }
  .row-start-small .grid-tenth {
    flex-basis: 10%;
    max-width: 10%;
  }
  .row-start-small .grid-p16 {
    flex-basis: 16%;
    max-width: 16%;
  }
  .row-start-small .grid-fifth {
    flex-basis: 20%;
    max-width: 20%;
  }
  .row-start-small .grid-fourth {
    flex-basis: 25%;
    max-width: 25%;
  }
  .row-start-small .grid-p28 {
    flex-basis: 28%;
    max-width: 28%;
  }
  .row-start-small .grid-three-tenth {
    flex-basis: 30%;
    max-width: 30%;
  }
  .row-start-small .grid-third {
    flex-basis: 33.33333%;
    max-width: 33.33333%;
  }
  .row-start-small .grid-four-tenth {
    flex-basis: 40%;
    max-width: 40%;
  }
  .row-start-small .grid-half {
    flex-basis: 50%;
    max-width: 50%;
  }
  .row-start-small .grid-two-thirds {
    flex-basis: 66.66667%;
    max-width: 66.66667%;
  }
  .row-start-small .grid-three-fourths {
    flex-basis: 75%;
    max-width: 75%;
  }
  .row-start-small .grid-full {
    flex-basis: 100%;
    max-width: 100%;
  }
  .row-start-small .grid-first {
    -webkit-box-ordinal-group: 0;
    order: -1;
  }
  .row-start-small .grid-last {
    -webkit-box-ordinal-group: 2;
    order: 1;
  }
}

@media (min-width: 40em) {
  .row {
    flex-wrap: nowrap;
  }
  .row-wrap {
    flex-wrap: wrap;
  }
  .row-wrap .grid-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-p16 {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-fifth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-fourth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-p28 {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-three-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-third {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-four-tenth {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-half {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-two-thirds {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-three-fourths {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-full {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .row-wrap .grid-auto {
    margin-left: 0;
    margin-right: 0;
    padding-left: 1.4%;
    padding-right: 1.4%;
  }
  .grid-auto {
    flex-basis: auto;
    flex-grow: 1;
  }
  .grid-tenth {
    flex-basis: 10%;
    max-width: 10%;
  }
  .grid-p16 {
    flex-basis: 16%;
    max-width: 16%;
  }
  .grid-fifth {
    flex-basis: 20%;
    max-width: 20%;
  }
  .grid-fourth {
    flex-basis: 25%;
    max-width: 25%;
  }
  .grid-p28 {
    flex-basis: 28%;
    max-width: 28%;
  }
  .grid-three-tenth {
    flex-basis: 30%;
    max-width: 30%;
  }
  .grid-third {
    flex-basis: 33.33333%;
    max-width: 33.33333%;
  }
  .grid-four-tenth {
    flex-basis: 40%;
    max-width: 40%;
  }
  .grid-half {
    flex-basis: 50%;
    max-width: 50%;
  }
  .grid-two-thirds {
    flex-basis: 66.66667%;
    max-width: 66.66667%;
  }
  .grid-three-fourths {
    flex-basis: 75%;
    max-width: 75%;
  }
  .grid-full {
    flex-basis: 100%;
    max-width: 100%;
  }
  .offset-tenth {
    margin-left: 10%;
  }
  .offset-p16 {
    margin-left: 16%;
  }
  .offset-fifth {
    margin-left: 20%;
  }
  .offset-fourth {
    margin-left: 25%;
  }
  .offset-p28 {
    margin-left: 28%;
  }
  .offset-three-tenth {
    margin-left: 30%;
  }
  .offset-third {
    margin-left: 33.33333%;
  }
  .offset-four-tenth {
    margin-left: 40%;
  }
  .offset-half {
    margin-left: 50%;
  }
  .offset-two-thirds {
    margin-left: 66.66667%;
  }
  .offset-three-fourths {
    margin-left: 75%;
  }
  .offset-full {
    margin-left: 100%;
  }
  .grid-first {
    -webkit-box-ordinal-group: 0;
    order: -1;
  }
  .grid-last {
    -webkit-box-ordinal-group: 2;
    order: 1;
  }
}

/**
 * @section Typography
 * Sets font styles for entire site
 */
*::selection {
  background-color: rgba(53, 207, 212, 0.3);
}

body {
  background: white;
  color: #666;
  font-family: "Open Sans", sans-serif;
  font-size: 100%;
  line-height: 1.5;
}

@media (min-width: 40em) {
  body {
    line-height: 1.5625;
  }
}

main {
  background: white;
}

p {
  margin: 0 0 1.5625em;
}

.underline {
  text-decoration: underline;
}

/**
 * Hyperlink styling
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  color: #666;
  background-color: transparent;
  /* 1 */
  text-decoration: none;
  text-decoration-skip: objects;
  /* 2 */
  word-wrap: break-word;
  /**
	 * Improve readability when focused and also mouse hovered in all browsers.
	 */
}

a:active, a:hover {
  outline: 0;
}

/**
 * List styling
 */
ul,
ol {
  margin: 0 0 1.5625em 2em;
  padding: 0;
}

ul ul,
ul ol,
ol ol,
ol ul {
  margin-bottom: 0;
}

dl,
dd {
  margin: 0;
  padding: 0;
}

dd {
  margin-bottom: 1.5625em;
}

dt {
  font-weight: bold;
}

/**
 * @bugfix Prevent webkit from removing list semantics
 * 1. Add a non-breaking space
 * 2. Make sure it doesn't mess up the DOM flow
 */
.list-unstyled, .list-inline {
  list-style: none;
}

.list-unstyled > li:before, .list-inline > li:before {
  content: "\200B";
  /* 1 */
  position: absolute;
  /* 2 */
}

/**
 * Removes list styling.
 * For semantic reasons, should only be used on unordered lists.
 */
.list-unstyled {
  margin-left: 0;
}

/**
 * Display lists on a single line.
 */
.list-inline {
  margin-left: -0.5em;
  margin-right: -0.5em;
  padding: 0;
}

.list-inline > li {
  display: inline-block;
  margin-left: 0.5em;
  margin-right: 0.5em;
}

/**
 * Heading styling for h1 through h6 elements.
 * Heading class lets you use one heading type for semantics, but style it as another heading type.
 */
h1, h2, h3, h4, h5, h6 {
  font-weight: normal;
  line-height: 1.2;
  margin: 0 0 1em;
  padding: 1em 0 0;
  word-wrap: break-word;
  font-family: "Baloo Bhaina", cursive;
}

h1,
.h1 {
  font-size: 1.5em;
  padding-top: .5em;
  font-family: "Baloo Bhaina", cursive;
}

@media (min-width: 40em) {
  h1,
  .h1 {
    font-size: 1.75em;
  }
}

h2,
.h2 {
  font-size: 1.3125em;
}

h3,
.h3 {
  font-size: 1.1875em;
}

h4, h5, h6,
.h4, .h5, .h6 {
  font-size: 1em;
}

h4,
.h4 {
  text-transform: uppercase;
}

/**
 * Lines, Quotes and Emphasis
 */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  border: 0;
  border-top: 1px solid #e5e5e5;
  border-bottom: 0 solid transparent;
  box-sizing: content-box;
  /* 1 */
  margin: 2em auto;
  overflow: visible;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #fbf9c9;
  color: #000000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/**
 * Blockquotes
 */
blockquote {
  font-size: 1.1875em;
  font-style: italic;
  margin: 0 0 1.5625em;
  padding-left: 0.8421052632em;
  padding-right: 0.8421052632em;
}

blockquote cite {
  color: #666666;
  font-size: 0.8421052632em;
  padding-top: 1em;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
}

/**
 * @section Code
 * Styling for code and preformatted text.
 */
code,
kbd,
pre,
samp {
  font-family: "Open Sans", monospace;
  font-size: 0.875em;
}

code {
  background-color: #f7f7f7;
  color: #dd1144;
  padding: 0.25em;
  word-wrap: break-word;
}

pre {
  background-color: #f4f4f4;
  display: block;
  line-height: 1.5;
  margin-bottom: 1.5625em;
  overflow: auto;
  padding: 0.8125em;
  tab-size: 4;
  white-space: pre-wrap;
  word-break: break-all;
}

pre code {
  background-color: transparent;
  border: 0;
  color: inherit;
  font-size: 1em;
  padding: 0;
}

/**
 * @section Buttons
 * Styling for CSS buttons.
 */
/**
 * Primary buttons
 */
.btn {
  background-image: linear-gradient(to right, rgba(53, 207, 212, 0.9), rgba(20, 161, 230, 0.9));
  background-size: 200%;
  border: 2px white solid;
  border-radius: 2px;
  color: white;
  font-size: 1em;
  font-weight: 700;
  padding: .5em 1em;
  text-decoration: none;
  white-space: normal;
  transition: .5s;
  cursor: pointer;
  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);
}

.btn:hover, .btn:active {
  background-position: right center;
  text-decoration: none;
  color: white;
}

.btn--big {
  padding: .7em 1.25em;
  font-size: 1.25em;
}

.btn--transparent {
  background-image: linear-gradient(to right, transparent 50%, rgba(53, 207, 212, 0.9), rgba(20, 161, 230, 0.9));
}

.btn--transparent:hover {
  background-position: right center;
}

.btn--green {
  background-image: linear-gradient(to right, #62ab03 50%, rgba(98, 171, 3, 0.9), rgba(0, 77, 0, 0.9));
}

.btn--green:hover {
  background-position: right center;
}

.btn--small {
  padding: .25em .5em;
  font-weight: 500;
}

/**
 * @section Forms
 * Styling for form elements.
 */
form,
fieldset {
  margin-bottom: 1.5625em;
}

fieldset {
  border: 0;
  padding: 0;
}

legend,
label {
  display: block;
  font-weight: normal;
  margin: 0 0 0.3125em;
  padding: 0;
}

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: #2e2e2e;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
  padding: 0.3125em;
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

input,
textarea,
select {
  display: block;
  line-height: 1.5;
  margin-bottom: 1.1875em;
  width: 100%;
  padding: .25em .5em;
  background: white;
  border: 2px solid #35cfd4;
}

@media (min-width: 40em) {
  input,
  textarea,
  select {
    line-height: 1.5625;
  }
}

input[type="submit"] {
  width: auto;
  margin: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

form button,
form .button {
  margin-bottom: 1.1875em;
}

textarea {
  height: 12em;
  overflow: auto;
}

[type="image"],
[type="checkbox"],
[type="radio"] {
  cursor: pointer;
  display: inline-block;
  height: auto;
  margin-bottom: 0.3125em;
  padding: 0;
  width: auto;
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

input:focus,
select:focus,
textarea:focus {
  border-color: rgba(82, 168, 236, 0.8);
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 0.5em rgba(82, 168, 236, 0.6);
  outline: 0;
  outline: thin dotted \9;
}

[type="file"]:focus,
[type="checkbox"]:focus,
select:focus {
  outline: thin dotted;
  outline: 0.3125em auto -webkit-focus-ring-color;
  outline-offset: -0.125em;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/**
 * Inline inputs
 */
.input-inline {
  display: inline-block;
  vertical-align: middle;
  width: auto;
}

/**
 * Condensed inputs
 */
.input-condensed {
  padding: 1px 0.3125em;
  font-size: 0.9375em;
}

/**
 * Search
 */
/**
  * 1. Correct the odd appearance in Chrome and Safari.
  * 2. Correct the outline style in Safari.
  */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Create rounded search bar
 */
.input-search {
  width: 85%;
  padding-left: 0.9375em;
  padding-right: 2.5em;
  border-radius: 1.3125em;
  transition: width 300ms ease-in;
}

@media (min-width: 40em) {
  .input-search {
    width: 65%;
  }
}

/**
 * Special styling for search icon as button
 */
.btn-search {
  display: inline;
  color: #666666;
  border: none;
  background: none;
  margin-left: -2.5em;
  margin-bottom: 0;
}

.btn-search .icon {
  fill: #666666;
}

.btn-search:hover {
  color: #404040;
}

.btn-search:hover .icon {
  fill: #404040;
}

/**
 * @section Tables
 * Styling for tables
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
  margin-bottom: 1.5625em;
  max-width: 100%;
  width: 100%;
}

th,
td {
  text-align: left;
  padding: 0.5em;
}

th {
  border-bottom: 0.125em solid #e5e5e5;
  font-weight: bold;
  vertical-align: bottom;
}

td {
  border-top: 1px solid #e5e5e5;
  vertical-align: top;
}

/**
 * Adds zebra striping
 */
.table-striped tbody tr:nth-child(odd) {
  background-color: #f7f7f7;
}

/**
 * Reduces padding on condensed tables
 */
.table-condensed th,
.table-condensed td {
  padding: 0.25em;
}

/* Import add-ons here... */
/**
 * @section Overrides
 * Nudge and tweak alignment, spacing, and visibility.
 */
/**
 * Text sizes
 */
.text-small {
  font-size: 0.9375em;
}

.text-large {
  font-size: 1.1875em;
  line-height: 1.4;
}

@media (min-width: 40em) {
  .text-large {
    font-size: 1.3125em;
  }
}

/**
 * Text colors
 */
.text-muted {
  color: #666666;
}

/**
 * Text alignment
 */
.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-left {
  text-align: left;
}

@media (min-width: 40em) {
  .text-right-medium {
    text-align: right;
  }
}

/**
 * Floats
 */
.float-left {
  float: left;
}

.float-center {
  float: none;
  margin-left: auto;
  margin-right: auto;
}

.float-right {
  float: right;
}

/**
 * Margins
 */
.no-margin-top {
  margin-top: 0;
}

.no-margin-bottom {
  margin-bottom: 0;
}

.margin-top {
  margin-top: 1.5625em;
}

.margin-bottom {
  margin-bottom: 1.5625em;
}

.margin-bottom-small {
  margin-bottom: 0.5em;
}

.margin-bottom-large {
  margin-bottom: 2em;
}

/**
 * Padding
 */
.no-padding-top {
  padding-top: 0;
}

.no-padding-bottom {
  padding-bottom: 0;
}

.padding-top {
  padding-top: 1.5625em;
}

.padding-top-small {
  padding-top: 0.5em;
}

.padding-top-large {
  padding-top: 4em;
}

.padding-bottom {
  padding-bottom: 1.5625em;
}

.padding-bottom-small {
  padding-bottom: 0.5em;
}

.padding-bottom-large {
  padding-bottom: 2em;
}

/**
 * Visibility
 */
/*
 * Hide only visually, but have it available for screen readers:
 * @link https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  /* 1 */
  width: 1px;
}

.soft-hidden {
  visibility: hidden;
}

/*
 * Extends the .visuallyhidden class to allow the element to be focusable when navigated to via the keyboard
 * @link https://www.drupal.org/node/897638
 */
.visually-hidden.focusable:active,
.visually-hidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/**
 * @workaround
 * @affected IE 8/9/10
 * @link http://juicystudio.com/article/screen-readers-display-none.php
 */
[hidden], template {
  display: none;
  visibility: hidden;
}

/**
 * Contain floats
 * The space content is one way to avoid an Opera bug when the `contenteditable` attribute is included anywhere else in the document.
 * @link https://github.com/h5bp/html5-boilerplate/blob/master/dist/css/main.css
 */
.clearfix:before, .container:before,
.clearfix:after,
.container:after {
  display: table;
  content: " ";
}


.clearfix:after,
.container:after {
  clear: both;
}

/**
 * @section Print
 * Styling for printed content. Adapted from HTML5BP.
 * @link http://html5boilerplate.com
 */
@media print {
  /**
	 * Universal selector.
	 * Reset all content to transparent background, black color, and remove box and text shadows.
	 */
  * {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  /**
	 * Specifies page margin
	 */
  @page {
    margin: 0.5cm;
  }
  /**
	 * Underline all links
	 */
  a,
  a:visited {
    text-decoration: underline;
  }
  /**
	 * Show URL after links
	 */
  a[href]:after {
    content: " (" attr(href) ")";
  }
  /**
	 * Don't show URL for internal links
	 */
  a[href^="#"]:after {
    content: "";
  }
  /**
	 * Specifies the minimum number of lines to print at the top and bottom of a page.
	 */
  p,
  h1, h2, h3 {
    orphans: 3;
    widows: 3;
  }
  /**
	 * Avoid inserting a page break after headers
	 */
  h1, h2, h3 {
    page-break-after: avoid;
  }
  /**
	 * Change border color on blockquotes and preformatted text.
	 * Avoid page breaks inside the content
	 */
  pre,
  blockquote {
    border-color: #999;
    page-break-inside: avoid;
  }
  /**
	 * Displayed as a table header row group
	 */
  thead {
    display: table-header-group;
  }
  /**
	 * Avoid inserting a page break inside table rows and images
	 */
  tr,
  img {
    page-break-inside: avoid;
  }
}

/* oriya */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBIg58qhE.woff2) format("woff2");
  unicode-range: U+0964-0965, U+0B01-0B77, U+200C-200D, U+20B9, U+25CC;
}

/* vietnamese */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBNA58qhE.woff2) format("woff2");
  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
}

/* latin-ext */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBNQ58qhE.woff2) format("woff2");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

/* latin */
@font-face {
  font-family: 'Baloo Bhaina';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Baloo Bhaina Regular"), local("BalooBhaina-Regular"), url(https://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thBOw58.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

/* cyrillic-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFWJ0bbck.woff2) format("woff2");
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}

/* cyrillic */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFUZ0bbck.woff2) format("woff2");
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}

/* greek-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFWZ0bbck.woff2) format("woff2");
  unicode-range: U+1F00-1FFF;
}

/* greek */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFVp0bbck.woff2) format("woff2");
  unicode-range: U+0370-03FF;
}

/* vietnamese */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFWp0bbck.woff2) format("woff2");
  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
}

/* latin-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFW50bbck.woff2) format("woff2");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

/* latin */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("Open Sans Regular"), local("OpenSans-Regular"), url(https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFVZ0b.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

/* cyrillic-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOX-hpOqc.woff2) format("woff2");
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}

/* cyrillic */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOVuhpOqc.woff2) format("woff2");
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}

/* greek-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOXuhpOqc.woff2) format("woff2");
  unicode-range: U+1F00-1FFF;
}

/* greek */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOUehpOqc.woff2) format("woff2");
  unicode-range: U+0370-03FF;
}

/* vietnamese */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOXehpOqc.woff2) format("woff2");
  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
}

/* latin-ext */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOXOhpOqc.woff2) format("woff2");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

/* latin */
@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("Open Sans Bold"), local("OpenSans-Bold"), url(https://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rgOUuhp.woff2) format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

*::selection {
  background-color: rgba(53, 207, 212, 0.3);
}

body {
  position: relative;
}

svg.filter {
  position: absolute;
  z-index: -1;
  visibility: hidden;
}

.icon {
  display: block;
  width: 100%;
  height: 100%;
  transition: all .3s ease-in-out;
}

.heart #heart_border {
  fill: white;
}

.heart #heart_inside {
  fill: transparent;
}

.heart--fill-green #heart_inside {
  fill: #004d00;
}

.heart--fill-white #heart_inside {
  fill: white;
}

.heart--inverse #heart_border {
  fill: #62ab03;
}

.heart--inverse.heart--fill-white #heart_inside {
  fill: #62ab03;
}

.arrow {
  cursor: pointer;
}

.arrow--rotate {
  transform: rotate(180deg);
}

/* --------------------------------

Title: Radio Switch
Descr: Custom radio toggle

-------------------------------- */
:root {
  --radio-switch-width: 186px;
  --radio-switch-height: 46px;
  --radio-switch-padding: 3px;
  --radio-switch-radius: 50em;
  --radio-switch-animation-duration: 0.3s;
}

.radio-switch {
  position: relative;
  display: inline-block;
  display: inline-flex;
  padding: var(--radio-switch-padding);
  border-radius: calc(var(--radio-switch-radius) * 1.4);
  border: 1px solid #e5e5e5;
}

.radio-switch:focus-within, .radio-switch:active {
  box-shadow: 0 0 0 1px #e5e5e5;
}

.radio-switch__item {
  position: relative;
  display: inline-block;
  height: calc(var(--radio-switch-height) - 2*var(--radio-switch-padding));
  width: calc(var(--radio-switch-width)*0.5 -  var(--radio-switch-padding));
}

.radio-switch__label {
  position: relative;
  z-index: 2;
  display: block;
  border-radius: var(--radio-switch-radius);
  line-height: calc(var(--radio-switch-height) - 2*var(--radio-switch-padding));
  text-align: center;
  cursor: pointer;
  font-size: var(--text-sm);
  user-select: none;
  transition: all var(--radio-switch-animation-duration);
}

.radio-switch__input:checked ~ .radio-switch__label {
  color: #ffffff;
}

.radio-switch__input:focus ~ .radio-switch__label {
  background-color: #14a3e9;
}

.radio-switch__label :not(*):focus-within,
.radio-switch__input:focus ~ .radio-switch__label {
  background-color: transparent;
}

.radio-switch__marker {
  position: absolute;
  z-index: 1;
  top: 0;
  left: -100%;
  border-radius: var(--radio-switch-radius);
  background: linear-gradient(45deg, #35cfd4, #14a1e6);
  height: calc(var(--radio-switch-height) - 2*var(--radio-switch-padding));
  width: calc(var(--radio-switch-width)*0.5 -  var(--radio-switch-padding));
  transition: transform var(--radio-switch-animation-duration);
}

.radio-switch__input:checked ~ .radio-switch__marker {
  transform: translateX(100%);
}

.cookie {
  position: fixed;
  display: flex;
  flex-wrap: wrap;
  bottom: 1em;
  left: 2em;
  width: 80%;
  background: white;
  border-radius: 2px;
  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);
  z-index: 4;
}

@media (min-width: 1200px) {
  .cookie {
    bottom: 2em;
    width: 30%;
  }
}

@keyframes collapse {
  0% {
    overflow: visible;
    width: 80%;
    height: auto;
    z-index: 4;
    opacity: 1;
  }
  100% {
    overflow: visible;
    width: 80%;
    height: auto;
    z-index: 4;
    opacity: 0;
  }
}

@keyframes collapseLarge {
  0% {
    overflow: visible;
    width: 30%;
    height: auto;
    z-index: 4;
    opacity: 1;
  }
  100% {
    overflow: visible;
    width: 30%;
    height: auto;
    z-index: 4;
    opacity: 0;
  }
}

.cookie--no-visible {
  animation: collapse .3s ease-in-out 1;
  overflow: hidden;
  width: 0;
  height: 0;
}

@media (min-width: 1200px) {
  .cookie--no-visible {
    animation: collapseLarge .3s ease-in-out 1;
  }
}

.cookie__img {
  position: absolute;
  top: -2em;
  left: -2em;
  margin: auto;
  width: 4em;
  height: 4em;
}

.cookie__message {
  width: 100%;
  margin: 1em 2em .5em;
}

.cookie__message h1, .cookie__message p {
  margin-bottom: .25em;
}

.cookie__btn {
  width: 100%;
  margin-bottom: .5em;
  display: flex;
  justify-content: center;
}

.cookie-overlay {
  position: fixed;
  z-index: 3;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.75);
}

@keyframes hidden {
  0% {
    height: 100%;
    width: 100%;
    background-color: rgba(0, 0, 0, 0.75);
    z-index: 3;
  }
  100% {
    height: 100%;
    width: 100%;
    background-color: rgba(0, 0, 0, 0);
    z-index: 3;
  }
}

.cookie-overlay--no-visible {
  animation: hidden .3s ease-in-out 1;
  z-index: -1;
  width: 0;
  height: 0;
}

.blur-up {
  filter: blur(8px);
  transition: filter 600ms;
}

.blur-up.lazyloading {
  filter: blur(5px);
}

.blur-up.lazyloaded {
  filter: blur(0);
}

.form {
  width: 95%;
  margin: auto;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

@media (min-width: 1200px) {
  .form {
    width: 80%;
  }
}

.form__item {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.form__item__label {
  width: 100%;
  margin: 0 1em;
  padding: .5em 0;
  justify-content: center;
  display: flex;
}

@media (min-width: 1200px) {
  .form__item__label {
    width: 30%;
    margin: 0 2em;
    justify-content: left;
  }
}

.form__item__input {
  width: 90%;
}

@media (min-width: 1200px) {
  .form__item__input {
    width: 40%;
  }
}

.header {
  position: fixed;
  width: 98%;
  margin: 0 1%;
  display: flex;
  justify-content: space-between;
  z-index: 3;
  border-bottom-left-radius: 3px;
  border-bottom-right-radius: 3px;
}

.header__logo {
  margin: .25em 1em;
  z-index: 3;
}

.header__logo img {
  height: 3em;
  width: auto;
}

.header__nav {
  display: flex;
  flex-wrap: wrap;
  position: absolute;
  width: 100%;
  background: linear-gradient(to top, rgba(20, 161, 230, 0.8), #14a1e6, #23b6de);
  z-index: 2;
  border-radius: 0 0 2px 2px;
  color: white;
  top: 3.5em;
  transform: rotateX(-100deg);
  transform-origin: top;
  opacity: 0;
}

.header__nav__menu {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  width: 100%;
  padding: 0 2.5%;
}

@media (min-width: 1200px) {
  .header__nav__menu {
    padding: 0 5%;
  }
}

.header__nav__menu__column {
  width: 50%;
  position: relative;
  text-align: center;
}

@media (min-width: 1200px) {
  .header__nav__menu__column {
    width: 24%;
    text-align: left;
  }
  .header__nav__menu__column::after {
    content: '';
    position: absolute;
    background-color: white;
    height: 50%;
    width: 1px;
    right: 0;
    top: 25%;
  }
  .header__nav__menu__column:last-child::after {
    display: none;
  }
  .header__nav__menu__column:last-child {
    margin-top: 2em;
  }
}

.header__nav__menu__column:nth-child(1) {
  order: 1;
}

.header__nav__menu__column:nth-child(2) {
  order: 2;
}

@media (min-width: 1200px) {
  .header__nav__menu__column:nth-child(2) {
    order: 3;
  }
}

.header__nav__menu__column:nth-child(3) {
  order: 3;
}

@media (min-width: 1200px) {
  .header__nav__menu__column:nth-child(3) {
    order: 2;
  }
}

.header__nav__menu__column:nth-child(4) {
  order: 4;
}

.header__nav__menu__column__title a {
  color: white;
  margin: 0;
}

@media (min-width: 1200px) {
  .header__nav__menu__column__title a {
    margin: 0 0 1em;
  }
}

.header__nav__menu__column__list {
  list-style: none;
  margin: 0 0 0 1em;
}

.header__nav__menu__column__list__link {
  margin: .5em auto;
}

.header__nav__menu__column__list__link a {
  color: white;
}

.header__nav__menu__column__list__link span {
  padding: 3px;
  border-radius: 5px;
  margin-left: .8em;
  font-size: 80%;
  background: linear-gradient(#f9c90d, #f96e10);
}

.header__menu-icon .menu-icon-wrapper {
  margin: 1em 2em;
}

.headroom {
  background: linear-gradient(to top, #35cfd4, #14a1e6);
  background-size: 100% 200%;
  transition: all .3s ease-in-out;
  transition-delay: .3s;
  background-position: 100% 200%;
  background-repeat: no-repeat;
}

.headroom--pinned .headroom--top {
  position: relative;
  background-position: 100% 200%;
}

.headroom--pinned {
  position: fixed;
  transform: translateY(0%);
}

.headroom--unpinned {
  position: fixed;
  transform: translateY(-100%);
}

.header--pinned, .headroom--not-top.headroom--pinned {
  background-position: 100% 0;
}

/* Menu icon styles */
.menu-icon-wrapper {
  position: relative;
  display: inline-block;
  width: 34px;
  height: 34px;
  margin: 2em;
  pointer-events: none;
  transition: 0.1s;
}

.menu-icon-wrapper svg {
  position: absolute;
  top: -33px;
  left: -33px;
  -webkit-transform: scale(0.1);
  -ms-transform: scale(0.1);
  transform: scale(0.1);
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.menu-icon-wrapper svg path {
  stroke: #fff;
  stroke-width: 30px;
  stroke-linecap: round;
  stroke-linejoin: round;
  fill: transparent;
}

.menu-icon-wrapper .menu-icon-trigger {
  position: relative;
  width: 100%;
  height: 100%;
  cursor: pointer;
  pointer-events: auto;
  background: none;
  border: none;
  margin: 0;
  padding: 0;
}

.menu-icon-wrapper .menu-icon-trigger:hover,
.menu-icon-wrapper .menu-icon-trigger:focus {
  outline: none;
}

.menu-icon-wrapper {
  right: 0;
  top: 0;
  position: fixed;
  z-index: 100;
}

/* ----------------------------------------------
 * Generated by Animista on 2019-6-6 16:43:40
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */
/**
 * ----------------------------------------
 * animation swing-in-top-bck
 * ----------------------------------------
 */
@keyframes swing-in-top-bck {
  0% {
    transform: rotateX(70deg);
    transform-origin: top;
    opacity: 0;
  }
  100% {
    transform: rotateX(0deg);
    transform-origin: top;
    opacity: 1;
  }
}

@keyframes swing-out-top-bck {
  0% {
    transform: rotateX(0deg);
    transform-origin: top;
    opacity: 1;
  }
  100% {
    transform: rotateX(-90deg);
    transform-origin: top;
    opacity: 0;
  }
}

.swing-in-top-bck {
  animation: swing-in-top-bck 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;
  animation-delay: .6s;
}

.swing-out-top-bck {
  animation: swing-out-top-bck 0.25s cubic-bezier(0.6, -0.28, 0.735, 0.045) both;
}

.hero {
  height: 75vh;
  overflow: hidden;
  position: relative;
  display: flex;
  align-items: center;
}

.hero__image {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.hero__image img {
  width: 100%;
  height: 100%;
}

.hero__content {
  width: 90%;
  margin: 2em;
  z-index: 1;
  position: relative;
  color: #ffffff;
}

@media (min-width: 1200px) {
  .hero__content {
    width: 50%;
  }
}

.hero__content__text {
  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.4);
}

@media (min-width: 1200px) {
  .hero__content__text {
    font-size: 3em;
  }
}

.banner {
  height: 75vh;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

.banner__image {
  position: absolute;
  width: 100%;
  height: 100%;
}

.banner__content {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.banner__content__title {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  width: 100%;
  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.25);
}

.banner__content__title h2, .banner__content__title h3 {
  text-align: center;
  color: white;
  margin: .5em;
  padding: 0;
}

@media (min-width: 1200px) {
  .banner__content__title h2, .banner__content__title h3 {
    width: 75%;
  }
}

.banner__content__title h2 {
  font-size: 2.5em;
}

.banner__content__title h3 {
  font-size: 1.5em;
}

nav.breadcrumb {
  position: relative;
  width: 75%;
  margin: 1em auto 0 auto;
  display: flex;
  align-items: center;
}

nav.breadcrumb ul {
  list-style: none;
  margin: 0;
}

nav.breadcrumb ul li {
  display: inline;
  margin-right: 1em;
  font-family: "Baloo Bhaina", cursive;
}

nav.breadcrumb ul li::after {
  content: '\\';
  position: absolute;
  margin: .2em 0 0 .2em;
}

nav.breadcrumb ul li:last-child::after {
  display: none;
}

nav.breadcrumb ul li a {
  text-decoration: underline;
}

.section {
  width: 100%;
  position: relative;
  background-color: white;
}

.section__title {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  text-align: center;
}

.section__title__highlight {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: 600;
  flex-wrap: wrap;
}

@media (min-width: 1200px) {
  .section__title__highlight {
    flex-wrap: nowrap;
  }
}

.section__title__highlight h2 {
  font-size: 2.5em;
  margin: 0 0 .25em;
}

@media (min-width: 1200px) {
  .section__title__highlight h2 {
    margin: 0 0 1em;
  }
}

.section__title__highlight::before, .section__title__highlight::after {
  content: '';
  position: relative;
  height: 4px;
  border-radius: 2px;
  width: 70%;
  margin: 0 .5em;
}

@media (min-width: 1200px) {
  .section__title__highlight::before, .section__title__highlight::after {
    width: 8em;
  }
}

.section__title__highlight:before {
  background: linear-gradient(45deg, #35cfd4, #14a1e6);
  display: none;
}

@media (min-width: 1200px) {
  .section__title__highlight:before {
    display: block;
  }
}

.section__title__highlight::after {
  background: linear-gradient(-45deg, #35cfd4, #14a1e6);
}

.section__title__highlight p {
  width: 50%;
}

.section__title__highlight--orange:before {
  background: linear-gradient(45deg, #f9c90d, #f96e10);
}

.section__title__highlight--orange::after {
  background: linear-gradient(-45deg, #f9c90d, #f96e10);
}

.section__title__highlight--green:before {
  background: linear-gradient(45deg, #62ab03, #004d00);
}

.section__title__highlight--green::after {
  background: linear-gradient(-45deg, #62ab03, #004d00);
}

.section__title__highlight--no-decorator::before, .section__title__highlight--no-decorator::after {
  display: none;
}

.section__title__description {
  position: relative;
  top: 1em;
  width: 95%;
  text-align: center;
}

@media (min-width: 1200px) {
  .section__title__description {
    top: -2em;
    width: 50%;
  }
}

.divider {
  width: 100%;
  margin: 3em 0;
  display: flex;
  justify-content: center;
}

.divider::before {
  content: '';
  position: relative;
  width: 80%;
  height: 2px;
  border-radius: 2px;
  background: linear-gradient(45deg, #35cfd4, #14a1e6);
}

.divider--orange::before {
  background: linear-gradient(45deg, #f9c90d, #f96e10);
}

.divider--white::before {
  background: white;
}

.top_destinations {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.top_destinations__places {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

@media (min-width: 1200px) {
  .top_destinations__places {
    width: 90%;
  }
}

.top_destinations__places__place {
  width: 100%;
  margin: 1.5em 0;
  max-height: 75vh;
  min-height: 50vh;
  position: relative;
}

@media (min-width: 1200px) {
  .top_destinations__places__place {
    margin: 3em 0;
    width: 48%;
    min-height: auto;
  }
}

@media (min-width: 1600px) {
  .top_destinations__places__place {
    margin: 3em 0;
    width: 23%;
  }
}

.top_destinations__places__place:hover img {
  transform: scale(1.05);
}

.top_destinations__places__place::before {
  content: '';
  width: 100%;
  height: 100%;
  position: absolute;
  z-index: 0;
  left: -10px;
  top: -10px;
  background: linear-gradient(45deg, #35cfd4, #14a1e6 20%, transparent);
}

@media (min-width: 1200px) {
  .top_destinations__places__place::before {
    left: -15px;
    top: -15px;
  }
}

.top_destinations__places__place--orange::before {
  background: linear-gradient(45deg, #f9c90d, #f96e10 20%, transparent);
}

.top_destinations__places__place--green::before {
  background: linear-gradient(45deg, #62ab03, #004d00 20%, transparent);
}

.top_destinations__places__place__image {
  overflow: hidden;
  position: relative;
  height: 100%;
}

@media (min-width: 1600px) {
  .top_destinations__places__place__image {
    min-height: 60vh;
  }
}

.top_destinations__places__place__image > div {
  width: 100%;
  height: 100%;
}

.top_destinations__places__place__image img {
  transition: transform .5s ease-in-out;
  height: 100%;
}

@media (min-width: 1600px) {
  .top_destinations__places__place__image img {
    width: auto;
  }
}

.top_destinations__places__place__text {
  position: absolute;
  bottom: 0;
  width: 90%;
  margin: 0 5%;
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  text-align: center;
  z-index: 2;
  text-shadow: 3px 3px 10px rgba(0, 0, 0, 0.5);
}

@media (min-width: 1200px) {
  .top_destinations__places__place__text {
    bottom: 1em;
  }
}

.top_destinations__places__place__text span {
  display: block;
  color: white;
  font-family: "Baloo Bhaina", cursive;
  font-size: 2em;
}

.top_destinations__places__place__text p {
  color: white;
  font-weight: bold;
}

.activity {
  width: 100%;
  margin: .5em .5em;
  position: relative;
}

@media (min-width: 1200px) {
  .activity {
    width: 31%;
  }
}

.activity:hover {
  text-decoration: none;
}

.activity:hover img {
  transform: scale(1.1);
}

.activity__image {
  height: 40vh;
  overflow: hidden;
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);
  border-radius: 2px;
  position: relative;
}

.activity__image img {
  width: 100%;
  height: 100%;
  transition: transform .3s ease-in-out;
}

.activity__content {
  position: relative;
  top: -.75em;
  background-color: white;
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);
  padding: .5em;
  width: 95%;
  margin: auto;
  border-radius: 2px;
}

@media (min-width: 1200px) {
  .activity__content {
    padding: 1em;
    width: 90%;
  }
}

.activity__content__price {
  display: flex;
  border-radius: 50%;
  background: linear-gradient(45deg, #35cfd4, #14a1e6);
  transform: translate(50%, -50%);
  top: -.5em;
  position: absolute;
  right: .5em;
  width: 3.75em;
  height: 3.75em;
}

.activity__content__price span {
  text-align: center;
  margin: auto;
  color: white;
  font-weight: 700;
  font-size: .95em;
}

.activity__content__actions {
  position: absolute;
  width: auto;
  z-index: 1;
}

.activity__content__actions__add {
  width: 2em;
  height: 2em;
  cursor: pointer;
}

.activity__content__actions__add::before {
  position: absolute;
  content: '';
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
}

.activity__content__title {
  text-align: center;
  width: 80%;
  margin: auto;
}

.activity__content__description {
  text-align: center;
}

.activity__content__description p {
  margin: .25em;
}

@keyframes loading_dots_animation {
  50% {
    transform: scale(1);
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes loading_dots_animation__wait {
  50% {
    opacity: 1;
  }
  100% {
    opacity: 1;
  }
}

.loading_dots {
  height: 2em;
  margin: .5em;
  width: auto;
  box-sizing: border-box;
  opacity: 0;
  transition: opacity .3s ease-in-out;
}

.loading_dots * {
  box-sizing: border-box;
}

.loading_dots .dot {
  width: 1.5em;
  height: 1.5em;
  margin: 0 calc(1.5em / 2);
  border: calc(1.5em / 5) solid #35cfd4;
  border-radius: 50%;
  float: left;
  transform: scale(0);
  animation: loading_dots_animation 1s ease infinite 0s;
}

.loading_dots .dot:nth-child(1) {
  animation-delay: calc(300ms * 1);
}

.loading_dots .dot:nth-child(2) {
  animation-delay: calc(300ms * 2);
}

.loading_dots .dot:nth-child(3) {
  animation-delay: calc(300ms * 3);
}

.loading_dots--visible {
  opacity: 1 !important;
}

@keyframes showBar {
  0% {
    transform: translateY(calc( 100% - 3em));
  }
  40% {
    transform: translateY(0%);
  }
  60% {
    transform: translateY(0%);
  }
  100% {
    transform: translateY(calc( 100% - 3em));
  }
}

@keyframes showActivityItem {
  0% {
    transform: translateY(-50%);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

.cart_bar {
  width: 100vw;
  position: fixed;
  bottom: 0;
  border-top-left-radius: 2px;
  border-bottom-left-radius: 2px;
  margin: auto;
  z-index: 2;
  padding: .25em;
  background: linear-gradient(45deg, rgba(53, 207, 212, 0.95), rgba(20, 161, 230, 0.95));
  color: white;
  border: 2px solid rgba(255, 255, 255, 0.9);
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
  transform: translateY(calc( 100% - 3em));
  transition: transform .3s ease-in-out;
}

@media (min-width: 1200px) {
  .cart_bar {
    width: auto;
    max-width: 30vw;
    right: 2em;
  }
}

.cart_bar:hover {
  transform: translateY(0);
}

.cart_bar--visible {
  animation: showBar 3.5s ease-in-out 1;
}

.cart_bar__title {
  margin: .25em auto;
  text-align: center;
  border-bottom: 1px solid white;
  width: 80%;
  display: flex;
  justify-content: center;
}

.cart_bar__title__icon {
  width: 2em;
  height: 2em;
}

.cart_bar__title h4 {
  margin: .5em 1em;
  padding: 0;
}

.cart_bar__title span {
  padding: .5em;
  border-radius: 50%;
  height: 2em;
  width: 2em;
  background: linear-gradient(#f9c90d, #f96e10);
  font-family: "Baloo Bhaina", cursive;
}

.cart_bar__content {
  padding: 1em;
  width: 100%;
}

.cart_bar__content__activities {
  max-height: 30vh;
  position: relative;
  overflow-y: auto;
}

.cart_bar__content__activities__item {
  width: 80%;
  margin: auto;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  animation: .3s ease-in 1 showActivityItem;
}

.cart_bar__content__activities__item__prototype {
  display: none;
}

.cart_bar__content__activities__item img {
  width: 2em;
  height: 2em;
  display: inline;
}

.cart_bar__content__activities__item h5 {
  display: inline;
  margin-left: 1em;
}

.cart_bar__content__activities__item__drop {
  position: absolute;
  right: 3em;
  width: 1.25em;
  height: 1.25em;
  cursor: pointer;
}

.cart_bar__content__activities__item__drop:before {
  content: '';
  position: absolute;
  z-index: 1;
  height: 100%;
  width: 100%;
}

.cart_bar__content__activities__item__drop svg {
  width: 100%;
  height: 100%;
}

.cart_bar__content__text {
  text-align: center;
  width: 100%;
  margin: .5em 0;
  color: white;
}

.cart_bar__content__text p {
  margin: 0;
}

.cart_bar__content__button {
  width: 100%;
  display: flex;
  justify-content: space-around;
}

.cart_bar__content__button a {
  margin: 0 .25em;
  color: white;
}

.cart_bar [data-show='empty'] {
  visibility: hidden;
  position: relative;
  height: 0;
  width: 0;
  z-index: -1;
}

.cart_bar--initial [data-show='no-empty'] {
  visibility: hidden;
  position: relative;
  height: 0;
  width: 0;
  z-index: -1;
}

.cart_bar--initial [data-show='empty'] {
  visibility: visible;
  height: auto;
  width: auto;
  z-index: auto;
}

.footer {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  position: relative;
  background: linear-gradient(45deg, #35cfd4, #14a1e6);
  color: #ffffff;
}

.footer__banner {
  width: 100%;
  height: 75vh;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  position: relative;
}

.footer__banner__image {
  position: absolute;
  width: 100%;
  height: 100%;
}

.footer__banner__content {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.footer__banner__content__titles {
  text-align: center;
  width: 100%;
  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.25);
}

.footer__banner__content__titles h2, .footer__banner__content__titles h3 {
  color: white;
  margin: .5em;
  padding: 0;
}

.footer__banner__content__titles h2 {
  font-size: 2.5em;
}

.footer__banner__content__titles h3 {
  font-size: 1.5em;
}

.footer__content {
  position: relative;
  z-index: 1;
  padding: .5em;
  width: 90%;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

@media (min-width: 1200px) {
  .footer__content {
    padding: 2em 2em .5em 2em;
  }
}

.footer__content__links {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

.footer__content__links__column {
  width: 50%;
}

@media (min-width: 1200px) {
  .footer__content__links__column {
    width: 23%;
  }
}

.footer__content__links__column:nth-child(1) {
  order: 1;
}

.footer__content__links__column:nth-child(2) {
  order: 2;
}

@media (min-width: 1200px) {
  .footer__content__links__column:nth-child(2) {
    order: 3;
  }
}

.footer__content__links__column:nth-child(3) {
  order: 3;
}

@media (min-width: 1200px) {
  .footer__content__links__column:nth-child(3) {
    order: 2;
  }
}

.footer__content__links__column:nth-child(4) {
  order: 4;
}

.footer__content__links__column__title a {
  color: white;
}

.footer__content__links__column ul {
  margin-left: .25em;
}

.footer__content__links__column ul li {
  list-style: none;
  margin: .25em 0;
}

.footer__content__links__column ul li a {
  color: white;
}

.footer__content__infos {
  width: 100%;
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}

.footer__content__infos__column {
  width: 48%;
}

@media (min-width: 1200px) {
  .footer__content__infos__column {
    width: 25%;
  }
}

.footer__content__infos__column:last-child {
  width: 100%;
}

@media (min-width: 1200px) {
  .footer__content__infos__column:last-child {
    width: 25%;
  }
}

.footer__content__agb {
  display: flex;
  width: 100%;
  justify-content: center;
}

.footer__content__agb a {
  color: white;
}

.footer__content__copyright {
  width: auto;
}

.footer__content__made-by {
  width: auto;
}

.footer__content__made-by a {
  color: white;
  text-decoration: underline;
  font-weight: bold;
}

.footer__content__social-networks {
  width: auto;
  margin: auto 2em;
}

.footer__content__social-networks ul {
  margin: 0;
}

.footer__content__social-networks ul li {
  margin: 0 .25em;
  display: inline-block;
  list-style: none;
}

.footer__content__social-networks ul li a {
  display: inline-block;
}

.footer__content__social-networks ul li a svg {
  width: 2em;
  height: 2em;
}

.footer__background-image {
  position: absolute;
  bottom: 0;
  z-index: 0;
}

.travel-options {
  margin-bottom: 2em;
  position: relative;
  width: 100%;
  overflow: hidden;
}

.travel-options__grid {
  display: grid;
  grid-template-areas: "img1 img6"  "img2 img6"  "img9 img9"  "img10 img10"  "img3 img3"  "img4 img11"  "img5 img7 "  "img5 img8"  "img12 img14"  "img13 img14";
  grid-template-rows: 33vh 33vh 33vh 33vh 33vh 33vh 33vh 33vh 33vh 33vh;
  grid-template-columns: 1fr 1fr;
  width: 100%;
  grid-gap: .15em;
}

@media (min-width: 1200px) {
  .travel-options__grid {
    grid-template-areas: "img1 img6 img9 img9"  "img2 img6 img10 img10"  "img3 img3 img3 img3"  "img4 img4 img11 img11"  "img5 img7 img12 img14"  "img5 img8 img13 img14";
    grid-template-rows: 40vh 40vh 40vh 40vh;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    width: 100%;
  }
}

.travel-options__grid__item {
  height: 100%;
  width: 100%;
  overflow: hidden;
}

.travel-options__grid__item img {
  width: 100%;
  height: 100%;
}

.travel-options__grid_overlay {
  display: grid;
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  grid-template-areas: "section1 section1"  "section1 section1"  "section2 section2"  "section2 section2"  "section3 section3"  "section3 section3"  "section4 section4"  "section4 section4"  "section5 section5"  "section5 section5";
  grid-template-rows: 33vh 33vh 33vh 33vh 33vh 33vh 33vh 33vh 33vh 33vh;
  grid-template-columns: 1fr 1fr;
  grid-gap: .15em;
}

@media (min-width: 1200px) {
  .travel-options__grid_overlay {
    grid-template-areas: "section1 section1 section2 section2"  "section1 section1 section2 section2"  "section3 section3 section3 section3"  "section3 section3 section3 section3"  "section4 section4 section5 section5"  "section4 section4 section5 section5";
    grid-template-rows: 40vh 40vh 40vh 40vh;
    grid-template-columns: 1fr 1fr 1fr 1fr;
  }
}

.travel-options__grid_overlay a {
  text-decoration: none;
  color: white;
  font-size: 3em;
  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.25);
}

.travel-options__grid_overlay a:hover > div {
  opacity: 1;
}

.travel-options__grid_overlay a div {
  height: 100%;
  width: 100%;
  opacity: 0;
  background-color: rgba(53, 207, 212, 0.5);
  transition: opacity .3s ease-in-out;
  display: flex;
  justify-content: center;
  align-items: center;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYmFzZS9fY29uZmlnLnNjc3MiLCJ3ZWJwYWNrOi8vL2tyYWtlbi5zY3NzIiwid2VicGFjazovLy9iYXNlL19ub3JtYWxpemUuc2NzcyIsIndlYnBhY2s6Ly8vYmFzZS9fZ3JpZC5zY3NzIiwid2VicGFjazovLy9iYXNlL190eXBvZ3JhcGh5LnNjc3MiLCJ3ZWJwYWNrOi8vL2Jhc2UvX2NvZGUuc2NzcyIsIndlYnBhY2s6Ly8vYmFzZS9fYnV0dG9ucy5zY3NzIiwid2VicGFjazovLy9iYXNlL19mb3Jtcy5zY3NzIiwid2VicGFjazovLy9iYXNlL190YWJsZXMuc2NzcyIsIndlYnBhY2s6Ly8vYmFzZS9fb3ZlcnJpZGVzLnNjc3MiLCJ3ZWJwYWNrOi8vL2Jhc2UvX3ByaW50LnNjc3MiLCJ3ZWJwYWNrOi8vL3N0eWxlcy5zY3NzIiwid2VicGFjazovLy9tb2R1bGVzL2dsb2JhbC9fZ2xvYmFsLnNjc3MiLCJ3ZWJwYWNrOi8vL21vZHVsZXMvZ2xvYmFsL19pY29ucy5zY3NzIiwid2VicGFjazovLy9tb2R1bGVzL2Zvcm1zL19mb3JtX3JhZGlvLXN3aXRjaC5zY3NzIiwid2VicGFjazovLy9tb2R1bGVzL2dsb2JhbC9fY29va2llLnNjc3MiLCJ3ZWJwYWNrOi8vL2Jhc2UvX21peGlucy5zY3NzIiwid2VicGFjazovLy9tb2R1bGVzL2dsb2JhbC9faW1hZ2VfbG9hZC5zY3NzIiwid2VicGFjazovLy9tb2R1bGVzL2dsb2JhbC9fZm9ybS5zY3NzIiwid2VicGFjazovLy9tb2R1bGVzL2dsb2JhbC9faGVhZGVyLnNjc3MiLCJ3ZWJwYWNrOi8vL21vZHVsZXMvZ2xvYmFsL19oZXJvLnNjc3MiLCJ3ZWJwYWNrOi8vL21vZHVsZXMvZ2xvYmFsL19iYW5uZXIuc2NzcyIsIndlYnBhY2s6Ly8vbW9kdWxlcy9nbG9iYWwvX2JyZWFkY3J1bWIuc2NzcyIsIndlYnBhY2s6Ly8vbW9kdWxlcy9nbG9iYWwvX3NlY3Rpb25zLnNjc3MiLCJ3ZWJwYWNrOi8vL21vZHVsZXMvZ2xvYmFsL19kaXZpZGVycy5zY3NzIiwid2VicGFjazovLy9tb2R1bGVzL2dsb2JhbC9fdG9wX2Rlc3RpbmF0aW9ucy5zY3NzIiwid2VicGFjazovLy9tb2R1bGVzL2dsb2JhbC9fYWN0aXZpdHkuc2NzcyIsIndlYnBhY2s6Ly8vbW9kdWxlcy9nbG9iYWwvX2xvYWRpbmdfZG90cy5zY3NzIiwid2VicGFjazovLy9tb2R1bGVzL2dsb2JhbC9fY2FydF9iYXIuc2NzcyIsIndlYnBhY2s6Ly8vbW9kdWxlcy9nbG9iYWwvX2Zvb3Rlci5zY3NzIiwid2VicGFjazovLy9tb2R1bGVzL2dsb2JhbC9fdHJhdmVsX29wdGlvbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7RUFDQywyQkFBMkI7RUFDM0Isa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsdUtBQXVLO0VBQ3ZLLG9FQUFvRTtBQ0NyRTs7QURDQTtBQUNBO0VBQ0MsMkJBQTJCO0VBQzNCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLHVLQUF1SztFQUN2Syw0REFBNEQ7QUNFN0Q7O0FEQUE7QUFDQTtFQUNDLDJCQUEyQjtFQUMzQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQix1S0FBdUs7RUFDdkssbUhBQW1IO0FDR3BIOztBRERBO0FBQ0E7RUFDQywyQkFBMkI7RUFDM0Isa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsb0tBQW9LO0VBQ3BLLHlLQUF5SztBQ0kxSzs7QURGQTtBQUNBO0VBQ0Msd0JBQXdCO0VBQ3hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLDJKQUEySjtFQUMzSixzRkFBc0Y7QUNLdkY7O0FESEE7QUFDQTtFQUNDLHdCQUF3QjtFQUN4QixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQiwySkFBMko7RUFDM0osNERBQTREO0FDTTdEOztBREpBO0FBQ0E7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QztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQ2dQakI7RUVwV0M7SUFhRyxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCSHFHYTtJR3BHYixtQkhvR2E7RUNzUGpCO0VFMVdDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDNFBqQjtFRWhYQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQ2tRakI7RUV0WEM7SUFhRyxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCSHFHYTtJR3BHYixtQkhvR2E7RUN3UWpCO0VFNVhDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDOFFqQjtFRWxZQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQ29SakI7RUV4WUM7SUFhRyxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCSHFHYTtJR3BHYixtQkhvR2E7RUMwUmpCO0VFOVlDO0lBc0JFLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JINEZjO0lHM0ZkLG1CSDJGYztFQ2dTakI7RUV0WEE7SUFDQyxnQkFBZ0I7SUFDaEIsWUFBWTtFRndYYjtFRXBYQztJQUNDLGVIc0ZPO0lHckZQLGNIcUZPO0VDaVNUO0VFeFhDO0lBQ0MsZUh1Rks7SUd0RkwsY0hzRks7RUNvU1A7RUU1WEM7SUFDQyxlSHdGTztJR3ZGUCxjSHVGTztFQ3VTVDtFRWhZQztJQUNDLGVIeUZRO0lHeEZSLGNId0ZRO0VDMFNWO0VFcFlDO0lBQ0MsZUgwRks7SUd6RkwsY0h5Rks7RUM2U1A7RUV4WUM7SUFDQyxlSDJGYTtJRzFGYixjSDBGYTtFQ2dUZjtFRTVZQztJQUNDLHFCSDRGbUI7SUczRm5CLG9CSDJGbUI7RUNtVHJCO0VFaFpDO0lBQ0MsZUg2Rlk7SUc1RlosY0g0Rlk7RUNzVGQ7RUVwWkM7SUFDQyxlSDhGTTtJRzdGTixjSDZGTTtFQ3lUUjtFRXhaQztJQUNDLHFCSCtGeUI7SUc5RnpCLG9CSDhGeUI7RUM0VDNCO0VFNVpDO0lBQ0MsZUhnR2U7SUcvRmYsY0grRmU7RUMrVGpCO0VFaGFDO0lBQ0MsZ0JIaUdPO0lHaEdQLGVIZ0dPO0VDa1VUO0VFdlpBO0lBQ0MsNEJBQTRCO0lBQzVCLFNBQVM7RUZ5WlY7RUV0WkE7SUFDQyw0QkFBNEI7SUFDNUIsUUFBUTtFRndaVDtBQUNGOztBRXhkQztFQUNDO0lBQ0MsaUJBQWlCO0VGMmRsQjtFRXRkQztJQUNDLGVBQWU7RUZ3ZGpCO0VFemRDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDMldqQjtFRS9kQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQ2lYakI7RUVyZUM7SUFhRyxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCSHFHYTtJR3BHYixtQkhvR2E7RUN1WGpCO0VFM2VDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDNlhqQjtFRWpmQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQ21ZakI7RUV2ZkM7SUFhRyxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCSHFHYTtJR3BHYixtQkhvR2E7RUN5WWpCO0VFN2ZDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDK1lqQjtFRW5nQkM7SUFhRyxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCSHFHYTtJR3BHYixtQkhvR2E7RUNxWmpCO0VFemdCQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQzJaakI7RUUvZ0JDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDaWFqQjtFRXJoQkM7SUFhRyxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCSHFHYTtJR3BHYixtQkhvR2E7RUN1YWpCO0VFM2hCQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQzZhakI7RUVqaUJDO0lBc0JFLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JINEZjO0lHM0ZkLG1CSDJGYztFQ21iakI7RUV6Z0JBO0lBQ0MsZ0JBQWdCO0lBQ2hCLFlBQVk7RUYyZ0JiO0VFdmdCQztJQUNDLGVIc0ZPO0lHckZQLGNIcUZPO0VDb2JUO0VFM2dCQztJQUNDLGVIdUZLO0lHdEZMLGNIc0ZLO0VDdWJQO0VFL2dCQztJQUNDLGVId0ZPO0lHdkZQLGNIdUZPO0VDMGJUO0VFbmhCQztJQUNDLGVIeUZRO0lHeEZSLGNId0ZRO0VDNmJWO0VFdmhCQztJQUNDLGVIMEZLO0lHekZMLGNIeUZLO0VDZ2NQO0VFM2hCQztJQUNDLGVIMkZhO0lHMUZiLGNIMEZhO0VDbWNmO0VFL2hCQztJQUNDLHFCSDRGbUI7SUczRm5CLG9CSDJGbUI7RUNzY3JCO0VFbmlCQztJQUNDLGVINkZZO0lHNUZaLGNINEZZO0VDeWNkO0VFdmlCQztJQUNDLGVIOEZNO0lHN0ZOLGNINkZNO0VDNGNSO0VFM2lCQztJQUNDLHFCSCtGeUI7SUc5RnpCLG9CSDhGeUI7RUMrYzNCO0VFL2lCQztJQUNDLGVIZ0dlO0lHL0ZmLGNIK0ZlO0VDa2RqQjtFRW5qQkM7SUFDQyxnQkhpR087SUdoR1AsZUhnR087RUNxZFQ7RUUxaUJBO0lBQ0MsNEJBQTRCO0lBQzVCLFNBQVM7RUY0aUJWO0VFemlCQTtJQUNDLDRCQUE0QjtJQUM1QixRQUFRO0VGMmlCVDtBQUNGOztBRTNtQkM7RUFuRkQ7SUFxRkcsaUJBQWlCO0VGOG1CbEI7RUV6bUJDO0lBQ0MsZUFBZTtFRjJtQmpCO0VFNW1CQztJQWFHLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JIcUdhO0lHcEdiLG1CSG9HYTtFQzhmakI7RUVsbkJDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDb2dCakI7RUV4bkJDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDMGdCakI7RUU5bkJDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDZ2hCakI7RUVwb0JDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDc2hCakI7RUUxb0JDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDNGhCakI7RUVocEJDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDa2lCakI7RUV0cEJDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDd2lCakI7RUU1cEJDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDOGlCakI7RUVscUJDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDb2pCakI7RUV4cUJDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDMGpCakI7RUU5cUJDO0lBYUcsY0FBYztJQUNkLGVBQWU7SUFDZixrQkhxR2E7SUdwR2IsbUJIb0dhO0VDZ2tCakI7RUVwckJDO0lBc0JFLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JINEZjO0lHM0ZkLG1CSDJGYztFQ3NrQmpCO0VFNXBCQTtJQUNDLGdCQUFnQjtJQUNoQixZQUFZO0VGOHBCYjtFRTFwQkM7SUFDQyxlSHNGTztJR3JGUCxjSHFGTztFQ3VrQlQ7RUU5cEJDO0lBQ0MsZUh1Rks7SUd0RkwsY0hzRks7RUMwa0JQO0VFbHFCQztJQUNDLGVId0ZPO0lHdkZQLGNIdUZPO0VDNmtCVDtFRXRxQkM7SUFDQyxlSHlGUTtJR3hGUixjSHdGUTtFQ2dsQlY7RUUxcUJDO0lBQ0MsZUgwRks7SUd6RkwsY0h5Rks7RUNtbEJQO0VFOXFCQztJQUNDLGVIMkZhO0lHMUZiLGNIMEZhO0VDc2xCZjtFRWxyQkM7SUFDQyxxQkg0Rm1CO0lHM0ZuQixvQkgyRm1CO0VDeWxCckI7RUV0ckJDO0lBQ0MsZUg2Rlk7SUc1RlosY0g0Rlk7RUM0bEJkO0VFMXJCQztJQUNDLGVIOEZNO0lHN0ZOLGNINkZNO0VDK2xCUjtFRTlyQkM7SUFDQyxxQkgrRnlCO0lHOUZ6QixvQkg4RnlCO0VDa21CM0I7RUVsc0JDO0lBQ0MsZUhnR2U7SUcvRmYsY0grRmU7RUNxbUJqQjtFRXRzQkM7SUFDQyxnQkhpR087SUdoR1AsZUhnR087RUN3bUJUO0VFbnNCRTtJQUNDLGdCSCtFTTtFQ3NuQlQ7RUV0c0JFO0lBQ0MsZ0JIZ0ZJO0VDd25CUDtFRXpzQkU7SUFDQyxnQkhpRk07RUMwbkJUO0VFNXNCRTtJQUNDLGdCSGtGTztFQzRuQlY7RUUvc0JFO0lBQ0MsZ0JIbUZJO0VDOG5CUDtFRWx0QkU7SUFDQyxnQkhvRlk7RUNnb0JmO0VFcnRCRTtJQUNDLHNCSHFGa0I7RUNrb0JyQjtFRXh0QkU7SUFDQyxnQkhzRlc7RUNvb0JkO0VFM3RCRTtJQUNDLGdCSHVGSztFQ3NvQlI7RUU5dEJFO0lBQ0Msc0JId0Z3QjtFQ3dvQjNCO0VFanVCRTtJQUNDLGdCSHlGYztFQzBvQmpCO0VFcHVCRTtJQUNDLGlCSDBGTTtFQzRvQlQ7RUVqdUJBO0lBQ0MsNEJBQTRCO0lBQzVCLFNBQVM7RUZtdUJWO0VFaHVCQTtJQUNDLDRCQUE0QjtJQUM1QixRQUFRO0VGa3VCVDtBQUNGOztBR3I0QkE7OztFSDA0QkU7QUdyNEJGO0VBQ0kseUNKNkpnQjtBQzB1QnBCOztBQy8xQkE7RUUvQkMsaUJBQWlCO0VBQ2pCLFdKNkpVO0VJNUpWLG9DSndMa0M7RUl2TGxDLGVKcU1lO0VJcE1mLGdCQUFnQjtBSGs0QmpCOztBR2g0QkM7RUZ5QkQ7SUV4QkUsbUJBQW1CO0VIbzRCbkI7QUFDRjs7QUdoNEJBO0VBQ0MsaUJBQWlCO0FIbTRCbEI7O0FHLzNCQTtFQUNDLG9CSnVMaUI7QUMyc0JsQjs7QUcvM0JBO0VBQ0MsMEJBQTBCO0FIazRCM0I7O0FHaDRCQTs7OztFSHM0QkU7QUdoNEJGO0VBQ0ksV0orSE87RUk5SFYsNkJBQTZCO0VBQUU7RUFDL0IscUJBQXFCO0VBQ3JCLDZCQUE2QjtFQUFFO0VBQy9CLHFCQUFxQjtFQUVyQjs7R0hvNEJFO0FBQ0g7O0FHNTRCQTtFQVlFLFVBQVU7QUhvNEJaOztBRzkzQkE7O0VIazRCRTtBRzkzQkY7O0VBRUMsd0JBQXdCO0VBQ3hCLFVBQVU7QUhnNEJYOztBRzczQkE7Ozs7RUFJQyxnQkFBZ0I7QUhnNEJqQjs7QUc3M0JBOztFQUVDLFNBQVM7RUFDVCxVQUFVO0FIZzRCWDs7QUc3M0JBO0VBQ0MsdUJKaUlpQjtBQyt2QmxCOztBRzczQkE7RUFDQyxpQkFBaUI7QUhnNEJsQjs7QUc3M0JBOzs7O0VIbTRCRTtBRzkzQkY7RUFDQyxnQkFBZ0I7QUhnNEJqQjs7QUc5M0JDO0VBQ0MsZ0JBQWdCO0VBQUU7RUFDbEIsa0JBQWtCO0VBQUU7QUhtNEJ0Qjs7QUcvM0JBOzs7RUhvNEJFO0FHaDRCRjtFQUVDLGNBQWM7QUhpNEJmOztBRzkzQkE7O0VIazRCRTtBRzkzQkY7RUFFQyxtQkFBbUI7RUFDbkIsb0JBQW9CO0VBQ3BCLFVBQVU7QUgrM0JYOztBRzUzQkE7RUFDQyxxQkFBcUI7RUFDckIsa0JBQWtCO0VBQ2xCLG1CQUFtQjtBSCszQnBCOztBRzMzQkE7OztFSGc0QkU7QUczM0JGO0VBQ0MsbUJBQW1CO0VBQ25CLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLHFCQUFxQjtFQUNyQixvQ0p3RG9DO0FDcTBCckM7O0FHMTNCQTs7RUFFQyxnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLG9DSmlEb0M7QUM0MEJyQzs7QUczM0JDO0VBTkQ7O0lBT0UsaUJBQWlCO0VIZzRCakI7QUFDRjs7QUc3M0JBOztFQUVDLG1CQUFtQjtBSGc0QnBCOztBRzczQkE7O0VBRUMsbUJBQW1CO0FIZzRCcEI7O0FHNzNCQTs7RUFFQyxjQUFjO0FIZzRCZjs7QUc3M0JBOztFQUVDLHlCQUF5QjtBSGc0QjFCOztBRzUzQkE7O0VIZzRCRTtBRzUzQkY7OztFSGc0QkU7QUc1M0JGO0VBQ0MsU0FBUztFQUNULDZCSkx5QjtFSU16QixrQ0FBa0M7RUFDbEMsdUJBQXVCO0VBQUU7RUFDekIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUFFO0FIZzRCcEI7O0FHNzNCQTs7RUhpNEJFO0FHOTNCRjs7RUFFQyxvQkFBb0I7QUhnNEJyQjs7QUc3M0JBOztFSGk0QkU7QUd0NEJGOztFQVVDLG1CQUFtQjtBSGc0QnBCOztBRzczQkE7OztFSGs0QkU7QUc5M0JGO0VBQ0MsbUJBQW1CO0VBQUU7RUFDckIsMEJBQTBCO0VBQUU7RUFDNUIsaUNBQWlDO0VBQUU7QUhtNEJwQzs7QUdoNEJBOztFSG80QkU7QUdqNEJGO0VBQ0Msa0JBQWtCO0FIbTRCbkI7O0FHaDRCQTs7RUhvNEJFO0FHajRCRjtFQUNDLG1CQUFtQjtFQUNuQixjSjVEb0I7QUMrN0JyQjs7QUdoNEJBOztFSG80QkU7QUdqNEJGO0VBQ0MsY0FBYztBSG00QmY7O0FHaDRCQTs7RUhvNEJFO0FHajRCRjs7RUFFQyxjQUFjO0VBQ2QsY0FBYztFQUNkLGtCQUFrQjtFQUNsQix3QkFBd0I7QUhtNEJ6Qjs7QUdoNEJBO0VBQ0MsV0FBVztBSG00Qlo7O0FHaDRCQTtFQUNDLGVBQWU7QUhtNEJoQjs7QUcvM0JBOztFSG00QkU7QUcvM0JGO0VBQ0MsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixvQkp6RGlCO0VJMERqQiw0QkFBNEI7RUFDNUIsNkJBQTZCO0FIaTRCOUI7O0FHdDRCQTtFQVFFLGNKN0Z1QjtFSThGdkIseUJBQXlCO0VBQ3pCLGdCQUFnQjtBSGs0QmxCOztBRzkzQkE7O0VBRUMsWUFBWTtBSGk0QmI7O0FHOTNCQTs7OztFQUlDLFdBQVc7QUhpNEJaOztBSXRxQ0E7OztFSjJxQ0U7QUl0cUNEOzs7O0VBSUEsbUNMa01xQztFS2pNckMsa0JBQWtCO0FKd3FDbkI7O0FJcnFDQTtFQUNDLHlCQUFrRDtFQUNsRCxjTHdLbUI7RUt2S25CLGVBQWU7RUFDZixxQkFBcUI7QUp3cUN0Qjs7QUlycUNBO0VBQ0MseUJBQWtEO0VBQ2xELGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsdUJMZ01pQjtFSy9MakIsY0FBYztFQUNkLGlCQUFpQjtFQUNqQixXQUFXO0VBQ1gscUJBQXFCO0VBQ3JCLHFCQUFxQjtBSndxQ3RCOztBSWpyQ0E7RUFZRSw2QkFBNkI7RUFDN0IsU0FBUztFQUNULGNBQWM7RUFDZCxjQUFjO0VBQ2QsVUFBVTtBSnlxQ1o7O0FLN3NDQTs7O0VMa3RDRTtBSzVzQ0Y7O0VMK3NDRTtBSzVzQ0Y7RUFDQyw2RkFBd0Y7RUFDckYscUJBQXFCO0VBQ3hCLHVCQUF1QjtFQUN2QixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGNBQWM7RUFDWCxnQkFBZ0I7RUFDbkIsaUJBQWlCO0VBQ2pCLHFCQUFxQjtFQUNyQixtQkFBbUI7RUFDaEIsZUFBZTtFQUNsQixlQUFlO0VBQ1osMENBQWtDO0FMOHNDdEM7O0FLM3RDQTtFQWdCRSxpQ0FBaUM7RUFDakMscUJBQXFCO0VBQ3JCLFlBQVk7QUwrc0NkOztBSzVzQ0M7RUFDQyxvQkFBb0I7RUFDcEIsaUJBQWlCO0FMK3NDbkI7O0FLM3NDQztFQUNDLDhHQUF5RztBTDhzQzNHOztBSy9zQ0U7RUFJVSxpQ0FBaUM7QUwrc0M3Qzs7QUszc0NDO0VBQ0Msb0dBQXFIO0FMOHNDdkg7O0FLL3NDRTtFQUlDLGlDQUFpQztBTCtzQ3BDOztBSzNzQ0M7RUFDQyxtQkFBbUI7RUFDbkIsZ0JBQWdCO0FMOHNDbEI7O0FNcHdDQTs7O0VOeXdDRTtBTXB3Q0Y7O0VBRUMsdUJQaU5pQjtBQ3FqQ2xCOztBTW53Q0E7RUFDQyxTQUFTO0VBQ1QsVUFBVTtBTnN3Q1g7O0FNbndDQTs7RUFFQyxjQUFjO0VBQ2QsbUJBQW1CO0VBQ25CLG9CQUFvQjtFQUNwQixVQUFVO0FOc3dDWDs7QU1ud0NBOzs7OztFTjB3Q0U7QU1wd0NGOzs7OztFQUtDLGNBQW1DO0VBQUU7RUFDckMsYUFBYTtFQUFFO0VBQ2YsU0FBUztFQUFFO0VBQ1gsaUJBQWlCO0FOeXdDbEI7O0FNdHdDQTs7RU4wd0NFO0FNdndDRjtFQUNDLGlCQUFpQjtBTnl3Q2xCOztBTXR3Q0E7Ozs7O0VONndDRTtBTXZ3Q0Y7O0VBRUMsb0JBQW9CO0FOeXdDckI7O0FNdHdDQTs7O0VBR0MsY0FBYztFQUNkLGdCQUFnQjtFQUNoQix1QkFBdUI7RUFDdkIsV0FBVztFQUNYLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIseUJQMEh5QjtBQytvQzFCOztBTXZ3Q0M7RUFYRDs7O0lBWUUsbUJBQW1CO0VONndDbkI7QUFDRjs7QU0xd0NBO0VBQ0MsV0FBVztFQUNSLFlBQVk7QU42d0NoQjs7QU0xd0NBOzs7RU4rd0NFO0FNM3dDRjtFQUNDLGlCQUFpQjtBTjZ3Q2xCOztBTTF3Q0E7O0VBRUMsdUJBQXVCO0FONndDeEI7O0FNMXdDQTtFQUNDLFlBQVk7RUFDWixjQUFjO0FONndDZjs7QUFFQTs7O0VNendDQyxlQUFlO0VBQ2YscUJBQXFCO0VBQ3JCLFlBQVk7RUFDWix1QkFBdUI7RUFDdkIsVUFBVTtFQUNWLFdBQVc7QU42d0NaOztBTTF3Q0E7Ozs7RU5neENFO0FBQ0Y7O0VNMXdDQyxZQUFZO0FONndDYjs7QU0xd0NBOzs7RUFHQyxxQ0FBcUM7RUFDckMsbUZBQW1GO0VBQ25GLFVBQVU7RUFDVix1QkFBdUI7QU42d0N4Qjs7QUFFQTs7O0VNendDQyxvQkFBb0I7RUFDcEIsK0NBQStDO0VBQy9DLHdCQUF3QjtBTjZ3Q3pCOztBTXp3Q0E7O0VONndDRTtBTTF3Q0Y7Ozs7RUFJQyxrQkFBa0I7RUFDbEIsVUFBVTtBTjR3Q1g7O0FNeHdDQTs7RU40d0NFO0FNendDRjs7OztFQUlDLDhCQUE4QjtBTjJ3Qy9COztBTXZ3Q0E7OztFTjR3Q0U7QU14d0NGO0VBQ0MsMEJBQTBCO0VBQUU7RUFDNUIsYUFBYTtFQUFFO0FONHdDaEI7O0FNeHdDQTs7RU40d0NFO0FNendDRjtFQUNDLHFCQUFxQjtFQUNyQixzQkFBc0I7RUFDdEIsV0FBVztBTjJ3Q1o7O0FNdndDQTs7RU4yd0NFO0FNeHdDRjtFQUNDLHFCQUFxQjtFQUNyQixtQkFBbUI7QU4wd0NwQjs7QU10d0NBOztFTjB3Q0U7QU1yd0NEOzs7R055d0NFO0FBQ0g7RU1yd0NDLDZCQUE2QjtFQUFFO0VBQy9CLG9CQUFvQjtFQUFFO0FOeXdDdkI7O0FNdHdDQTs7OztFTjR3Q0U7QUFDRjs7RU10d0NDLHdCQUF3QjtBTnl3Q3pCOztBTXJ3Q0E7O0VOeXdDRTtBTXR3Q0Y7RUFDQyxVQUFVO0VBQ1Ysc0JBQXNCO0VBQ3RCLG9CQUFvQjtFQUNwQix1QkFBdUI7RUFDdkIsK0JBQStCO0FOd3dDaEM7O0FNdHdDQztFQVBEO0lBUUUsVUFBVTtFTjB3Q1Y7QUFDRjs7QU10d0NBOztFTjB3Q0U7QU12d0NGO0VBQ0MsZUFBZTtFQUNmLGNQakR3QjtFT2tEeEIsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsZ0JBQWdCO0FOeXdDakI7O0FNL3dDQTtFQVNFLGFQeER1QjtBQ2swQ3pCOztBTW54Q0E7RUFhRSxjQUFzQztBTjB3Q3hDOztBTXZ4Q0E7RUFnQkcsYUFBcUM7QU4yd0N4Qzs7QU9uZ0RBOzs7RVB3Z0RFO0FPbmdERjtFQUNDLHlCQUF5QjtFQUN6QixpQkFBaUI7RUFDakIsdUJSZ05pQjtFUS9NakIsZUFBZTtFQUNmLFdBQVc7QVBxZ0RaOztBT2xnREE7O0VBRUMsZ0JBQWdCO0VBQ2hCLGNBQWM7QVBxZ0RmOztBT2xnREE7RUFDQyxvQ1JzS3lCO0VRckt6QixpQkFBaUI7RUFDakIsc0JBQXNCO0FQcWdEdkI7O0FPbGdEQTtFQUNDLDZCUmdLeUI7RVEvSnpCLG1CQUFtQjtBUHFnRHBCOztBT2xnREE7O0VQc2dERTtBT25nREY7RUFDQyx5QkFBa0Q7QVBxZ0RuRDs7QU9qZ0RBOztFUHFnREU7QU9sZ0RGOztFQUVDLGVBQWU7QVBvZ0RoQjs7QUF0aURBO0FRVEE7OztFUnFqREU7QVEvaURGOztFUmtqREU7QVE5aURGO0VBQ0MsbUJBQW1CO0FSZ2pEcEI7O0FRN2lEQTtFQUNDLG1CQUFtQjtFQUNuQixnQkFBZ0I7QVJnakRqQjs7QVE5aURDO0VBSkQ7SUFLRSxtQkFBbUI7RVJrakRuQjtBQUNGOztBUTlpREE7O0VSa2pERTtBUTlpREY7RUFDQyxjVDRKd0I7QUNvNUN6Qjs7QVE1aURBOztFUmdqREU7QVE1aURGO0VBQ0Msa0JBQWtCO0FSOGlEbkI7O0FRM2lEQTtFQUNDLGlCQUFpQjtBUjhpRGxCOztBUTNpREE7RUFDQyxnQkFBZ0I7QVI4aURqQjs7QVEzaURBO0VBQ0M7SUFDQyxpQkFBaUI7RVI4aURqQjtBQUNGOztBUTFpREE7O0VSOGlERTtBUTFpREY7RUFDQyxXQUFXO0FSNGlEWjs7QVF6aURBO0VBQ0MsV0FBVztFQUNYLGlCQUFpQjtFQUNqQixrQkFBa0I7QVI0aURuQjs7QVF6aURBO0VBQ0MsWUFBWTtBUjRpRGI7O0FReGlEQTs7RVI0aURFO0FReGlERjtFQUNDLGFBQWE7QVIwaURkOztBUXZpREE7RUFDQyxnQkFBZ0I7QVIwaURqQjs7QVF2aURBO0VBQ0Msb0JUZ0lpQjtBQzA2Q2xCOztBUXZpREE7RUFDQyx1QlQ0SGlCO0FDODZDbEI7O0FRdmlEQTtFQUNDLG9CQUFvQjtBUjBpRHJCOztBUXZpREE7RUFDQyxrQkFBa0I7QVIwaURuQjs7QVF0aURBOztFUjBpREU7QVF0aURGO0VBQ0MsY0FBYztBUndpRGY7O0FRcmlEQTtFQUNDLGlCQUFpQjtBUndpRGxCOztBUXJpREE7RUFDQyxxQlRtR2lCO0FDcThDbEI7O0FRcmlEQTtFQUNDLGtCQUFrQjtBUndpRG5COztBUXJpREE7RUFDQyxnQkFBZ0I7QVJ3aURqQjs7QVFyaURBO0VBQ0Msd0JUdUZpQjtBQ2k5Q2xCOztBUXJpREE7RUFDQyxxQkFBcUI7QVJ3aUR0Qjs7QVFyaURBO0VBQ0MsbUJBQW1CO0FSd2lEcEI7O0FRcGlEQTs7RVJ3aURFO0FRcGlERjs7Ozs7OztFUjRpREU7QVFwaURGO0VBQ0ksU0FBUztFQUNULG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixVQUFVO0VBQ1Ysa0JBQWtCO0VBQ2xCLG1CQUFtQjtFQUFFO0VBQ3JCLFVBQVU7QVJ1aURkOztBUXBpREE7RUFDQyxrQkFBa0I7QVJ1aURuQjs7QVFwaURBOzs7RVJ5aURFO0FRcmlERjs7RUFFSSxVQUFVO0VBQ1YsWUFBWTtFQUNaLFNBQVM7RUFDVCxpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLG9CQUFvQjtFQUNwQixXQUFXO0FSdWlEZjs7QVFwaURBOzs7O0VSMGlERTtBQUNGO0VRcmlEQyxhQUFhO0VBQ2Isa0JBQWtCO0FSdWlEbkI7O0FRbmlEQTs7OztFUnlpREU7QVFuaURGOzs7RUFFQyxjQUFjO0VBQ2QsWUFBWTtBUnNpRGI7OztBUXhpREE7O0VBTUMsV0FBVztBUndpRFo7O0FTeHZEQTs7OztFVDh2REU7QVN4dkRGO0VBRUM7OztHVDJ2REU7RVN2dkRGO0lBQ0Msa0NBQWtDO0lBQ2xDLHNCQUFzQjtJQUN0QiwyQkFBMkI7SUFDM0IsNEJBQTRCO0VUeXZENUI7RVN0dkREOztHVHl2REU7RVN0dkRGO0lBQ0MsYUFBYTtFVHd2RGI7RVNydkREOztHVHd2REU7RVNydkRGOztJQUVDLDBCQUEwQjtFVHV2RDFCO0VTcHZERDs7R1R1dkRFO0VTcHZERjtJQUNDLDRCQUE0QjtFVHN2RDVCO0VTbnZERDs7R1RzdkRFO0VTbnZERjtJQUNDLFdBQVc7RVRxdkRYO0VTbHZERDs7R1RxdkRFO0VTbHZERjs7SUFFQyxVQUFVO0lBQ1YsU0FBUztFVG92RFQ7RVNqdkREOztHVG92REU7RVNqdkRGO0lBQ0MsdUJBQXVCO0VUbXZEdkI7RVNodkREOzs7R1RvdkRFO0VTaHZERjs7SUFFQyxrQkFBa0I7SUFDbEIsd0JBQXdCO0VUa3ZEeEI7RVMvdUREOztHVGt2REU7RVMvdURGO0lBQ0MsMkJBQTJCO0VUaXZEM0I7RVM5dUREOztHVGl2REU7RVM5dURGOztJQUVDLHdCQUF3QjtFVGd2RHhCO0FBQ0Y7O0FEdjBEQTtBQUNBO0VBQ0MsMkJBQTJCO0VBQzNCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLHVLQUF1SztFQUN2SyxvRUFBb0U7QVdDckU7O0FYQ0E7QUFDQTtFQUNDLDJCQUEyQjtFQUMzQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQix1S0FBdUs7RUFDdkssNERBQTREO0FXRTdEOztBWEFBO0FBQ0E7RUFDQywyQkFBMkI7RUFDM0Isa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsdUtBQXVLO0VBQ3ZLLG1IQUFtSDtBV0dwSDs7QVhEQTtBQUNBO0VBQ0MsMkJBQTJCO0VBQzNCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLG9LQUFvSztFQUNwSyx5S0FBeUs7QVdJMUs7O0FYRkE7QUFDQTtFQUNDLHdCQUF3QjtFQUN4QixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQiwySkFBMko7RUFDM0osc0ZBQXNGO0FXS3ZGOztBWEhBO0FBQ0E7RUFDQyx3QkFBd0I7RUFDeEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsMkpBQTJKO0VBQzNKLDREQUE0RDtBV003RDs7QVhKQTtBQUNBO0VBQ0Msd0JBQXdCO0VBQ3hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLDJKQUEySjtFQUMzSiwwQkFBMEI7QVdPM0I7O0FYTEE7QUFDQTtFQUNDLHdCQUF3QjtFQUN4QixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQiwySkFBMko7RUFDM0osMEJBQTBCO0FXUTNCOztBWE5BO0FBQ0E7RUFDQyx3QkFBd0I7RUFDeEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsMkpBQTJKO0VBQzNKLDREQUE0RDtBV1M3RDs7QVhQQTtBQUNBO0VBQ0Msd0JBQXdCO0VBQ3hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLDJKQUEySjtFQUMzSixtSEFBbUg7QVdVcEg7O0FYUkE7QUFDQTtFQUNDLHdCQUF3QjtFQUN4QixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQix3SkFBd0o7RUFDeEoseUtBQXlLO0FXVzFLOztBWFRBO0FBQ0E7RUFDQyx3QkFBd0I7RUFDeEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIseUpBQXlKO0VBQ3pKLHNGQUFzRjtBV1l2Rjs7QVhWQTtBQUNBO0VBQ0Msd0JBQXdCO0VBQ3hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLHlKQUF5SjtFQUN6Siw0REFBNEQ7QVdhN0Q7O0FYWEE7QUFDQTtFQUNDLHdCQUF3QjtFQUN4QixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQix5SkFBeUo7RUFDekosMEJBQTBCO0FXYzNCOztBWFpBO0FBQ0E7RUFDQyx3QkFBd0I7RUFDeEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIseUpBQXlKO0VBQ3pKLDBCQUEwQjtBV2UzQjs7QVhiQTtBQUNBO0VBQ0Msd0JBQXdCO0VBQ3hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLHlKQUF5SjtFQUN6Siw0REFBNEQ7QVdnQjdEOztBWGRBO0FBQ0E7RUFDQyx3QkFBd0I7RUFDeEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIseUpBQXlKO0VBQ3pKLG1IQUFtSDtBV2lCcEg7O0FYZkE7QUFDQTtFQUNDLHdCQUF3QjtFQUN4QixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixzSkFBc0o7RUFDdEoseUtBQXlLO0FXa0IxSzs7QUNsTEE7RUFDSSx5Q1prS2dCO0FXbUJwQjs7QUNsTEE7RUFDSSxrQkFBa0I7QURxTHRCOztBQ2xMQTtFQUNJLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsa0JBQWtCO0FEcUx0Qjs7QUVoTUE7RUFDSSxjQUFjO0VBQ2QsV0FBVztFQUNYLFlBQVk7RUFDWiwrQkFBK0I7QUZtTW5DOztBRS9MQTtFQUdRLFdBQVc7QUZnTW5COztBRW5NQTtFQU9RLGlCQUFpQjtBRmdNekI7O0FFM0xTO0VBRU8sYWJpSkk7QVc0Q3BCOztBRXpMUztFQUVPLFdBQVc7QUYyTDNCOztBRXRMSztFQUVPLGFibUlTO0FXcURyQjs7QUUxTEs7RUFRVyxhYjZISztBV3lEckI7O0FFaExBO0VBQ0ksZUFBZTtBRm1MbkI7O0FFakxJO0VBQ0kseUJBQXlCO0FGb0xqQzs7QUd2T0E7Ozs7O2tDSDhPa0M7QUd2T2xDO0VBRUUsMkJBQXFCO0VBQ3JCLDJCQUFzQjtFQUN0QiwyQkFBdUI7RUFDdkIsMkJBQXNCO0VBR3RCLHVDQUFrQztBSHNPcEM7O0FHbk9BO0VBQ0Usa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQixvQkFBb0I7RUFDcEIsb0NBQW9DO0VBQ3BDLHFEQUFxRDtFQUNyRCx5QmRrS3dCO0FXb0UxQjs7QUc1T0E7RUFTSSw2QmQrSnNCO0FXd0UxQjs7QUduT0E7RUFDRSxrQkFBa0I7RUFDbEIscUJBQXFCO0VBQ3JCLHdFQUF3RTtFQUN4RSx5RUFBeUU7QUhzTzNFOztBR25PQTtFQUNFLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsY0FBYztFQUNkLHlDQUF5QztFQUN6Qyw2RUFBNkU7RUFDN0Usa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZix5QkFBeUI7RUFDekIsaUJBQWlCO0VBQ2pCLHNEQUFzRDtBSHNPeEQ7O0FHcE9FO0VBQ0UsY2Q4SGlCO0FXeUdyQjs7QUdwT0U7RUFDRSx5QkFBZ0Q7QUh1T3BEOztBR3hQQTs7RUFzQkksNkJBQTZCO0FIdU9qQzs7QUduT0E7RUFDRSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLE1BQU07RUFDTixXQUFXO0VBQ1gseUNBQXlDO0VBRXpDLG9EQUEyRDtFQUUzRCx3RUFBd0U7RUFDeEUseUVBQXlFO0VBQ3pFLDREQUE0RDtBSG9POUQ7O0FHbE9FO0VBQ0UsMkJBQTJCO0FIcU8vQjs7QUluVEE7RUFDSSxlQUFlO0VBQ2YsYUFBYTtFQUNiLGVBQWU7RUFDZixXQUFXO0VBQ1gsU0FBUztFQUNULFVBQVU7RUFDVixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLDBDQUFrQztFQUNsQyxVQUFVO0FKc1RkOztBS3pUSTtFRFBKO0lBYVEsV0FBVztJQUNYLFVBQVU7RUp3VGhCO0FBQ0Y7O0FJdFRJO0VBQ0k7SUFDSSxpQkFBaUI7SUFDakIsVUFBVTtJQUNWLFlBQVk7SUFDWixVQUFVO0lBQ1YsVUFBVTtFSnlUcEI7RUl2VE07SUFDSSxpQkFBaUI7SUFDakIsVUFBVTtJQUNWLFlBQVk7SUFDWixVQUFVO0lBQ1YsVUFBVTtFSnlUcEI7QUFDRjs7QUl0VEk7RUFDSTtJQUNJLGlCQUFpQjtJQUNqQixVQUFVO0lBQ1YsWUFBWTtJQUNaLFVBQVU7SUFDVixVQUFVO0VKeVRwQjtFSXZUTTtJQUNJLGlCQUFpQjtJQUNqQixVQUFVO0lBQ1YsWUFBWTtJQUNaLFVBQVU7SUFDVixVQUFVO0VKeVRwQjtBQUNGOztBSXRUSTtFQUNJLHFDQUFxQztFQUNyQyxnQkFBZ0I7RUFDaEIsUUFBUTtFQUNSLFNBQVM7QUp5VGpCOztBS3pXSTtFRDRDQTtJQU9RLDBDQUEwQztFSjJUcEQ7QUFDRjs7QUl4VEk7RUFDSSxrQkFBa0I7RUFDbEIsU0FBUztFQUNULFVBQVU7RUFDVixZQUFZO0VBQ1osVUFBVTtFQUNWLFdBQVc7QUoyVG5COztBSXhUSTtFQUNJLFdBQVc7RUFDWCxvQkFBb0I7QUoyVDVCOztBSTdUSztFQUtPLG9CQUFvQjtBSjRUaEM7O0FJeFRJO0VBQ0ksV0FBVztFQUNYLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2IsdUJBQXVCO0FKMlQvQjs7QUl2VEE7RUFDSSxlQUFlO0VBQ2YsVUFBVTtFQUNWLFlBQVk7RUFDWixXQUFXO0VBQ1gsTUFBTTtFQUNOLE9BQU87RUFDUCxxQ0FBNEI7QUowVGhDOztBSXhUSTtFQUNJO0lBQ0ksWUFBWTtJQUNaLFdBQVc7SUFDWCxxQ0FBNEI7SUFDNUIsVUFBVTtFSjJUcEI7RUl6VE07SUFDSSxZQUFZO0lBQ1osV0FBVztJQUNYLGtDQUE0QjtJQUM1QixVQUFVO0VKMlRwQjtBQUNGOztBSXhUSTtFQUNJLG1DQUFvQztFQUNwQyxXQUFXO0VBQ1gsUUFBUTtFQUNSLFNBQVM7QUoyVGpCOztBTTlhQTtFQUNJLGlCQUFpQjtFQUNqQix3QkFBd0I7QU5pYjVCOztBTW5iQTtFQUtRLGlCQUFpQjtBTmtiekI7O0FNdmJBO0VBU1EsZUFBZTtBTmtidkI7O0FPNWJBO0VBQ0ksVUFBVTtFQUNWLFlBQVk7RUFDWixhQUFhO0VBQ2IsZUFBZTtFQUNmLHVCQUF1QjtBUCtiM0I7O0FLN2JJO0VFUEo7SUFRUSxVQUFVO0VQaWNoQjtBQUNGOztBTy9iSTtFQUNJLFdBQVc7RUFDWCxhQUFhO0VBQ2IsZUFBZTtFQUNmLHVCQUF1QjtBUGtjL0I7O0FPaGNRO0VBQ0ksV0FBVztFQUNYLGFBQWE7RUFDYixlQUFlO0VBQ2YsdUJBQXVCO0VBQ3ZCLGFBQWE7QVBtY3pCOztBS2xkSTtFRVVJO0lBUVEsVUFBVTtJQUNWLGFBQWE7SUFDYixxQkFBcUI7RVBxY25DO0FBQ0Y7O0FPbGNRO0VBQ0ksVUFBVTtBUHFjdEI7O0FLOWRJO0VFd0JJO0lBS1EsVUFBVTtFUHNjeEI7QUFDRjs7QVEzZUE7RUFDSSxlQUFlO0VBQ2YsVUFBVTtFQUNWLFlBQVk7RUFDWixhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLFVBQVU7RUFDViw4QkFBOEI7RUFDOUIsK0JBQStCO0FSOGVuQzs7QVE1ZUk7RUFDSSxpQkFBaUI7RUFDakIsVUFBVTtBUitlbEI7O0FRamZLO0VBS08sV0FBVztFQUNYLFdBQVc7QVJnZnZCOztBUTVlSTtFQUNJLGFBQWE7RUFDYixlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCw4RUFBOEU7RUFDOUUsVUFBVTtFQUNWLDBCQUEwQjtFQUMxQixZQUFZO0VBQ1osVUFBVTtFQUVWLDJCQUEyQjtFQUMzQixxQkFBcUI7RUFDckIsVUFBVTtBUjhlbEI7O0FRNWVRO0VBQ0ksYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixlQUFlO0VBQ2YsV0FBVztFQUNYLGVBQWU7QVIrZTNCOztBS2hoQkk7RUc0Qkk7SUFRUSxhQUFhO0VSaWYzQjtBQUNGOztBUS9lWTtFQUNJLFVBQVU7RUFDVixrQkFBa0I7RUFDbEIsa0JBQWtCO0FSa2ZsQzs7QUs1aEJJO0VHdUNRO0lBT1EsVUFBVTtJQUNWLGdCQUFnQjtFUm1mbEM7RVEzZlc7SUFXVyxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLHVCQUF1QjtJQUN2QixXQUFXO0lBQ1gsVUFBVTtJQUNWLFFBQVE7SUFDUixRQUFRO0VSbWY5QjtFUXBnQlc7SUFxQlcsYUFBYTtFUmtmbkM7RVF2Z0JXO0lBeUJXLGVBQWU7RVJpZnJDO0FBQ0Y7O0FRM2dCYTtFQThCTyxRQUFRO0FSaWY1Qjs7QVEvZ0JhO0VBaUNPLFFBQVE7QVJrZjVCOztBSzFqQkk7RUd1Q1M7SUFvQ1csUUFBUTtFUm9mOUI7QUFDRjs7QVF6aEJhO0VBd0NPLFFBQVE7QVJxZjVCOztBS3BrQkk7RUd1Q1M7SUEyQ1csUUFBUTtFUnVmOUI7QUFDRjs7QVFuaUJhO0VBK0NPLFFBQVE7QVJ3ZjVCOztBUXBmaUI7RUFFTyxZQUFZO0VBQ1osU0FBUztBUnNmakM7O0FLbmxCSTtFRzBGYTtJQU1XLGVBQWU7RVJ3ZnpDO0FBQ0Y7O0FRcGZnQjtFQUNJLGdCQUFnQjtFQUNoQixpQkFBaUI7QVJ1ZnJDOztBUWpmb0I7RUFDSSxpQkFBaUI7QVJvZnpDOztBUXJmcUI7RUFJTyxZQUFZO0FScWZ4Qzs7QVF6ZnFCO0VBUU8sWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsY0FBYztFQUNkLDZDQUF1RTtBUnFmbkc7O0FRN2VLO0VBRU8sZUFBZ0I7QVIrZTVCOztBUTFlQTtFQUNJLHFEQUE0RDtFQUM1RCwwQkFBMEI7RUFDMUIsK0JBQStCO0VBQy9CLHFCQUFxQjtFQUNyQiw4QkFBOEI7RUFDOUIsNEJBQTRCO0FSNmVoQzs7QVExZUk7RUFDSSxrQkFBa0I7RUFDbEIsOEJBQThCO0FSNmV0Qzs7QVExZUk7RUFDSSxlQUFlO0VBQ2YseUJBQXlCO0FSNmVqQzs7QVF6ZUk7RUFDSSxlQUFlO0VBQ2YsNEJBQTRCO0FSNGVwQzs7QVF4ZUE7RUFDSSwyQkFBMkI7QVIyZS9COztBUXhlQTtBQUVBO0VBQ0ksa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQixXQUFXO0VBQ1gsWUFBWTtFQUNaLFdBQVc7RUFDWCxvQkFBb0I7RUFDcEIsZ0JBQWdCO0FSMGVwQjs7QVF0ZUE7RUFDSSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLFdBQVc7RUFDWCw2QkFBNkI7RUFDN0IseUJBQXlCO0VBQ3pCLHFCQUFxQjtFQUNyQiw2QkFBNkI7RUFDN0IseUJBQXlCO0VBQ3pCLHFCQUFxQjtBUnllekI7O0FRdGVBO0VBQ0ksWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixxQkFBcUI7RUFDckIsc0JBQXNCO0VBQ3RCLGlCQUFpQjtBUnllckI7O0FRdGVBO0VBQ0ksa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxZQUFZO0VBQ1osZUFBZTtFQUNmLG9CQUFvQjtFQUNwQixnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLFNBQVM7RUFDVCxVQUFVO0FSeWVkOztBUXRlQTs7RUFFSSxhQUFhO0FSeWVqQjs7QVF0ZUE7RUFDSSxRQUFRO0VBQ1IsTUFBTTtFQUNOLGVBQWU7RUFDZixZQUFZO0FSeWVoQjs7QVF0ZUE7OzttRFIyZW1EO0FRdGVuRDs7OztFUjJlRTtBUXJlRjtFQUNJO0lBQ0kseUJBQXlCO0lBQ3pCLHFCQUFxQjtJQUNyQixVQUFVO0VSdWVoQjtFUXJlRTtJQUNJLHdCQUF3QjtJQUN4QixxQkFBcUI7SUFDckIsVUFBVTtFUnVlaEI7QUFDRjs7QVFuZUE7RUFDSTtJQUNJLHdCQUF3QjtJQUN4QixxQkFBcUI7SUFDckIsVUFBVTtFUnNlaEI7RVFwZUU7SUFDSSwwQkFBMEI7SUFDMUIscUJBQXFCO0lBQ3JCLFVBQVU7RVJzZWhCO0FBQ0Y7O0FRbGVBO0VBQ0ksNkVBQTZFO0VBQzdFLG9CQUFvQjtBUnFleEI7O0FRbGVBO0VBQ0ksOEVBQWdGO0FScWVwRjs7QVN4dkJBO0VBQ0ksWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLG1CQUFtQjtBVDJ2QnZCOztBU3p2Qkk7RUFDSSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sT0FBTztBVDR2QmY7O0FTandCSztFQVFPLFdBQVc7RUFDWCxZQUFZO0FUNnZCeEI7O0FTeHZCSTtFQUNJLFVBQVU7RUFDVixXQUFXO0VBQ1gsVUFBVTtFQUNWLGtCQUFrQjtFQUNsQixjcEJ1SmE7QVdvbUJyQjs7QUs5d0JJO0VJY0E7SUFRUSxVQUFVO0VUNnZCcEI7QUFDRjs7QVMzdkJRO0VBQ0ksNENBQW9DO0FUOHZCaEQ7O0FLeHhCSTtFSXlCSTtJQUlRLGNBQWM7RVRnd0I1QjtBQUNGOztBVXJ5QkE7RUFDSSxZQUFZO0VBQ1osYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsZ0JBQWdCO0FWd3lCcEI7O0FVdHlCSTtFQUNJLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsWUFBWTtBVnl5QnBCOztBVXR5Qkk7RUFDSSxrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLGVBQWU7RUFDZix1QkFBdUI7QVZ5eUIvQjs7QVV2eUJRO0VBQ0ksYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixlQUFlO0VBQ2YsV0FBVztFQUNYLDZDQUFvQztBVjB5QmhEOztBVS95QlM7RUFTTyxrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFlBQVk7RUFDWixVQUFVO0FWMHlCMUI7O0FLbDBCSTtFS1lLO0lBZVcsVUFBVTtFVjR5QjVCO0FBQ0Y7O0FVNXpCUztFQW9CTyxnQkFBZ0I7QVY0eUJoQzs7QVVoMEJTO0VBd0JPLGdCQUFnQjtBVjR5QmhDOztBV3YxQkE7RUFDSSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLHVCQUF1QjtFQUN2QixhQUFhO0VBQ2IsbUJBQW1CO0FYMDFCdkI7O0FXLzFCQTtFQVNRLGdCQUFnQjtFQUNoQixTQUFTO0FYMDFCakI7O0FXcDJCQTtFQWFZLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsb0NBQW9DO0FYMjFCaEQ7O0FXMTJCQTtFQWtCZ0IsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixxQkFBcUI7QVg0MUJyQzs7QVdoM0JBO0VBd0JnQixhQUFhO0FYNDFCN0I7O0FXcDNCQTtFQTRCZ0IsMEJBQTBCO0FYNDFCMUM7O0FZeDNCQTtFQUNJLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsdUJBQXVCO0FaMjNCM0I7O0FZejNCSTtFQUNJLFdBQVc7RUFDWCxhQUFhO0VBQ2IsZUFBZTtFQUNmLHVCQUF1QjtFQUN2QixrQkFBa0I7QVo0M0IxQjs7QVkxM0JRO0VBQ0ksV0FBVztFQUNYLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGdCQUFnQjtFQUNoQixlQUFlO0FaNjNCM0I7O0FLeDRCSTtFT0tJO0lBU1EsaUJBQWlCO0VaKzNCL0I7QUFDRjs7QVl6NEJTO0VBYU8sZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBWmc0QmpDOztBS241Qkk7RU9LSztJQWlCVyxlQUFlO0VaazRCakM7QUFDRjs7QVlwNUJTO0VBc0JPLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsY0FBYztBWms0QjlCOztBS2w2Qkk7RU9LSztJQThCVyxVQUFVO0VabzRCNUI7QUFDRjs7QVluNkJTO0VBbUNPLG9EQUEyRDtFQUMzRCxhQUFhO0FabzRCN0I7O0FLNzZCSTtFT0tLO0lBdUNXLGNBQWM7RVpzNEJoQztBQUNGOztBWTk2QlM7RUE0Q08scURBQTREO0FaczRCNUU7O0FZbDdCUztFQW1ETyxVQUFVO0FabTRCMUI7O0FZaDRCYTtFQUdPLG9EQUErRDtBWmk0Qm5GOztBWXA0QmE7RUFNTyxxREFBZ0U7QVprNEJwRjs7QVk3M0JhO0VBR08sb0RBQTZEO0FaODNCakY7O0FZajRCYTtFQU1PLHFEQUE4RDtBWiszQmxGOztBWTEzQlk7RUFFSSxhQUFhO0FaNDNCN0I7O0FZeDNCUTtFQUNJLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsVUFBVTtFQUNWLGtCQUFrQjtBWjIzQjlCOztBS3Q5Qkk7RU91Rkk7SUFPUSxTQUFTO0lBQ1QsVUFBVTtFWjYzQnhCO0FBQ0Y7O0FhcCtCQTtFQUNJLFdBQVc7RUFDWCxhQUFhO0VBQ2IsYUFBYTtFQUNiLHVCQUF1QjtBYnUrQjNCOztBYTMrQkE7RUFPUSxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLG9EQUEyRDtBYncrQm5FOztBYXIrQkk7RUFDSSxvREFBK0Q7QWJ3K0J2RTs7QWFyK0JJO0VBQ0ksaUJBQWlCO0FidytCekI7O0FjNS9CQTtFQUNJLGFBQWE7RUFDYixlQUFlO0VBQ2YsdUJBQXVCO0FkKy9CM0I7O0FjNy9CSTtFQUNJLFdBQVc7RUFDWCxhQUFhO0VBQ2IsZUFBZTtFQUNmLDhCQUE4QjtBZGdnQ3RDOztBS2xnQ0k7RVNGQTtJQU9RLFVBQVU7RWRrZ0NwQjtBQUNGOztBY2hnQ1E7RUFDSSxXQUFXO0VBQ1gsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0FkbWdDOUI7O0FLaGhDSTtFU1FJO0lBUVEsYUFBYTtJQUNiLFVBQVU7SUFDVixnQkFBZ0I7RWRxZ0M5QjtBQUNGOztBSzloQ0k7RVNjSTtJQWNRLGFBQWE7SUFDYixVQUFVO0VkdWdDeEI7QUFDRjs7QWN2aENTO0VBbUJPLHNCQUFzQjtBZHdnQ3RDOztBYzNoQ1M7RUF1Qk8sV0FBVztFQUNYLFdBQVc7RUFDWCxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixXQUFXO0VBQ1gsVUFBVTtFQUNWLHFFQUE0RTtBZHdnQzVGOztBSzlpQ0k7RVNRSztJQWlDVyxXQUFXO0lBQ1gsVUFBVTtFZDBnQzVCO0FBQ0Y7O0FjdmdDWTtFQUNJLHFFQUFnRjtBZDBnQ2hHOztBY3ZnQ1k7RUFDSSxxRUFBOEU7QWQwZ0M5Rjs7QWN2Z0NZO0VBQ0ksZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixZQUFZO0FkMGdDNUI7O0FLemtDSTtFUzREUTtJQU1RLGdCQUFnQjtFZDRnQ2xDO0FBQ0Y7O0FjbmhDYTtFQVVPLFdBQVc7RUFDWCxZQUFZO0FkNmdDaEM7O0FjeGhDYTtFQWVPLHFDQUFxQztFQUNyQyxZQUFZO0FkNmdDaEM7O0FLemxDSTtFUzREUztJQW1CVyxXQUFXO0VkK2dDakM7QUFDRjs7QWMxZ0NZO0VBQ0ksa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxVQUFVO0VBQ1YsWUFBWTtFQUNaLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsNENBQW9DO0FkNmdDcEQ7O0FLdG1DSTtFUytFUTtJQWFRLFdBQVc7RWQrZ0M3QjtBQUNGOztBYzdoQ2E7RUFpQk8sY0FBYztFQUNkLFlBQVk7RUFDWixvQ3pCaUdpQjtFeUJoR2pCLGNBQWM7QWRnaENsQzs7QWNwaUNhO0VBd0JPLFlBQVk7RUFDWixpQkFBaUI7QWRnaENyQzs7QWUvbkNBO0VBQ0ksV0FBVztFQUNYLGlCQUFpQjtFQUNqQixrQkFBa0I7QWZrb0N0Qjs7QUs5bkNJO0VVUEo7SUFNUSxVQUFVO0Vmb29DaEI7QUFDRjs7QWUzb0NBO0VBVVEscUJBQXFCO0FmcW9DN0I7O0FlL29DQTtFQWFZLHFCQUFxQjtBZnNvQ2pDOztBZWxvQ0k7RUFDSSxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLDJDQUFtQztFQUNuQyxrQkFBa0I7RUFDbEIsa0JBQWtCO0FmcW9DMUI7O0FlMW9DSztFQVFPLFdBQVc7RUFDWCxZQUFZO0VBQ1oscUNBQXFDO0Fmc29DakQ7O0Flam9DSTtFQUNJLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsdUJBQXVCO0VBQ3ZCLDJDQUFtQztFQUNuQyxhQUFhO0VBQ2IsVUFBVTtFQUNWLFlBQVk7RUFDWixrQkFBa0I7QWZvb0MxQjs7QUtycUNJO0VVeUJBO0lBV1EsWUFBWTtJQUNaLFVBQVU7RWZzb0NwQjtBQUNGOztBZXBvQ1E7RUFDSSxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLG9EQUEyRDtFQUMzRCwrQkFBK0I7RUFDL0IsVUFBVTtFQUNWLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsYUFBYTtFQUNiLGNBQWM7QWZ1b0MxQjs7QWVocENTO0VBWU8sa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLGdCQUFnQjtBZndvQ2hDOztBZXBvQ1E7RUFDSSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFVBQVU7QWZ1b0N0Qjs7QWVyb0NZO0VBQ0ksVUFBVTtFQUNWLFdBQVc7RUFDWCxlQUFlO0Fmd29DL0I7O0FlM29DYTtFQU1PLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsWUFBWTtFQUNaLFdBQVc7RUFDWCxNQUFNO0VBQ04sT0FBTztBZnlvQzNCOztBZXBvQ1E7RUFDSSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLFlBQVk7QWZ1b0N4Qjs7QWVwb0NRO0VBQ0ksa0JBQWtCO0FmdW9DOUI7O0FleG9DUztFQUlPLGFBQWE7QWZ3b0M3Qjs7QWdCMXVDQTtFQUNJO0lBQ0ksbUJBQW1CO0lBQ25CLFVBQVU7RWhCNnVDaEI7RWdCM3VDRTtJQUNJLFVBQVU7RWhCNnVDaEI7QUFDRjs7QWdCMXVDQTtFQUNJO0lBQ0ksVUFBVTtFaEI2dUNoQjtFZ0IzdUNFO0lBQ0ksVUFBVTtFaEI2dUNoQjtBQUNGOztBZ0IxdUNBO0VBQ0ksV0FBVztFQUNYLFlBQVk7RUFDWixXQUFXO0VBQ1gsc0JBQXNCO0VBQ3RCLFVBQVU7RUFDVixtQ0FBbUM7QWhCNnVDdkM7O0FnQm52Q0E7RUFTUSxzQkFBc0I7QWhCOHVDOUI7O0FnQnZ2Q0E7RUFhUSxZQUFZO0VBQ1osYUFBYTtFQUNiLHlCQUF5QjtFQUN6QixxQzNCZ0lZO0UyQi9IWixrQkFBa0I7RUFDbEIsV0FBVztFQUNYLG1CQUFtQjtFQUNuQixxREFBcUQ7QWhCOHVDN0Q7O0FnQmx3Q0E7RUF1QlksZ0NBQWdDO0FoQit1QzVDOztBZ0J0d0NBO0VBMkJZLGdDQUFnQztBaEIrdUM1Qzs7QWdCMXdDQTtFQStCWSxnQ0FBZ0M7QWhCK3VDNUM7O0FnQjF1Q0k7RUFDSSxxQkFBcUI7QWhCNnVDN0I7O0FpQnJ5Q0E7RUFDSTtJQUNJLHdDQUF5QztFakJ3eUMvQztFaUJ0eUNFO0lBQ0kseUJBQXlCO0VqQnd5Qy9CO0VpQnR5Q0U7SUFDSSx5QkFBeUI7RWpCd3lDL0I7RWlCdHlDRTtJQUNJLHdDQUF5QztFakJ3eUMvQztBQUNGOztBaUJyeUNBO0VBQ0k7SUFDSSwyQkFBMkI7SUFDM0IsVUFBVTtFakJ3eUNoQjtFaUJ0eUNFO0lBQ0ksd0JBQXdCO0lBQ3hCLFVBQVU7RWpCd3lDaEI7QUFDRjs7QWlCcHlDQTtFQUNJLFlBQVk7RUFDWixlQUFlO0VBQ2YsU0FBUztFQUNULDJCQUEyQjtFQUMzQiw4QkFBOEI7RUFDOUIsWUFBWTtFQUNaLFVBQVU7RUFDVixjQUFjO0VBQ2Qsc0ZBQWlGO0VBQ2pGLFlBQVk7RUFDWiwwQ0FBNEI7RUFDNUIsYUFBYTtFQUNiLGVBQWU7RUFDZixtQkFBbUI7RUFDbkIsOEJBQThCO0VBQzlCLHdDQUF5QztFQUN6QyxxQ0FBcUM7QWpCdXlDekM7O0FLNTBDSTtFWW9CSjtJQW9CUSxXQUFXO0lBQ1gsZUFBZTtJQUNmLFVBQVU7RWpCeXlDaEI7QUFDRjs7QWlCaDBDQTtFQTBCUSx3QkFBd0I7QWpCMHlDaEM7O0FpQnZ5Q0k7RUFDSSxxQ0FBcUM7QWpCMHlDN0M7O0FpQnZ5Q0k7RUFDSSxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLDhCQUE4QjtFQUM5QixVQUFVO0VBQ1YsYUFBYTtFQUNiLHVCQUF1QjtBakIweUMvQjs7QWlCeHlDUTtFQUNJLFVBQVU7RUFDVixXQUFXO0FqQjJ5Q3ZCOztBaUJyekNLO0VBY08sZ0JBQWdCO0VBQ2hCLFVBQVU7QWpCMnlDdEI7O0FpQjF6Q0s7RUFtQk8sYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsVUFBVTtFQUNWLDZDQUF1RTtFQUN2RSxvQ0FBb0M7QWpCMnlDaEQ7O0FpQnZ5Q0k7RUFDSSxZQUFZO0VBQ1osV0FBVztBakIweUNuQjs7QWlCeHlDUTtFQUNJLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0FqQjJ5QzVCOztBaUJ6eUNZO0VBQ0ksVUFBVTtFQUNWLFlBQVk7RUFDWixhQUFhO0VBQ2IsMkJBQTJCO0VBQzNCLG1CQUFtQjtFQUNuQix5Q0FBMEM7QWpCNHlDMUQ7O0FpQjF5Q2dCO0VBQ0ksYUFBYTtBakI2eUNqQzs7QWlCdHpDYTtFQWFPLFVBQVU7RUFDVixXQUFXO0VBQ1gsZUFBZTtBakI2eUNuQzs7QWlCNXpDYTtFQW1CTyxlQUFlO0VBQ2YsZ0JBQWdCO0FqQjZ5Q3BDOztBaUIxeUNnQjtFQUNJLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsYUFBYTtFQUNiLGNBQWM7RUFDZCxlQUFlO0FqQjZ5Q25DOztBaUJsekNpQjtFQVFPLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLFlBQVk7RUFDWixXQUFXO0FqQjh5Q25DOztBaUIxekNpQjtFQWdCTyxXQUFXO0VBQ1gsWUFBWTtBakI4eUNwQzs7QWlCdnlDUTtFQUNJLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsY0FBYztFQUNkLFlBQVk7QWpCMHlDeEI7O0FpQjl5Q1M7RUFPTyxTQUFTO0FqQjJ5Q3pCOztBaUJ2eUNRO0VBQ0ksV0FBVztFQUNYLGFBQWE7RUFDYiw2QkFBNkI7QWpCMHlDekM7O0FpQjd5Q1M7RUFNTyxlQUFlO0VBQ2YsWUFBWTtBakIyeUM1Qjs7QWlCbDdDQTtFQTZJUSxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxRQUFRO0VBQ1IsV0FBVztBakJ5eUNuQjs7QWlCdHlDSztFQUdPLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsU0FBUztFQUNULFFBQVE7RUFDUixXQUFXO0FqQnV5Q3ZCOztBaUI5eUNLO0VBV08sbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixXQUFXO0VBQ1gsYUFBYTtBakJ1eUN6Qjs7QWtCcCtDQTtFQUNJLGFBQWE7RUFDYixlQUFlO0VBQ2YsdUJBQXVCO0VBQ3ZCLGtCQUFrQjtFQUNsQixvREFBc0U7RUFDdEUsYzdCMktpQjtBVzR6Q3JCOztBa0JyK0NJO0VBQ0ksV0FBVztFQUNYLFlBQVk7RUFDWixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixnQkFBZ0I7RUFDaEIsa0JBQWtCO0FsQncrQzFCOztBa0J0K0NRO0VBQ0ksa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxZQUFZO0FsQnkrQ3hCOztBa0J0K0NRO0VBQ0ksa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixlQUFlO0VBQ2YsdUJBQXVCO0FsQnkrQ25DOztBa0J2K0NZO0VBQ0ksa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCw2Q0FBb0M7QWxCMCtDcEQ7O0FrQjcrQ2E7RUFNTyxZQUFZO0VBQ1osWUFBWTtFQUNaLFVBQVU7QWxCMitDOUI7O0FrQm4vQ2E7RUFZTyxnQkFBZ0I7QWxCMitDcEM7O0FrQnYvQ2E7RUFnQk8sZ0JBQWdCO0FsQjIrQ3BDOztBa0JyK0NJO0VBQ0ksa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixhQUFhO0VBQ2IsVUFBVTtFQUNWLGFBQWE7RUFDYixlQUFlO0VBQ2YsOEJBQThCO0FsQncrQ3RDOztBSzNoREk7RWE0Q0E7SUFVUSx5QkFBeUI7RWxCMCtDbkM7QUFDRjs7QWtCeCtDUTtFQUNJLFdBQVc7RUFDWCxhQUFhO0VBQ2IsZUFBZTtFQUNmLDhCQUE4QjtBbEIyK0MxQzs7QWtCeitDWTtFQUNJLFVBQVU7QWxCNCtDMUI7O0FLNWlESTtFYStEUTtJQUlRLFVBQVU7RWxCOCtDNUI7QUFDRjs7QWtCbi9DYTtFQVFPLFFBQVE7QWxCKytDNUI7O0FrQnYvQ2E7RUFXTyxRQUFRO0FsQmcvQzVCOztBSzFqREk7RWErRFM7SUFjVyxRQUFRO0VsQmsvQzlCO0FBQ0Y7O0FrQmpnRGE7RUFrQk8sUUFBUTtBbEJtL0M1Qjs7QUtwa0RJO0VhK0RTO0lBcUJXLFFBQVE7RWxCcS9DOUI7QUFDRjs7QWtCM2dEYTtFQXlCTyxRQUFRO0FsQnMvQzVCOztBa0JuL0NpQjtFQUVPLFlBQVk7QWxCcS9DcEM7O0FrQm5oRGE7RUFtQ08sa0JBQWtCO0FsQm8vQ3RDOztBa0J2aERhO0VBc0NXLGdCQUFnQjtFQUNoQixlQUFlO0FsQnEvQ3ZDOztBa0I1aERhO0VBMENlLFlBQVk7QWxCcy9DeEM7O0FrQi8rQ1E7RUFDSSxXQUFXO0VBQ1gsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixlQUFlO0FsQmsvQzNCOztBa0JoL0NZO0VBQ0ksVUFBVTtBbEJtL0MxQjs7QUsxbURJO0Vhc0hRO0lBSVEsVUFBVTtFbEJxL0M1QjtBQUNGOztBa0IxL0NhO0VBUU8sV0FBVztBbEJzL0MvQjs7QUtwbkRJO0Vhc0hTO0lBV1csVUFBVTtFbEJ3L0NoQztBQUNGOztBa0JuL0NRO0VBQ0ksYUFBYTtFQUNiLFdBQVc7RUFDWCx1QkFBdUI7QWxCcy9DbkM7O0FrQnovQ1M7RUFNTyxZQUFZO0FsQnUvQzVCOztBa0JuL0NRO0VBQ0ksV0FBVztBbEJzL0N2Qjs7QWtCbi9DUTtFQUNJLFdBQVc7QWxCcy9DdkI7O0FrQnYvQ1M7RUFJTyxZQUFZO0VBQ1osMEJBQTBCO0VBQzFCLGlCQUFpQjtBbEJ1L0NqQzs7QWtCbC9DUTtFQUNJLFdBQVc7RUFDWCxnQkFBZ0I7QWxCcS9DNUI7O0FrQnYvQ1M7RUFLTyxTQUFTO0FsQnMvQ3pCOztBa0IzL0NTO0VBUVcsZUFBZTtFQUNmLHFCQUFxQjtFQUNyQixnQkFBZ0I7QWxCdS9DcEM7O0FrQmpnRFM7RUFhZSxxQkFBcUI7QWxCdy9DN0M7O0FrQnJnRFM7RUFnQm1CLFVBQVU7RUFDVixXQUFXO0FsQnkvQ3ZDOztBa0JqL0NJO0VBQ0ksa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxVQUFVO0FsQm8vQ2xCOztBbUJ2ckRBO0VBQ0ksa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsZ0JBQWdCO0FuQjByRHBCOztBbUJ4ckRJO0VBQ0ksYUFBYTtFQUNiLDZKQVNxQztFQUNyQyxxRUFBcUU7RUFDckUsOEJBQThCO0VBQzlCLFdBQVc7RUFDWCxlQUFlO0FuQmtyRHZCOztBS2hzREk7RWNEQTtJQWtCUSxxS0FLK0M7SUFDL0MsdUNBQXVDO0lBQ3ZDLHNDQUFzQztJQUN0QyxXQUFXO0VuQitxRHJCO0FBQ0Y7O0FtQjdxRFE7RUFDSSxZQUFZO0VBQ1osV0FBVztFQUNYLGdCQUFnQjtBbkJnckQ1Qjs7QW1CbnJEUztFQU1PLFdBQVc7RUFDWCxZQUFZO0FuQmlyRDVCOztBbUIzcURJO0VBQ0ksYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sV0FBVztFQUNYLFlBQVk7RUFDWixxT0FTd0M7RUFDeEMscUVBQXFFO0VBQ3JFLDhCQUE4QjtFQUM5QixlQUFlO0FuQnFxRHZCOztBS2h1REk7RWN5Q0E7SUFxQlEsNlBBS3lEO0lBQ3pELHVDQUF1QztJQUN2QyxzQ0FBc0M7RW5Ca3FEaEQ7QUFDRjs7QW1CL3JESztFQWdDTyxxQkFBcUI7RUFDckIsWUFBWTtFQUNaLGNBQWM7RUFDZCw2Q0FBb0M7QW5CbXFEaEQ7O0FtQnRzREs7RUF3Q2UsVUFBVTtBbkJrcUQ5Qjs7QW1CMXNESztFQTZDVyxZQUFZO0VBQ1osV0FBVztFQUNYLFVBQVU7RUFDVix5QzlCbUVJO0U4QmxFSixtQ0FBbUM7RUFDbkMsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QW5CaXFEbkMiLCJmaWxlIjoiYXBwLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIG9yaXlhICovXHJcbkBmb250LWZhY2Uge1xyXG5cdGZvbnQtZmFtaWx5OiAnQmFsb28gQmhhaW5hJztcclxuXHRmb250LXN0eWxlOiBub3JtYWw7XHJcblx0Zm9udC13ZWlnaHQ6IDQwMDtcclxuXHRmb250LWRpc3BsYXk6IHN3YXA7XHJcblx0c3JjOiBsb2NhbCgnQmFsb28gQmhhaW5hIFJlZ3VsYXInKSwgbG9jYWwoJ0JhbG9vQmhhaW5hLVJlZ3VsYXInKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9iYWxvb2JoYWluYS92NS9Ob2ExNlV6enpwMkZJa2ZocTV2bTl0aEJJZzU4cWhFLndvZmYyKSBmb3JtYXQoJ3dvZmYyJyk7XHJcblx0dW5pY29kZS1yYW5nZTogVSswOTY0LTA5NjUsIFUrMEIwMS0wQjc3LCBVKzIwMEMtMjAwRCwgVSsyMEI5LCBVKzI1Q0M7XHJcbn1cclxuLyogdmlldG5hbWVzZSAqL1xyXG5AZm9udC1mYWNlIHtcclxuXHRmb250LWZhbWlseTogJ0JhbG9vIEJoYWluYSc7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0OiA0MDA7XHJcblx0Zm9udC1kaXNwbGF5OiBzd2FwO1xyXG5cdHNyYzogbG9jYWwoJ0JhbG9vIEJoYWluYSBSZWd1bGFyJyksIGxvY2FsKCdCYWxvb0JoYWluYS1SZWd1bGFyJyksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3MvYmFsb29iaGFpbmEvdjUvTm9hMTZVenp6cDJGSWtmaHE1dm05dGhCTkE1OHFoRS53b2ZmMikgZm9ybWF0KCd3b2ZmMicpO1xyXG5cdHVuaWNvZGUtcmFuZ2U6IFUrMDEwMi0wMTAzLCBVKzAxMTAtMDExMSwgVSsxRUEwLTFFRjksIFUrMjBBQjtcclxufVxyXG4vKiBsYXRpbi1leHQgKi9cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6ICdCYWxvbyBCaGFpbmEnO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodDogNDAwO1xyXG5cdGZvbnQtZGlzcGxheTogc3dhcDtcclxuXHRzcmM6IGxvY2FsKCdCYWxvbyBCaGFpbmEgUmVndWxhcicpLCBsb2NhbCgnQmFsb29CaGFpbmEtUmVndWxhcicpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL2JhbG9vYmhhaW5hL3Y1L05vYTE2VXp6enAyRklrZmhxNXZtOXRoQk5RNThxaEUud29mZjIpIGZvcm1hdCgnd29mZjInKTtcclxuXHR1bmljb2RlLXJhbmdlOiBVKzAxMDAtMDI0RiwgVSswMjU5LCBVKzFFMDAtMUVGRiwgVSsyMDIwLCBVKzIwQTAtMjBBQiwgVSsyMEFELTIwQ0YsIFUrMjExMywgVSsyQzYwLTJDN0YsIFUrQTcyMC1BN0ZGO1xyXG59XHJcbi8qIGxhdGluICovXHJcbkBmb250LWZhY2Uge1xyXG5cdGZvbnQtZmFtaWx5OiAnQmFsb28gQmhhaW5hJztcclxuXHRmb250LXN0eWxlOiBub3JtYWw7XHJcblx0Zm9udC13ZWlnaHQ6IDQwMDtcclxuXHRmb250LWRpc3BsYXk6IHN3YXA7XHJcblx0c3JjOiBsb2NhbCgnQmFsb28gQmhhaW5hIFJlZ3VsYXInKSwgbG9jYWwoJ0JhbG9vQmhhaW5hLVJlZ3VsYXInKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9iYWxvb2JoYWluYS92NS9Ob2ExNlV6enpwMkZJa2ZocTV2bTl0aEJPdzU4LndvZmYyKSBmb3JtYXQoJ3dvZmYyJyk7XHJcblx0dW5pY29kZS1yYW5nZTogVSswMDAwLTAwRkYsIFUrMDEzMSwgVSswMTUyLTAxNTMsIFUrMDJCQi0wMkJDLCBVKzAyQzYsIFUrMDJEQSwgVSswMkRDLCBVKzIwMDAtMjA2RiwgVSsyMDc0LCBVKzIwQUMsIFUrMjEyMiwgVSsyMTkxLCBVKzIxOTMsIFUrMjIxMiwgVSsyMjE1LCBVK0ZFRkYsIFUrRkZGRDtcclxufVxyXG4vKiBjeXJpbGxpYy1leHQgKi9cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodDogNDAwO1xyXG5cdGZvbnQtZGlzcGxheTogc3dhcDtcclxuXHRzcmM6IGxvY2FsKCdPcGVuIFNhbnMgUmVndWxhcicpLCBsb2NhbCgnT3BlblNhbnMtUmVndWxhcicpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW04WWFHczEyNk1pWnBCQS1VRldKMGJiY2sud29mZjIpIGZvcm1hdCgnd29mZjInKTtcclxuXHR1bmljb2RlLXJhbmdlOiBVKzA0NjAtMDUyRiwgVSsxQzgwLTFDODgsIFUrMjBCNCwgVSsyREUwLTJERkYsIFUrQTY0MC1BNjlGLCBVK0ZFMkUtRkUyRjtcclxufVxyXG4vKiBjeXJpbGxpYyAqL1xyXG5AZm9udC1mYWNlIHtcclxuXHRmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0OiA0MDA7XHJcblx0Zm9udC1kaXNwbGF5OiBzd2FwO1xyXG5cdHNyYzogbG9jYWwoJ09wZW4gU2FucyBSZWd1bGFyJyksIGxvY2FsKCdPcGVuU2Fucy1SZWd1bGFyJyksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbThZYUdzMTI2TWlacEJBLVVGVVowYmJjay53b2ZmMikgZm9ybWF0KCd3b2ZmMicpO1xyXG5cdHVuaWNvZGUtcmFuZ2U6IFUrMDQwMC0wNDVGLCBVKzA0OTAtMDQ5MSwgVSswNEIwLTA0QjEsIFUrMjExNjtcclxufVxyXG4vKiBncmVlay1leHQgKi9cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodDogNDAwO1xyXG5cdGZvbnQtZGlzcGxheTogc3dhcDtcclxuXHRzcmM6IGxvY2FsKCdPcGVuIFNhbnMgUmVndWxhcicpLCBsb2NhbCgnT3BlblNhbnMtUmVndWxhcicpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW04WWFHczEyNk1pWnBCQS1VRldaMGJiY2sud29mZjIpIGZvcm1hdCgnd29mZjInKTtcclxuXHR1bmljb2RlLXJhbmdlOiBVKzFGMDAtMUZGRjtcclxufVxyXG4vKiBncmVlayAqL1xyXG5AZm9udC1mYWNlIHtcclxuXHRmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0OiA0MDA7XHJcblx0Zm9udC1kaXNwbGF5OiBzd2FwO1xyXG5cdHNyYzogbG9jYWwoJ09wZW4gU2FucyBSZWd1bGFyJyksIGxvY2FsKCdPcGVuU2Fucy1SZWd1bGFyJyksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbThZYUdzMTI2TWlacEJBLVVGVnAwYmJjay53b2ZmMikgZm9ybWF0KCd3b2ZmMicpO1xyXG5cdHVuaWNvZGUtcmFuZ2U6IFUrMDM3MC0wM0ZGO1xyXG59XHJcbi8qIHZpZXRuYW1lc2UgKi9cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodDogNDAwO1xyXG5cdGZvbnQtZGlzcGxheTogc3dhcDtcclxuXHRzcmM6IGxvY2FsKCdPcGVuIFNhbnMgUmVndWxhcicpLCBsb2NhbCgnT3BlblNhbnMtUmVndWxhcicpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW04WWFHczEyNk1pWnBCQS1VRldwMGJiY2sud29mZjIpIGZvcm1hdCgnd29mZjInKTtcclxuXHR1bmljb2RlLXJhbmdlOiBVKzAxMDItMDEwMywgVSswMTEwLTAxMTEsIFUrMUVBMC0xRUY5LCBVKzIwQUI7XHJcbn1cclxuLyogbGF0aW4tZXh0ICovXHJcbkBmb250LWZhY2Uge1xyXG5cdGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcclxuXHRmb250LXN0eWxlOiBub3JtYWw7XHJcblx0Zm9udC13ZWlnaHQ6IDQwMDtcclxuXHRmb250LWRpc3BsYXk6IHN3YXA7XHJcblx0c3JjOiBsb2NhbCgnT3BlbiBTYW5zIFJlZ3VsYXInKSwgbG9jYWwoJ09wZW5TYW5zLVJlZ3VsYXInKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtOFlhR3MxMjZNaVpwQkEtVUZXNTBiYmNrLndvZmYyKSBmb3JtYXQoJ3dvZmYyJyk7XHJcblx0dW5pY29kZS1yYW5nZTogVSswMTAwLTAyNEYsIFUrMDI1OSwgVSsxRTAwLTFFRkYsIFUrMjAyMCwgVSsyMEEwLTIwQUIsIFUrMjBBRC0yMENGLCBVKzIxMTMsIFUrMkM2MC0yQzdGLCBVK0E3MjAtQTdGRjtcclxufVxyXG4vKiBsYXRpbiAqL1xyXG5AZm9udC1mYWNlIHtcclxuXHRmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0OiA0MDA7XHJcblx0Zm9udC1kaXNwbGF5OiBzd2FwO1xyXG5cdHNyYzogbG9jYWwoJ09wZW4gU2FucyBSZWd1bGFyJyksIGxvY2FsKCdPcGVuU2Fucy1SZWd1bGFyJyksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbThZYUdzMTI2TWlacEJBLVVGVlowYi53b2ZmMikgZm9ybWF0KCd3b2ZmMicpO1xyXG5cdHVuaWNvZGUtcmFuZ2U6IFUrMDAwMC0wMEZGLCBVKzAxMzEsIFUrMDE1Mi0wMTUzLCBVKzAyQkItMDJCQywgVSswMkM2LCBVKzAyREEsIFUrMDJEQywgVSsyMDAwLTIwNkYsIFUrMjA3NCwgVSsyMEFDLCBVKzIxMjIsIFUrMjE5MSwgVSsyMTkzLCBVKzIyMTIsIFUrMjIxNSwgVStGRUZGLCBVK0ZGRkQ7XHJcbn1cclxuLyogY3lyaWxsaWMtZXh0ICovXHJcbkBmb250LWZhY2Uge1xyXG5cdGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcclxuXHRmb250LXN0eWxlOiBub3JtYWw7XHJcblx0Zm9udC13ZWlnaHQ6IDcwMDtcclxuXHRmb250LWRpc3BsYXk6IHN3YXA7XHJcblx0c3JjOiBsb2NhbCgnT3BlbiBTYW5zIEJvbGQnKSwgbG9jYWwoJ09wZW5TYW5zLUJvbGQnKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtNVlhR3MxMjZNaVpwQkEtVU43cmdPWC1ocE9xYy53b2ZmMikgZm9ybWF0KCd3b2ZmMicpO1xyXG5cdHVuaWNvZGUtcmFuZ2U6IFUrMDQ2MC0wNTJGLCBVKzFDODAtMUM4OCwgVSsyMEI0LCBVKzJERTAtMkRGRiwgVStBNjQwLUE2OUYsIFUrRkUyRS1GRTJGO1xyXG59XHJcbi8qIGN5cmlsbGljICovXHJcbkBmb250LWZhY2Uge1xyXG5cdGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcclxuXHRmb250LXN0eWxlOiBub3JtYWw7XHJcblx0Zm9udC13ZWlnaHQ6IDcwMDtcclxuXHRmb250LWRpc3BsYXk6IHN3YXA7XHJcblx0c3JjOiBsb2NhbCgnT3BlbiBTYW5zIEJvbGQnKSwgbG9jYWwoJ09wZW5TYW5zLUJvbGQnKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtNVlhR3MxMjZNaVpwQkEtVU43cmdPVnVocE9xYy53b2ZmMikgZm9ybWF0KCd3b2ZmMicpO1xyXG5cdHVuaWNvZGUtcmFuZ2U6IFUrMDQwMC0wNDVGLCBVKzA0OTAtMDQ5MSwgVSswNEIwLTA0QjEsIFUrMjExNjtcclxufVxyXG4vKiBncmVlay1leHQgKi9cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodDogNzAwO1xyXG5cdGZvbnQtZGlzcGxheTogc3dhcDtcclxuXHRzcmM6IGxvY2FsKCdPcGVuIFNhbnMgQm9sZCcpLCBsb2NhbCgnT3BlblNhbnMtQm9sZCcpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW01WWFHczEyNk1pWnBCQS1VTjdyZ09YdWhwT3FjLndvZmYyKSBmb3JtYXQoJ3dvZmYyJyk7XHJcblx0dW5pY29kZS1yYW5nZTogVSsxRjAwLTFGRkY7XHJcbn1cclxuLyogZ3JlZWsgKi9cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodDogNzAwO1xyXG5cdGZvbnQtZGlzcGxheTogc3dhcDtcclxuXHRzcmM6IGxvY2FsKCdPcGVuIFNhbnMgQm9sZCcpLCBsb2NhbCgnT3BlblNhbnMtQm9sZCcpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW01WWFHczEyNk1pWnBCQS1VTjdyZ09VZWhwT3FjLndvZmYyKSBmb3JtYXQoJ3dvZmYyJyk7XHJcblx0dW5pY29kZS1yYW5nZTogVSswMzcwLTAzRkY7XHJcbn1cclxuLyogdmlldG5hbWVzZSAqL1xyXG5AZm9udC1mYWNlIHtcclxuXHRmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtd2VpZ2h0OiA3MDA7XHJcblx0Zm9udC1kaXNwbGF5OiBzd2FwO1xyXG5cdHNyYzogbG9jYWwoJ09wZW4gU2FucyBCb2xkJyksIGxvY2FsKCdPcGVuU2Fucy1Cb2xkJyksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbTVZYUdzMTI2TWlacEJBLVVON3JnT1hlaHBPcWMud29mZjIpIGZvcm1hdCgnd29mZjInKTtcclxuXHR1bmljb2RlLXJhbmdlOiBVKzAxMDItMDEwMywgVSswMTEwLTAxMTEsIFUrMUVBMC0xRUY5LCBVKzIwQUI7XHJcbn1cclxuLyogbGF0aW4tZXh0ICovXHJcbkBmb250LWZhY2Uge1xyXG5cdGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcclxuXHRmb250LXN0eWxlOiBub3JtYWw7XHJcblx0Zm9udC13ZWlnaHQ6IDcwMDtcclxuXHRmb250LWRpc3BsYXk6IHN3YXA7XHJcblx0c3JjOiBsb2NhbCgnT3BlbiBTYW5zIEJvbGQnKSwgbG9jYWwoJ09wZW5TYW5zLUJvbGQnKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtNVlhR3MxMjZNaVpwQkEtVU43cmdPWE9ocE9xYy53b2ZmMikgZm9ybWF0KCd3b2ZmMicpO1xyXG5cdHVuaWNvZGUtcmFuZ2U6IFUrMDEwMC0wMjRGLCBVKzAyNTksIFUrMUUwMC0xRUZGLCBVKzIwMjAsIFUrMjBBMC0yMEFCLCBVKzIwQUQtMjBDRiwgVSsyMTEzLCBVKzJDNjAtMkM3RiwgVStBNzIwLUE3RkY7XHJcbn1cclxuLyogbGF0aW4gKi9cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LXdlaWdodDogNzAwO1xyXG5cdGZvbnQtZGlzcGxheTogc3dhcDtcclxuXHRzcmM6IGxvY2FsKCdPcGVuIFNhbnMgQm9sZCcpLCBsb2NhbCgnT3BlblNhbnMtQm9sZCcpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW01WWFHczEyNk1pWnBCQS1VTjdyZ09VdWhwLndvZmYyKSBmb3JtYXQoJ3dvZmYyJyk7XHJcblx0dW5pY29kZS1yYW5nZTogVSswMDAwLTAwRkYsIFUrMDEzMSwgVSswMTUyLTAxNTMsIFUrMDJCQi0wMkJDLCBVKzAyQzYsIFUrMDJEQSwgVSswMkRDLCBVKzIwMDAtMjA2RiwgVSsyMDc0LCBVKzIwQUMsIFUrMjEyMiwgVSsyMTkxLCBVKzIxOTMsIFUrMjIxMiwgVSsyMjE1LCBVK0ZFRkYsIFUrRkZGRDtcclxufVxyXG5cclxuJGxpZ2h0LWJsdWU6ICMzNWNmZDQ7XHJcbiRkYXJrLWJsdWU6ICMxNGExZTY7XHJcblxyXG4kbGlnaHQtZ3JlZW46ICM2MmFiMDM7XHJcbiRkYXJrLWdyZWVuOiAjMDA0ZDAwO1xyXG5cclxuJGxpZ2h0LW9yYW5nZTogI2Y5YzkwZDtcclxuJGRhcmstb3JhbmdlOiAjZjk2ZTEwO1xyXG5cclxuJGxpZ2h0LXJlZDogI2Y3MzYwZDtcclxuJGdyZXk6ICM2NjY7XHJcblxyXG4kY29sb3ItcHJpbWFyeTogIzAwODhjYztcclxuJGNvbG9yLWJsYWNrOiAjMDAwMDAwO1xyXG4kY29sb3Itd2hpdGU6ICNmZmZmZmY7XHJcblxyXG4kY29sb3ItaW5mbzogIzAwODhjYzsgLy8gQmx1ZVxyXG4kY29sb3Itc3VjY2VzczogIzM3N2YzMTsgLy8gR3JlZW5cclxuJGNvbG9yLWRhbmdlcjogIzg4MGUxNDsgLy8gUmVkXHJcbiRjb2xvci13YXJuaW5nOiAjZGJhOTA5OyAvLyBZZWxsb3dcclxuJGNvbG9yLWNvZGU6ICNkZDExNDQ7XHJcblxyXG4kY29sb3ItZ3JheS1kYXJrOiAjNjY2NjY2O1xyXG4kY29sb3ItZ3JheS1saWdodDogI2U1ZTVlNTtcclxuJGNvbG9yLWdyYXktbGlnaHRlcjogI2Y3ZjdmNztcclxuXHJcbiRjb2xvci1ibHVlLWxpZ2h0OiAjMzVjZmQ0O1xyXG4kY29sb3ItYmx1ZS1kYXJrOiAjMTRhMWU2O1xyXG5cclxuJGNvbG9yLWdyZWVuLWxpZ2h0OiAjNjJhYjAzO1xyXG4kY29sb3ItZ3JlZW4tZGFyazogIzAwNGQwMDtcclxuXHJcbiRjb2xvci15ZWxsb3ctbGlnaHRlcjogI2Y5YzkwZDtcclxuJGNvbG9yLXllbGxvdy1saWdodDogI2Y5NmUxMDtcclxuJGNvbG9yLXllbGxvdy1kYXJrOiAjZjczNjBkO1xyXG5cclxuXHJcbi8vIEZvbnQgU3RhY2tzXHJcbiRmb250LXRleHQ6ICdPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xyXG4kZm9udC10aXRsZXM6ICdCYWxvbyBCaGFpbmEnLCBjdXJzaXZlO1xyXG4kZm9udC1mb3JtYXRlZDogJ09wZW4gU2FucycsIG1vbm9zcGFjZTtcclxuXHJcblxyXG4vLyBCcmVha3BvaW50c1xyXG4kYnAteHNtYWxsOiAyMGVtO1xyXG4kYnAtc21hbGw6IDMwZW07XHJcbiRicC1tZWRpdW06IDQwZW07XHJcbiRicC1sYXJnZTogNjBlbTtcclxuJGJwLXhsYXJnZTogODBlbTtcclxuXHJcblxyXG4vLyBTaXppbmdcclxuJGZvbnQtc2l6ZTogMTAwJTtcclxuJHNwYWNpbmc6IDEuNTYyNWVtO1xyXG4kY29udGFpbmVyLXdpZHRoOiA4OCU7XHJcbiRjb250YWluZXItbWF4LXdpZHRoOiA4MGVtO1xyXG5cclxuXHJcbi8vIEdyaWRcclxuJGdyaWQtbWFyZ2luczogMS40JTtcclxuJGdyaWQtc2l6ZXM6IChcclxuXHQvLyBHcmlkIHdpZHRoIG9wdGlvbnNcclxuXHQvLyBBZGQvcmVtb3ZlIGdyaWQncyBhcyBuZWVkZWRcclxuXHQvLyAkbmFtZTogJHdpZHRoXHJcblx0Ly8gJG5hbWUgLSB7c3RyaW5nfSBjbGFzcyBzdWZmaXhcclxuXHQvLyAkd2lkdGggLSB7c3RyaW5nfSB3aWR0aCBvZiB0aGUgZ3JpZFxyXG5cdHRlbnRoOiAxMCUsXHJcblx0cDE2OiAxNiUsXHJcblx0ZmlmdGg6IDIwJSxcclxuXHRmb3VydGg6IDI1JSxcclxuXHRwMjg6IDI4JSxcclxuXHR0aHJlZS10ZW50aDogMzAlLFxyXG5cdHRoaXJkOiAzMy4zMzMzMzMzMzMzMyUsXHJcblx0Zm91ci10ZW50aDogNDAlLFxyXG5cdGhhbGY6IDUwJSxcclxuXHR0d28tdGhpcmRzOiA2Ni42NjY2NjY2NjY2NjclLFxyXG5cdHRocmVlLWZvdXJ0aHM6IDc1JSxcclxuXHRmdWxsOiAxMDAlXHJcbik7XHJcbiRncmlkLWJyZWFrcG9pbnRzOiAoXHJcblx0Ly8gQnJlYWtwb2ludHMgYXQgd2hpY2ggdG8gYWN0aXZhdGUgZ3JpZFxyXG5cdC8vIEFkZC9yZW1vdmUgYnJlYWtwb2ludHMgYXMgbmVlZGVkXHJcblx0Ly8gKCRicmVha3BvaW50LCAkcHJlZml4LWNsYXNzLCAkaW5jbHVkZS1vZmZzZXRzKVxyXG5cdC8vICRicmVha3BvaW50IC0ge3N0cmluZ3x2YXJpYWJsZX0gdGhlIGJyZWFrcG9pbnRcclxuXHQvLyAkcHJlZml4LWNsYXNzIC0ge3N0cmluZ3xvcHRpb25hbH0gY2xhc3MgdG8gYmUgdXNlZCB3aXRoIGAucm93YCB0byBhY3RpdmF0ZSBncmlkXHJcblx0Ly8gJGluY2x1ZGUtb2Zmc2V0cyAtIHtib29sZWFufSBpZiB0cnVlLCBpbmNsdWRlIG9mZnNldCBjbGFzc2VzIGF0IHRoaXMgYnJlYWtwb2ludFxyXG5cdCgkYnAteHNtYWxsLCBcIi5yb3ctc3RhcnQteHNtYWxsXCIsIGZhbHNlKSxcclxuXHQoJGJwLXNtYWxsLCBcIi5yb3ctc3RhcnQtc21hbGxcIiwgZmFsc2UpLFxyXG5cdCgkYnAtbWVkaXVtLCBudWxsLCB0cnVlKSxcclxuKTtcclxuJGdyaWQtd3JhcDogdHJ1ZTsiLCIvKiBvcml5YSAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnQmFsb28gQmhhaW5hJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJCYWxvbyBCaGFpbmEgUmVndWxhclwiKSwgbG9jYWwoXCJCYWxvb0JoYWluYS1SZWd1bGFyXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL2JhbG9vYmhhaW5hL3Y1L05vYTE2VXp6enAyRklrZmhxNXZtOXRoQklnNThxaEUud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzA5NjQtMDk2NSwgVSswQjAxLTBCNzcsIFUrMjAwQy0yMDBELCBVKzIwQjksIFUrMjVDQztcbn1cblxuLyogdmlldG5hbWVzZSAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnQmFsb28gQmhhaW5hJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJCYWxvbyBCaGFpbmEgUmVndWxhclwiKSwgbG9jYWwoXCJCYWxvb0JoYWluYS1SZWd1bGFyXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL2JhbG9vYmhhaW5hL3Y1L05vYTE2VXp6enAyRklrZmhxNXZtOXRoQk5BNThxaEUud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAxMDItMDEwMywgVSswMTEwLTAxMTEsIFUrMUVBMC0xRUY5LCBVKzIwQUI7XG59XG5cbi8qIGxhdGluLWV4dCAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnQmFsb28gQmhhaW5hJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJCYWxvbyBCaGFpbmEgUmVndWxhclwiKSwgbG9jYWwoXCJCYWxvb0JoYWluYS1SZWd1bGFyXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL2JhbG9vYmhhaW5hL3Y1L05vYTE2VXp6enAyRklrZmhxNXZtOXRoQk5RNThxaEUud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAxMDAtMDI0RiwgVSswMjU5LCBVKzFFMDAtMUVGRiwgVSsyMDIwLCBVKzIwQTAtMjBBQiwgVSsyMEFELTIwQ0YsIFUrMjExMywgVSsyQzYwLTJDN0YsIFUrQTcyMC1BN0ZGO1xufVxuXG4vKiBsYXRpbiAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnQmFsb28gQmhhaW5hJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJCYWxvbyBCaGFpbmEgUmVndWxhclwiKSwgbG9jYWwoXCJCYWxvb0JoYWluYS1SZWd1bGFyXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL2JhbG9vYmhhaW5hL3Y1L05vYTE2VXp6enAyRklrZmhxNXZtOXRoQk93NTgud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAwMDAtMDBGRiwgVSswMTMxLCBVKzAxNTItMDE1MywgVSswMkJCLTAyQkMsIFUrMDJDNiwgVSswMkRBLCBVKzAyREMsIFUrMjAwMC0yMDZGLCBVKzIwNzQsIFUrMjBBQywgVSsyMTIyLCBVKzIxOTEsIFUrMjE5MywgVSsyMjEyLCBVKzIyMTUsIFUrRkVGRiwgVStGRkZEO1xufVxuXG4vKiBjeXJpbGxpYy1leHQgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiT3BlbiBTYW5zIFJlZ3VsYXJcIiksIGxvY2FsKFwiT3BlblNhbnMtUmVndWxhclwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtOFlhR3MxMjZNaVpwQkEtVUZXSjBiYmNrLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswNDYwLTA1MkYsIFUrMUM4MC0xQzg4LCBVKzIwQjQsIFUrMkRFMC0yREZGLCBVK0E2NDAtQTY5RiwgVStGRTJFLUZFMkY7XG59XG5cbi8qIGN5cmlsbGljICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIk9wZW4gU2FucyBSZWd1bGFyXCIpLCBsb2NhbChcIk9wZW5TYW5zLVJlZ3VsYXJcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbThZYUdzMTI2TWlacEJBLVVGVVowYmJjay53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDQwMC0wNDVGLCBVKzA0OTAtMDQ5MSwgVSswNEIwLTA0QjEsIFUrMjExNjtcbn1cblxuLyogZ3JlZWstZXh0ICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIk9wZW4gU2FucyBSZWd1bGFyXCIpLCBsb2NhbChcIk9wZW5TYW5zLVJlZ3VsYXJcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbThZYUdzMTI2TWlacEJBLVVGV1owYmJjay53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMUYwMC0xRkZGO1xufVxuXG4vKiBncmVlayAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgUmVndWxhclwiKSwgbG9jYWwoXCJPcGVuU2Fucy1SZWd1bGFyXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW04WWFHczEyNk1pWnBCQS1VRlZwMGJiY2sud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAzNzAtMDNGRjtcbn1cblxuLyogdmlldG5hbWVzZSAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgUmVndWxhclwiKSwgbG9jYWwoXCJPcGVuU2Fucy1SZWd1bGFyXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW04WWFHczEyNk1pWnBCQS1VRldwMGJiY2sud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAxMDItMDEwMywgVSswMTEwLTAxMTEsIFUrMUVBMC0xRUY5LCBVKzIwQUI7XG59XG5cbi8qIGxhdGluLWV4dCAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgUmVndWxhclwiKSwgbG9jYWwoXCJPcGVuU2Fucy1SZWd1bGFyXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW04WWFHczEyNk1pWnBCQS1VRlc1MGJiY2sud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAxMDAtMDI0RiwgVSswMjU5LCBVKzFFMDAtMUVGRiwgVSsyMDIwLCBVKzIwQTAtMjBBQiwgVSsyMEFELTIwQ0YsIFUrMjExMywgVSsyQzYwLTJDN0YsIFUrQTcyMC1BN0ZGO1xufVxuXG4vKiBsYXRpbiAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgUmVndWxhclwiKSwgbG9jYWwoXCJPcGVuU2Fucy1SZWd1bGFyXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW04WWFHczEyNk1pWnBCQS1VRlZaMGIud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAwMDAtMDBGRiwgVSswMTMxLCBVKzAxNTItMDE1MywgVSswMkJCLTAyQkMsIFUrMDJDNiwgVSswMkRBLCBVKzAyREMsIFUrMjAwMC0yMDZGLCBVKzIwNzQsIFUrMjBBQywgVSsyMTIyLCBVKzIxOTEsIFUrMjE5MywgVSsyMjEyLCBVKzIyMTUsIFUrRkVGRiwgVStGRkZEO1xufVxuXG4vKiBjeXJpbGxpYy1leHQgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiT3BlbiBTYW5zIEJvbGRcIiksIGxvY2FsKFwiT3BlblNhbnMtQm9sZFwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtNVlhR3MxMjZNaVpwQkEtVU43cmdPWC1ocE9xYy53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDQ2MC0wNTJGLCBVKzFDODAtMUM4OCwgVSsyMEI0LCBVKzJERTAtMkRGRiwgVStBNjQwLUE2OUYsIFUrRkUyRS1GRTJGO1xufVxuXG4vKiBjeXJpbGxpYyAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgQm9sZFwiKSwgbG9jYWwoXCJPcGVuU2Fucy1Cb2xkXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW01WWFHczEyNk1pWnBCQS1VTjdyZ09WdWhwT3FjLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswNDAwLTA0NUYsIFUrMDQ5MC0wNDkxLCBVKzA0QjAtMDRCMSwgVSsyMTE2O1xufVxuXG4vKiBncmVlay1leHQgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiT3BlbiBTYW5zIEJvbGRcIiksIGxvY2FsKFwiT3BlblNhbnMtQm9sZFwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtNVlhR3MxMjZNaVpwQkEtVU43cmdPWHVocE9xYy53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMUYwMC0xRkZGO1xufVxuXG4vKiBncmVlayAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgQm9sZFwiKSwgbG9jYWwoXCJPcGVuU2Fucy1Cb2xkXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW01WWFHczEyNk1pWnBCQS1VTjdyZ09VZWhwT3FjLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswMzcwLTAzRkY7XG59XG5cbi8qIHZpZXRuYW1lc2UgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiT3BlbiBTYW5zIEJvbGRcIiksIGxvY2FsKFwiT3BlblNhbnMtQm9sZFwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtNVlhR3MxMjZNaVpwQkEtVU43cmdPWGVocE9xYy53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDEwMi0wMTAzLCBVKzAxMTAtMDExMSwgVSsxRUEwLTFFRjksIFUrMjBBQjtcbn1cblxuLyogbGF0aW4tZXh0ICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIk9wZW4gU2FucyBCb2xkXCIpLCBsb2NhbChcIk9wZW5TYW5zLUJvbGRcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbTVZYUdzMTI2TWlacEJBLVVON3JnT1hPaHBPcWMud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAxMDAtMDI0RiwgVSswMjU5LCBVKzFFMDAtMUVGRiwgVSsyMDIwLCBVKzIwQTAtMjBBQiwgVSsyMEFELTIwQ0YsIFUrMjExMywgVSsyQzYwLTJDN0YsIFUrQTcyMC1BN0ZGO1xufVxuXG4vKiBsYXRpbiAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgQm9sZFwiKSwgbG9jYWwoXCJPcGVuU2Fucy1Cb2xkXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW01WWFHczEyNk1pWnBCQS1VTjdyZ09VdWhwLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswMDAwLTAwRkYsIFUrMDEzMSwgVSswMTUyLTAxNTMsIFUrMDJCQi0wMkJDLCBVKzAyQzYsIFUrMDJEQSwgVSswMkRDLCBVKzIwMDAtMjA2RiwgVSsyMDc0LCBVKzIwQUMsIFUrMjEyMiwgVSsyMTkxLCBVKzIxOTMsIFUrMjIxMiwgVSsyMjE1LCBVK0ZFRkYsIFUrRkZGRDtcbn1cblxuLyoqXHJcbiAqIEBzZWN0aW9uIE5vcm1hbGl6ZS5jc3NcclxuICogTm9ybWFsaXplLmNzcyBiYXNlIHdpdGggY3VzdG9tIGNvZGUuXHJcbiAqIEFkZGl0aW9uYWwgbm9ybWFsaXplIHN0eWxlcyBpbmNvcnBvcmF0ZWQgdGhyb3VnaG91dCBjb21wb25lbnRzLlxyXG4gKiBAbGluayBodHRwOi8vbmVjb2xhcy5naXRodWIuaW8vbm9ybWFsaXplLmNzcy9cclxuICovXG4vKipcclxuICogUmVtb3ZlIHRoZSB0YXAgZGVsYXkgaW4gd2Via2l0XHJcbiAqIEBsaW5rIGh0dHBzOi8vbWVkaXVtLmNvbS9AYWRhY3Rpby9kZWxheS1hOWRmOWVkY2VlZjMjLjdkbWJsM3hvd1xyXG4gKi9cbmEsXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhLFxubGFiZWwsXG5zdW1tYXJ5IHtcbiAgdG91Y2gtYWN0aW9uOiBtYW5pcHVsYXRpb247XG59XG5cbi8qKlxyXG4gKiBBZGQgYm94IHNpemluZyB0byBldmVyeXRoaW5nXHJcbiAqIEBsaW5rIGh0dHA6Ly93d3cucGF1bGlyaXNoLmNvbS8yMDEyL2JveC1zaXppbmctYm9yZGVyLWJveC1mdHcvXHJcbiAqL1xuKixcbio6YmVmb3JlLFxuKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi8qKlxyXG4gKiAxLiBGb3JjZSBzY3JvbGxiYXIgZGlzcGxheSB0byBwcmV2ZW50IGp1bXBpbmcgb24gcGFnZXMuXHJcbiAqIDIuIFByZXZlbnQgaU9TIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlLCB3aXRob3V0IGRpc2FibGluZ1xyXG4gKiAgICB1c2VyIHpvb20uXHJcbiAqL1xuaHRtbCB7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgLyogMSAqL1xuICB0ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG59XG5cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cclxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcclxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cclxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBpbiBJRSAxMC8xMVxyXG4gKiBhbmQgRmlyZWZveC5cclxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cclxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5jaXRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07XG59XG5cbi8qKlxyXG4gKiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxyXG4gKi9cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgLyogMSAqL1xufVxuXG4vKipcclxuICogTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxyXG4gKi9cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcclxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cclxuICogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cclxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxyXG4gKiBQcmV2ZW50IGltZyBhbmQgdmlkZW8gZWxlbWVudHMgZnJvbSBzcGlsbGluZyBvdXRzaWRlIG9mIHRoZSBwYWdlIG9uIHNtYWxsZXIgc2NyZWVucy5cclxuICovXG5pbWcsXG52aWRlbyB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi8qKlxyXG4gKiBQcmV2ZW50IGlmcmFtZSwgb2JqZWN0LCBhbmQgZW1iZWQgZWxlbWVudHMgZnJvbSBzcGlsbGluZyBvdXRzaWRlIG9mIHRoZSBwYWdlIG9uIHNtYWxsZXIgc2NyZWVucy5cclxuICogaGVpZ2h0OiBhdXRvIGNhdXNlcyBpZnJhbWVzIHRvIHNtdXNoLCBzbyBpdCdzIG9taXR0ZWQgaGVyZS5cclxuICovXG5pZnJhbWUsXG5vYmplY3QsXG5lbWJlZCB7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cblxuLyoqXHJcbiAqIEhpZGUgdGhlIHRlbXBsYXRlIGVsZW1lbnQgaW4gSUUsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cclxuICovXG4vKipcclxuICogMS4gUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAuXHJcbiAqIDIuIFByZXZlbnRzIElFIGZyb20gbWFraW5nIHNjYWxlZCBpbWFnZXMgbG9vayBsaWtlIGNyYXBcclxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIC8qIDEgKi9cbiAgLW1zLWludGVycG9sYXRpb24tbW9kZTogYmljdWJpYztcbiAgLyogMiAqL1xufVxuXG4vKipcclxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXHJcbiAqL1xuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKipcclxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgbWFyZ2luLlxyXG4gKi9cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXHJcbiAqIEB3b3JrYXJvdW5kIFJlbW92ZSBmb2N1cyBmcm9tIDxtYWluPiBlbGVtZW50IHdoZW4gdXNpbmcgdGFiaW5kZXg9XCItMVwiIGhhY2sgZm9yIHNraXBuYXYgbGlua1xyXG4gKiBAbGluayBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9Mzc3MjFcclxuICovXG5bdGFiaW5kZXg9XCItMVwiXTpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi8qKlxyXG4gKiBAc2VjdGlvbiBHcmlkXHJcbiAqIFN0cnVjdHVyZSBhbmQgbGF5b3V0XHJcbiAqL1xuLyoqXHJcbiAqIEJhc2UgZ3JpZCBzdHlsZXM6IHNpbmdsZSBjb2x1bW5cclxuICovXG4uY29udGFpbmVyIHtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWF4LXdpZHRoOiA4MGVtO1xuICB3aWR0aDogODglO1xufVxuXG4ucm93IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgZmxleC13cmFwOiB3cmFwO1xuICBtYXJnaW4tbGVmdDogLTEuNCU7XG4gIG1hcmdpbi1yaWdodDogLTEuNCU7XG59XG5cbi5uby1sYXQtbWFyZ2lucyB7XG4gIG1hcmdpbi1sZWZ0OiAwICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi1yaWdodDogMCAhaW1wb3J0YW50O1xufVxuXG4vKipcclxuICogQWxpZ25tZW50XHJcbiAqL1xuLyogRmxvYXQgY29udGVudCB0byB0aGUgdG9wICovXG4ucm93LXRvcCB7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xufVxuXG4vKiBGbG9hdCBjb250ZW50IGluIHRoZSBtaWRkbGUgKi9cbi5yb3ctbWlkZGxlIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLyogUHVzaCBjb250ZW50IHRvIHRoZSBib3R0b20gKi9cbi5yb3ctYm90dG9tIHtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xufVxuXG4vKiBNb3ZlIGNvbnRlbnQgdG8gdGhlIHN0YXJ0IG9mIHRoZSByb3cgKi9cbi5yb3ctc3RhcnQge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG59XG5cbi8qIEZsb2F0IGNvbnRlbnQgaW4gdGhlIGNlbnRlciBvZiB0aGUgcm93ICovXG4ucm93LWNlbnRlciB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4vKiBNb3ZlIGNvbnRlbnQgdG8gdGhlIGVuZCBvZiB0aGUgcm93ICovXG4ucm93LWVuZCB7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG5cbi8qIEFkZCBldmVuIHNwYWNpbmcgYXJvdW5kIGVhY2ggaXRlbSAqL1xuLnJvdy1hcm91bmQge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbn1cblxuLyogQWRkIGV2ZW4gc3BhY2luZyBiZXR3ZWVuIGl0ZW1zICovXG4ucm93LWJldHdlZW4ge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi8qIFJldmVyc2UgY29udGVudCBvcmRlciAqL1xuLnJvdy1yZXZlcnNlIHtcbiAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xufVxuXG4uZ3JpZC10ZW50aCwgLmdyaWQtcDE2LCAuZ3JpZC1maWZ0aCwgLmdyaWQtZm91cnRoLCAuZ3JpZC1wMjgsIC5ncmlkLXRocmVlLXRlbnRoLCAuZ3JpZC10aGlyZCwgLmdyaWQtZm91ci10ZW50aCwgLmdyaWQtaGFsZiwgLmdyaWQtdHdvLXRoaXJkcywgLmdyaWQtdGhyZWUtZm91cnRocywgLmdyaWQtZnVsbCwgLmdyaWQtYXV0byB7XG4gIGZsZXgtYmFzaXM6IDEwMCU7XG4gIG1hcmdpbi1sZWZ0OiAxLjQlO1xuICBtYXJnaW4tcmlnaHQ6IDEuNCU7XG59XG5cbi8qKlxyXG4gKiBBZGQgY29sdW1ucyB0byBncmlkIG9uIGJpZ2dlciBzY3JlZW5zXHJcbiAqL1xuQG1lZGlhIChtaW4td2lkdGg6IDIwZW0pIHtcbiAgLnJvdy5yb3ctc3RhcnQteHNtYWxsIHtcbiAgICBmbGV4LXdyYXA6IG5vd3JhcDtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXhzbWFsbCB7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICB9XG4gIC5yb3ctd3JhcC5yb3ctc3RhcnQteHNtYWxsIC5ncmlkLXRlbnRoIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwLnJvdy1zdGFydC14c21hbGwgLmdyaWQtcDE2IHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwLnJvdy1zdGFydC14c21hbGwgLmdyaWQtZmlmdGgge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXhzbWFsbCAuZ3JpZC1mb3VydGgge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXhzbWFsbCAuZ3JpZC1wMjgge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXhzbWFsbCAuZ3JpZC10aHJlZS10ZW50aCB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMS40JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjQlO1xuICB9XG4gIC5yb3ctd3JhcC5yb3ctc3RhcnQteHNtYWxsIC5ncmlkLXRoaXJkIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwLnJvdy1zdGFydC14c21hbGwgLmdyaWQtZm91ci10ZW50aCB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMS40JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjQlO1xuICB9XG4gIC5yb3ctd3JhcC5yb3ctc3RhcnQteHNtYWxsIC5ncmlkLWhhbGYge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXhzbWFsbCAuZ3JpZC10d28tdGhpcmRzIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwLnJvdy1zdGFydC14c21hbGwgLmdyaWQtdGhyZWUtZm91cnRocyB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMS40JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjQlO1xuICB9XG4gIC5yb3ctd3JhcC5yb3ctc3RhcnQteHNtYWxsIC5ncmlkLWZ1bGwge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXhzbWFsbCAuZ3JpZC1hdXRvIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy1zdGFydC14c21hbGwgLmdyaWQtYXV0byB7XG4gICAgZmxleC1iYXNpczogYXV0bztcbiAgICBmbGV4LWdyb3c6IDE7XG4gIH1cbiAgLnJvdy1zdGFydC14c21hbGwgLmdyaWQtdGVudGgge1xuICAgIGZsZXgtYmFzaXM6IDEwJTtcbiAgICBtYXgtd2lkdGg6IDEwJTtcbiAgfVxuICAucm93LXN0YXJ0LXhzbWFsbCAuZ3JpZC1wMTYge1xuICAgIGZsZXgtYmFzaXM6IDE2JTtcbiAgICBtYXgtd2lkdGg6IDE2JTtcbiAgfVxuICAucm93LXN0YXJ0LXhzbWFsbCAuZ3JpZC1maWZ0aCB7XG4gICAgZmxleC1iYXNpczogMjAlO1xuICAgIG1heC13aWR0aDogMjAlO1xuICB9XG4gIC5yb3ctc3RhcnQteHNtYWxsIC5ncmlkLWZvdXJ0aCB7XG4gICAgZmxleC1iYXNpczogMjUlO1xuICAgIG1heC13aWR0aDogMjUlO1xuICB9XG4gIC5yb3ctc3RhcnQteHNtYWxsIC5ncmlkLXAyOCB7XG4gICAgZmxleC1iYXNpczogMjglO1xuICAgIG1heC13aWR0aDogMjglO1xuICB9XG4gIC5yb3ctc3RhcnQteHNtYWxsIC5ncmlkLXRocmVlLXRlbnRoIHtcbiAgICBmbGV4LWJhc2lzOiAzMCU7XG4gICAgbWF4LXdpZHRoOiAzMCU7XG4gIH1cbiAgLnJvdy1zdGFydC14c21hbGwgLmdyaWQtdGhpcmQge1xuICAgIGZsZXgtYmFzaXM6IDMzLjMzMzMzJTtcbiAgICBtYXgtd2lkdGg6IDMzLjMzMzMzJTtcbiAgfVxuICAucm93LXN0YXJ0LXhzbWFsbCAuZ3JpZC1mb3VyLXRlbnRoIHtcbiAgICBmbGV4LWJhc2lzOiA0MCU7XG4gICAgbWF4LXdpZHRoOiA0MCU7XG4gIH1cbiAgLnJvdy1zdGFydC14c21hbGwgLmdyaWQtaGFsZiB7XG4gICAgZmxleC1iYXNpczogNTAlO1xuICAgIG1heC13aWR0aDogNTAlO1xuICB9XG4gIC5yb3ctc3RhcnQteHNtYWxsIC5ncmlkLXR3by10aGlyZHMge1xuICAgIGZsZXgtYmFzaXM6IDY2LjY2NjY3JTtcbiAgICBtYXgtd2lkdGg6IDY2LjY2NjY3JTtcbiAgfVxuICAucm93LXN0YXJ0LXhzbWFsbCAuZ3JpZC10aHJlZS1mb3VydGhzIHtcbiAgICBmbGV4LWJhc2lzOiA3NSU7XG4gICAgbWF4LXdpZHRoOiA3NSU7XG4gIH1cbiAgLnJvdy1zdGFydC14c21hbGwgLmdyaWQtZnVsbCB7XG4gICAgZmxleC1iYXNpczogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gIH1cbiAgLnJvdy1zdGFydC14c21hbGwgLmdyaWQtZmlyc3Qge1xuICAgIC13ZWJraXQtYm94LW9yZGluYWwtZ3JvdXA6IDA7XG4gICAgb3JkZXI6IC0xO1xuICB9XG4gIC5yb3ctc3RhcnQteHNtYWxsIC5ncmlkLWxhc3Qge1xuICAgIC13ZWJraXQtYm94LW9yZGluYWwtZ3JvdXA6IDI7XG4gICAgb3JkZXI6IDE7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDMwZW0pIHtcbiAgLnJvdy5yb3ctc3RhcnQtc21hbGwge1xuICAgIGZsZXgtd3JhcDogbm93cmFwO1xuICB9XG4gIC5yb3ctd3JhcC5yb3ctc3RhcnQtc21hbGwge1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLXRlbnRoIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwLnJvdy1zdGFydC1zbWFsbCAuZ3JpZC1wMTYge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLWZpZnRoIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwLnJvdy1zdGFydC1zbWFsbCAuZ3JpZC1mb3VydGgge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLXAyOCB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMS40JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjQlO1xuICB9XG4gIC5yb3ctd3JhcC5yb3ctc3RhcnQtc21hbGwgLmdyaWQtdGhyZWUtdGVudGgge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLXRoaXJkIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwLnJvdy1zdGFydC1zbWFsbCAuZ3JpZC1mb3VyLXRlbnRoIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwLnJvdy1zdGFydC1zbWFsbCAuZ3JpZC1oYWxmIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwLnJvdy1zdGFydC1zbWFsbCAuZ3JpZC10d28tdGhpcmRzIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwLnJvdy1zdGFydC1zbWFsbCAuZ3JpZC10aHJlZS1mb3VydGhzIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwLnJvdy1zdGFydC1zbWFsbCAuZ3JpZC1mdWxsIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwLnJvdy1zdGFydC1zbWFsbCAuZ3JpZC1hdXRvIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy1zdGFydC1zbWFsbCAuZ3JpZC1hdXRvIHtcbiAgICBmbGV4LWJhc2lzOiBhdXRvO1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgfVxuICAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLXRlbnRoIHtcbiAgICBmbGV4LWJhc2lzOiAxMCU7XG4gICAgbWF4LXdpZHRoOiAxMCU7XG4gIH1cbiAgLnJvdy1zdGFydC1zbWFsbCAuZ3JpZC1wMTYge1xuICAgIGZsZXgtYmFzaXM6IDE2JTtcbiAgICBtYXgtd2lkdGg6IDE2JTtcbiAgfVxuICAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLWZpZnRoIHtcbiAgICBmbGV4LWJhc2lzOiAyMCU7XG4gICAgbWF4LXdpZHRoOiAyMCU7XG4gIH1cbiAgLnJvdy1zdGFydC1zbWFsbCAuZ3JpZC1mb3VydGgge1xuICAgIGZsZXgtYmFzaXM6IDI1JTtcbiAgICBtYXgtd2lkdGg6IDI1JTtcbiAgfVxuICAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLXAyOCB7XG4gICAgZmxleC1iYXNpczogMjglO1xuICAgIG1heC13aWR0aDogMjglO1xuICB9XG4gIC5yb3ctc3RhcnQtc21hbGwgLmdyaWQtdGhyZWUtdGVudGgge1xuICAgIGZsZXgtYmFzaXM6IDMwJTtcbiAgICBtYXgtd2lkdGg6IDMwJTtcbiAgfVxuICAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLXRoaXJkIHtcbiAgICBmbGV4LWJhc2lzOiAzMy4zMzMzMyU7XG4gICAgbWF4LXdpZHRoOiAzMy4zMzMzMyU7XG4gIH1cbiAgLnJvdy1zdGFydC1zbWFsbCAuZ3JpZC1mb3VyLXRlbnRoIHtcbiAgICBmbGV4LWJhc2lzOiA0MCU7XG4gICAgbWF4LXdpZHRoOiA0MCU7XG4gIH1cbiAgLnJvdy1zdGFydC1zbWFsbCAuZ3JpZC1oYWxmIHtcbiAgICBmbGV4LWJhc2lzOiA1MCU7XG4gICAgbWF4LXdpZHRoOiA1MCU7XG4gIH1cbiAgLnJvdy1zdGFydC1zbWFsbCAuZ3JpZC10d28tdGhpcmRzIHtcbiAgICBmbGV4LWJhc2lzOiA2Ni42NjY2NyU7XG4gICAgbWF4LXdpZHRoOiA2Ni42NjY2NyU7XG4gIH1cbiAgLnJvdy1zdGFydC1zbWFsbCAuZ3JpZC10aHJlZS1mb3VydGhzIHtcbiAgICBmbGV4LWJhc2lzOiA3NSU7XG4gICAgbWF4LXdpZHRoOiA3NSU7XG4gIH1cbiAgLnJvdy1zdGFydC1zbWFsbCAuZ3JpZC1mdWxsIHtcbiAgICBmbGV4LWJhc2lzOiAxMDAlO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgfVxuICAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLWZpcnN0IHtcbiAgICAtd2Via2l0LWJveC1vcmRpbmFsLWdyb3VwOiAwO1xuICAgIG9yZGVyOiAtMTtcbiAgfVxuICAucm93LXN0YXJ0LXNtYWxsIC5ncmlkLWxhc3Qge1xuICAgIC13ZWJraXQtYm94LW9yZGluYWwtZ3JvdXA6IDI7XG4gICAgb3JkZXI6IDE7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQwZW0pIHtcbiAgLnJvdyB7XG4gICAgZmxleC13cmFwOiBub3dyYXA7XG4gIH1cbiAgLnJvdy13cmFwIHtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gIH1cbiAgLnJvdy13cmFwIC5ncmlkLXRlbnRoIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwIC5ncmlkLXAxNiB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMS40JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjQlO1xuICB9XG4gIC5yb3ctd3JhcCAuZ3JpZC1maWZ0aCB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMS40JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjQlO1xuICB9XG4gIC5yb3ctd3JhcCAuZ3JpZC1mb3VydGgge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAgLmdyaWQtcDI4IHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwIC5ncmlkLXRocmVlLXRlbnRoIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwIC5ncmlkLXRoaXJkIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwIC5ncmlkLWZvdXItdGVudGgge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAgLmdyaWQtaGFsZiB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMS40JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjQlO1xuICB9XG4gIC5yb3ctd3JhcCAuZ3JpZC10d28tdGhpcmRzIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLnJvdy13cmFwIC5ncmlkLXRocmVlLWZvdXJ0aHMge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNCU7XG4gICAgcGFkZGluZy1yaWdodDogMS40JTtcbiAgfVxuICAucm93LXdyYXAgLmdyaWQtZnVsbCB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMS40JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxLjQlO1xuICB9XG4gIC5yb3ctd3JhcCAuZ3JpZC1hdXRvIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjQlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEuNCU7XG4gIH1cbiAgLmdyaWQtYXV0byB7XG4gICAgZmxleC1iYXNpczogYXV0bztcbiAgICBmbGV4LWdyb3c6IDE7XG4gIH1cbiAgLmdyaWQtdGVudGgge1xuICAgIGZsZXgtYmFzaXM6IDEwJTtcbiAgICBtYXgtd2lkdGg6IDEwJTtcbiAgfVxuICAuZ3JpZC1wMTYge1xuICAgIGZsZXgtYmFzaXM6IDE2JTtcbiAgICBtYXgtd2lkdGg6IDE2JTtcbiAgfVxuICAuZ3JpZC1maWZ0aCB7XG4gICAgZmxleC1iYXNpczogMjAlO1xuICAgIG1heC13aWR0aDogMjAlO1xuICB9XG4gIC5ncmlkLWZvdXJ0aCB7XG4gICAgZmxleC1iYXNpczogMjUlO1xuICAgIG1heC13aWR0aDogMjUlO1xuICB9XG4gIC5ncmlkLXAyOCB7XG4gICAgZmxleC1iYXNpczogMjglO1xuICAgIG1heC13aWR0aDogMjglO1xuICB9XG4gIC5ncmlkLXRocmVlLXRlbnRoIHtcbiAgICBmbGV4LWJhc2lzOiAzMCU7XG4gICAgbWF4LXdpZHRoOiAzMCU7XG4gIH1cbiAgLmdyaWQtdGhpcmQge1xuICAgIGZsZXgtYmFzaXM6IDMzLjMzMzMzJTtcbiAgICBtYXgtd2lkdGg6IDMzLjMzMzMzJTtcbiAgfVxuICAuZ3JpZC1mb3VyLXRlbnRoIHtcbiAgICBmbGV4LWJhc2lzOiA0MCU7XG4gICAgbWF4LXdpZHRoOiA0MCU7XG4gIH1cbiAgLmdyaWQtaGFsZiB7XG4gICAgZmxleC1iYXNpczogNTAlO1xuICAgIG1heC13aWR0aDogNTAlO1xuICB9XG4gIC5ncmlkLXR3by10aGlyZHMge1xuICAgIGZsZXgtYmFzaXM6IDY2LjY2NjY3JTtcbiAgICBtYXgtd2lkdGg6IDY2LjY2NjY3JTtcbiAgfVxuICAuZ3JpZC10aHJlZS1mb3VydGhzIHtcbiAgICBmbGV4LWJhc2lzOiA3NSU7XG4gICAgbWF4LXdpZHRoOiA3NSU7XG4gIH1cbiAgLmdyaWQtZnVsbCB7XG4gICAgZmxleC1iYXNpczogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gIH1cbiAgLm9mZnNldC10ZW50aCB7XG4gICAgbWFyZ2luLWxlZnQ6IDEwJTtcbiAgfVxuICAub2Zmc2V0LXAxNiB7XG4gICAgbWFyZ2luLWxlZnQ6IDE2JTtcbiAgfVxuICAub2Zmc2V0LWZpZnRoIHtcbiAgICBtYXJnaW4tbGVmdDogMjAlO1xuICB9XG4gIC5vZmZzZXQtZm91cnRoIHtcbiAgICBtYXJnaW4tbGVmdDogMjUlO1xuICB9XG4gIC5vZmZzZXQtcDI4IHtcbiAgICBtYXJnaW4tbGVmdDogMjglO1xuICB9XG4gIC5vZmZzZXQtdGhyZWUtdGVudGgge1xuICAgIG1hcmdpbi1sZWZ0OiAzMCU7XG4gIH1cbiAgLm9mZnNldC10aGlyZCB7XG4gICAgbWFyZ2luLWxlZnQ6IDMzLjMzMzMzJTtcbiAgfVxuICAub2Zmc2V0LWZvdXItdGVudGgge1xuICAgIG1hcmdpbi1sZWZ0OiA0MCU7XG4gIH1cbiAgLm9mZnNldC1oYWxmIHtcbiAgICBtYXJnaW4tbGVmdDogNTAlO1xuICB9XG4gIC5vZmZzZXQtdHdvLXRoaXJkcyB7XG4gICAgbWFyZ2luLWxlZnQ6IDY2LjY2NjY3JTtcbiAgfVxuICAub2Zmc2V0LXRocmVlLWZvdXJ0aHMge1xuICAgIG1hcmdpbi1sZWZ0OiA3NSU7XG4gIH1cbiAgLm9mZnNldC1mdWxsIHtcbiAgICBtYXJnaW4tbGVmdDogMTAwJTtcbiAgfVxuICAuZ3JpZC1maXJzdCB7XG4gICAgLXdlYmtpdC1ib3gtb3JkaW5hbC1ncm91cDogMDtcbiAgICBvcmRlcjogLTE7XG4gIH1cbiAgLmdyaWQtbGFzdCB7XG4gICAgLXdlYmtpdC1ib3gtb3JkaW5hbC1ncm91cDogMjtcbiAgICBvcmRlcjogMTtcbiAgfVxufVxuXG4vKipcclxuICogQHNlY3Rpb24gVHlwb2dyYXBoeVxyXG4gKiBTZXRzIGZvbnQgc3R5bGVzIGZvciBlbnRpcmUgc2l0ZVxyXG4gKi9cbio6OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNTMsIDIwNywgMjEyLCAwLjMpO1xufVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGNvbG9yOiAjNjY2O1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBsaW5lLWhlaWdodDogMS41O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNDBlbSkge1xuICBib2R5IHtcbiAgICBsaW5lLWhlaWdodDogMS41NjI1O1xuICB9XG59XG5cbm1haW4ge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbn1cblxucCB7XG4gIG1hcmdpbjogMCAwIDEuNTYyNWVtO1xufVxuXG4udW5kZXJsaW5lIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi8qKlxyXG4gKiBIeXBlcmxpbmsgc3R5bGluZ1xyXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXHJcbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cclxuICovXG5hIHtcbiAgY29sb3I6ICM2NjY7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7XG4gIC8qIDIgKi9cbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICAvKipcclxuXHQgKiBJbXByb3ZlIHJlYWRhYmlsaXR5IHdoZW4gZm9jdXNlZCBhbmQgYWxzbyBtb3VzZSBob3ZlcmVkIGluIGFsbCBicm93c2Vycy5cclxuXHQgKi9cbn1cblxuYTphY3RpdmUsIGE6aG92ZXIge1xuICBvdXRsaW5lOiAwO1xufVxuXG4vKipcclxuICogTGlzdCBzdHlsaW5nXHJcbiAqL1xudWwsXG5vbCB7XG4gIG1hcmdpbjogMCAwIDEuNTYyNWVtIDJlbTtcbiAgcGFkZGluZzogMDtcbn1cblxudWwgdWwsXG51bCBvbCxcbm9sIG9sLFxub2wgdWwge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG5kbCxcbmRkIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG5kZCB7XG4gIG1hcmdpbi1ib3R0b206IDEuNTYyNWVtO1xufVxuXG5kdCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcclxuICogQGJ1Z2ZpeCBQcmV2ZW50IHdlYmtpdCBmcm9tIHJlbW92aW5nIGxpc3Qgc2VtYW50aWNzXHJcbiAqIDEuIEFkZCBhIG5vbi1icmVha2luZyBzcGFjZVxyXG4gKiAyLiBNYWtlIHN1cmUgaXQgZG9lc24ndCBtZXNzIHVwIHRoZSBET00gZmxvd1xyXG4gKi9cbi5saXN0LXVuc3R5bGVkLCAubGlzdC1pbmxpbmUge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG4ubGlzdC11bnN0eWxlZCA+IGxpOmJlZm9yZSwgLmxpc3QtaW5saW5lID4gbGk6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXDIwMEJcIjtcbiAgLyogMSAqL1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIC8qIDIgKi9cbn1cblxuLyoqXHJcbiAqIFJlbW92ZXMgbGlzdCBzdHlsaW5nLlxyXG4gKiBGb3Igc2VtYW50aWMgcmVhc29ucywgc2hvdWxkIG9ubHkgYmUgdXNlZCBvbiB1bm9yZGVyZWQgbGlzdHMuXHJcbiAqL1xuLmxpc3QtdW5zdHlsZWQge1xuICBtYXJnaW4tbGVmdDogMDtcbn1cblxuLyoqXHJcbiAqIERpc3BsYXkgbGlzdHMgb24gYSBzaW5nbGUgbGluZS5cclxuICovXG4ubGlzdC1pbmxpbmUge1xuICBtYXJnaW4tbGVmdDogLTAuNWVtO1xuICBtYXJnaW4tcmlnaHQ6IC0wLjVlbTtcbiAgcGFkZGluZzogMDtcbn1cblxuLmxpc3QtaW5saW5lID4gbGkge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi1sZWZ0OiAwLjVlbTtcbiAgbWFyZ2luLXJpZ2h0OiAwLjVlbTtcbn1cblxuLyoqXHJcbiAqIEhlYWRpbmcgc3R5bGluZyBmb3IgaDEgdGhyb3VnaCBoNiBlbGVtZW50cy5cclxuICogSGVhZGluZyBjbGFzcyBsZXRzIHlvdSB1c2Ugb25lIGhlYWRpbmcgdHlwZSBmb3Igc2VtYW50aWNzLCBidXQgc3R5bGUgaXQgYXMgYW5vdGhlciBoZWFkaW5nIHR5cGUuXHJcbiAqL1xuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGxpbmUtaGVpZ2h0OiAxLjI7XG4gIG1hcmdpbjogMCAwIDFlbTtcbiAgcGFkZGluZzogMWVtIDAgMDtcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICBmb250LWZhbWlseTogXCJCYWxvbyBCaGFpbmFcIiwgY3Vyc2l2ZTtcbn1cblxuaDEsXG4uaDEge1xuICBmb250LXNpemU6IDEuNWVtO1xuICBwYWRkaW5nLXRvcDogLjVlbTtcbiAgZm9udC1mYW1pbHk6IFwiQmFsb28gQmhhaW5hXCIsIGN1cnNpdmU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0MGVtKSB7XG4gIGgxLFxuICAuaDEge1xuICAgIGZvbnQtc2l6ZTogMS43NWVtO1xuICB9XG59XG5cbmgyLFxuLmgyIHtcbiAgZm9udC1zaXplOiAxLjMxMjVlbTtcbn1cblxuaDMsXG4uaDMge1xuICBmb250LXNpemU6IDEuMTg3NWVtO1xufVxuXG5oNCwgaDUsIGg2LFxuLmg0LCAuaDUsIC5oNiB7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuXG5oNCxcbi5oNCB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi8qKlxyXG4gKiBMaW5lcywgUXVvdGVzIGFuZCBFbXBoYXNpc1xyXG4gKi9cbi8qKlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxyXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cclxuICovXG5ociB7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlNWU1ZTU7XG4gIGJvcmRlci1ib3R0b206IDAgc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIG1hcmdpbjogMmVtIGF1dG87XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovXG59XG5cbi8qKlxyXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cclxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxyXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcclxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxyXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxyXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi9cbn1cblxuLyoqXHJcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cclxuICovXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxyXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxyXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmJmOWM5O1xuICBjb2xvcjogIzAwMDAwMDtcbn1cblxuLyoqXHJcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxyXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBhZmZlY3RpbmcgYGxpbmUtaGVpZ2h0YCBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuLyoqXHJcbiAqIEJsb2NrcXVvdGVzXHJcbiAqL1xuYmxvY2txdW90ZSB7XG4gIGZvbnQtc2l6ZTogMS4xODc1ZW07XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgbWFyZ2luOiAwIDAgMS41NjI1ZW07XG4gIHBhZGRpbmctbGVmdDogMC44NDIxMDUyNjMyZW07XG4gIHBhZGRpbmctcmlnaHQ6IDAuODQyMTA1MjYzMmVtO1xufVxuXG5ibG9ja3F1b3RlIGNpdGUge1xuICBjb2xvcjogIzY2NjY2NjtcbiAgZm9udC1zaXplOiAwLjg0MjEwNTI2MzJlbTtcbiAgcGFkZGluZy10b3A6IDFlbTtcbn1cblxuYmxvY2txdW90ZSxcbnEge1xuICBxdW90ZXM6IG5vbmU7XG59XG5cbmJsb2NrcXVvdGU6YmVmb3JlLFxuYmxvY2txdW90ZTphZnRlcixcbnE6YmVmb3JlLFxucTphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xufVxuXG4vKipcclxuICogQHNlY3Rpb24gQ29kZVxyXG4gKiBTdHlsaW5nIGZvciBjb2RlIGFuZCBwcmVmb3JtYXR0ZWQgdGV4dC5cclxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMC44NzVlbTtcbn1cblxuY29kZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmN2Y3Zjc7XG4gIGNvbG9yOiAjZGQxMTQ0O1xuICBwYWRkaW5nOiAwLjI1ZW07XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbn1cblxucHJlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjRmNDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIG1hcmdpbi1ib3R0b206IDEuNTYyNWVtO1xuICBvdmVyZmxvdzogYXV0bztcbiAgcGFkZGluZzogMC44MTI1ZW07XG4gIHRhYi1zaXplOiA0O1xuICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcbn1cblxucHJlIGNvZGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAwO1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC1zaXplOiAxZW07XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxyXG4gKiBAc2VjdGlvbiBCdXR0b25zXHJcbiAqIFN0eWxpbmcgZm9yIENTUyBidXR0b25zLlxyXG4gKi9cbi8qKlxyXG4gKiBQcmltYXJ5IGJ1dHRvbnNcclxuICovXG4uYnRuIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCByZ2JhKDUzLCAyMDcsIDIxMiwgMC45KSwgcmdiYSgyMCwgMTYxLCAyMzAsIDAuOSkpO1xuICBiYWNrZ3JvdW5kLXNpemU6IDIwMCU7XG4gIGJvcmRlcjogMnB4IHdoaXRlIHNvbGlkO1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC1zaXplOiAxZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHBhZGRpbmc6IC41ZW0gMWVtO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIHRyYW5zaXRpb246IC41cztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3gtc2hhZG93OiAycHggMnB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMik7XG59XG5cbi5idG46aG92ZXIsIC5idG46YWN0aXZlIHtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgY2VudGVyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmJ0bi0tYmlnIHtcbiAgcGFkZGluZzogLjdlbSAxLjI1ZW07XG4gIGZvbnQtc2l6ZTogMS4yNWVtO1xufVxuXG4uYnRuLS10cmFuc3BhcmVudCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgdHJhbnNwYXJlbnQgNTAlLCByZ2JhKDUzLCAyMDcsIDIxMiwgMC45KSwgcmdiYSgyMCwgMTYxLCAyMzAsIDAuOSkpO1xufVxuXG4uYnRuLS10cmFuc3BhcmVudDpob3ZlciB7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IGNlbnRlcjtcbn1cblxuLmJ0bi0tZ3JlZW4ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICM2MmFiMDMgNTAlLCByZ2JhKDk4LCAxNzEsIDMsIDAuOSksIHJnYmEoMCwgNzcsIDAsIDAuOSkpO1xufVxuXG4uYnRuLS1ncmVlbjpob3ZlciB7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IGNlbnRlcjtcbn1cblxuLmJ0bi0tc21hbGwge1xuICBwYWRkaW5nOiAuMjVlbSAuNWVtO1xuICBmb250LXdlaWdodDogNTAwO1xufVxuXG4vKipcclxuICogQHNlY3Rpb24gRm9ybXNcclxuICogU3R5bGluZyBmb3IgZm9ybSBlbGVtZW50cy5cclxuICovXG5mb3JtLFxuZmllbGRzZXQge1xuICBtYXJnaW4tYm90dG9tOiAxLjU2MjVlbTtcbn1cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmxlZ2VuZCxcbmxhYmVsIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIG1hcmdpbjogMCAwIDAuMzEyNWVtO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcclxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxyXG4gKiAgICBLbm93biBpc3N1ZTogYWZmZWN0cyBjb2xvciBvZiBkaXNhYmxlZCBlbGVtZW50cy5cclxuICogMi4gQ29ycmVjdCBmb250IHByb3BlcnRpZXMgbm90IGJlaW5nIGluaGVyaXRlZC5cclxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXHJcbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgY29sb3I6ICMyZTJlMmU7XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDMgKi9cbiAgcGFkZGluZzogMC4zMTI1ZW07XG59XG5cbi8qKlxyXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cclxuICovXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXHJcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cclxuICogQWxsIG90aGVyIGZvcm0gY29udHJvbCBlbGVtZW50cyBkbyBub3QgaW5oZXJpdCBgdGV4dC10cmFuc2Zvcm1gIHZhbHVlcy5cclxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cclxuICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxyXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG5pbnB1dCxcbnRleHRhcmVhLFxuc2VsZWN0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIG1hcmdpbi1ib3R0b206IDEuMTg3NWVtO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogLjI1ZW0gLjVlbTtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGJvcmRlcjogMnB4IHNvbGlkICMzNWNmZDQ7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0MGVtKSB7XG4gIGlucHV0LFxuICB0ZXh0YXJlYSxcbiAgc2VsZWN0IHtcbiAgICBsaW5lLWhlaWdodDogMS41NjI1O1xuICB9XG59XG5cbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICB3aWR0aDogYXV0bztcbiAgbWFyZ2luOiBhdXRvO1xufVxuXG4vKipcclxuICogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxyXG4gKiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cclxuICovXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG5mb3JtIGJ1dHRvbixcbmZvcm0gLmJ1dHRvbiB7XG4gIG1hcmdpbi1ib3R0b206IDEuMTg3NWVtO1xufVxuXG50ZXh0YXJlYSB7XG4gIGhlaWdodDogMTJlbTtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cblt0eXBlPVwiaW1hZ2VcIl0sXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IDAuMzEyNWVtO1xuICBwYWRkaW5nOiAwO1xuICB3aWR0aDogYXV0bztcbn1cblxuLyoqXHJcbiAqIEZpeCB0aGUgY3Vyc29yIHN0eWxlIGZvciBDaHJvbWUncyBpbmNyZW1lbnQvZGVjcmVtZW50IGJ1dHRvbnMuIEZvciBjZXJ0YWluXHJcbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXHJcbiAqIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cclxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG5pbnB1dDpmb2N1cyxcbnNlbGVjdDpmb2N1cyxcbnRleHRhcmVhOmZvY3VzIHtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDgyLCAxNjgsIDIzNiwgMC44KTtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNzUpLCAwIDAgMC41ZW0gcmdiYSg4MiwgMTY4LCAyMzYsIDAuNik7XG4gIG91dGxpbmU6IDA7XG4gIG91dGxpbmU6IHRoaW4gZG90dGVkIFxcOTtcbn1cblxuW3R5cGU9XCJmaWxlXCJdOmZvY3VzLFxuW3R5cGU9XCJjaGVja2JveFwiXTpmb2N1cyxcbnNlbGVjdDpmb2N1cyB7XG4gIG91dGxpbmU6IHRoaW4gZG90dGVkO1xuICBvdXRsaW5lOiAwLjMxMjVlbSBhdXRvIC13ZWJraXQtZm9jdXMtcmluZy1jb2xvcjtcbiAgb3V0bGluZS1vZmZzZXQ6IC0wLjEyNWVtO1xufVxuXG4vKipcclxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXHJcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cclxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cclxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqL1xufVxuXG4vKipcclxuICogSW5saW5lIGlucHV0c1xyXG4gKi9cbi5pbnB1dC1pbmxpbmUge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG4vKipcclxuICogQ29uZGVuc2VkIGlucHV0c1xyXG4gKi9cbi5pbnB1dC1jb25kZW5zZWQge1xuICBwYWRkaW5nOiAxcHggMC4zMTI1ZW07XG4gIGZvbnQtc2l6ZTogMC45Mzc1ZW07XG59XG5cbi8qKlxyXG4gKiBTZWFyY2hcclxuICovXG4vKipcclxuICAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxyXG4gICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXHJcbiAgKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi9cbn1cblxuLyoqXHJcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxyXG4gKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXHJcbiAqIHBhZGRpbmcgKGFuZCBgdGV4dGZpZWxkYCBhcHBlYXJhbmNlKS5cclxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcclxuICogQ3JlYXRlIHJvdW5kZWQgc2VhcmNoIGJhclxyXG4gKi9cbi5pbnB1dC1zZWFyY2gge1xuICB3aWR0aDogODUlO1xuICBwYWRkaW5nLWxlZnQ6IDAuOTM3NWVtO1xuICBwYWRkaW5nLXJpZ2h0OiAyLjVlbTtcbiAgYm9yZGVyLXJhZGl1czogMS4zMTI1ZW07XG4gIHRyYW5zaXRpb246IHdpZHRoIDMwMG1zIGVhc2UtaW47XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0MGVtKSB7XG4gIC5pbnB1dC1zZWFyY2gge1xuICAgIHdpZHRoOiA2NSU7XG4gIH1cbn1cblxuLyoqXHJcbiAqIFNwZWNpYWwgc3R5bGluZyBmb3Igc2VhcmNoIGljb24gYXMgYnV0dG9uXHJcbiAqL1xuLmJ0bi1zZWFyY2gge1xuICBkaXNwbGF5OiBpbmxpbmU7XG4gIGNvbG9yOiAjNjY2NjY2O1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIG1hcmdpbi1sZWZ0OiAtMi41ZW07XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5idG4tc2VhcmNoIC5pY29uIHtcbiAgZmlsbDogIzY2NjY2Njtcbn1cblxuLmJ0bi1zZWFyY2g6aG92ZXIge1xuICBjb2xvcjogIzQwNDA0MDtcbn1cblxuLmJ0bi1zZWFyY2g6aG92ZXIgLmljb24ge1xuICBmaWxsOiAjNDA0MDQwO1xufVxuXG4vKipcclxuICogQHNlY3Rpb24gVGFibGVzXHJcbiAqIFN0eWxpbmcgZm9yIHRhYmxlc1xyXG4gKi9cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG4gIG1hcmdpbi1ib3R0b206IDEuNTYyNWVtO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG50aCxcbnRkIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgcGFkZGluZzogMC41ZW07XG59XG5cbnRoIHtcbiAgYm9yZGVyLWJvdHRvbTogMC4xMjVlbSBzb2xpZCAjZTVlNWU1O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbn1cblxudGQge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2U1ZTVlNTtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuLyoqXHJcbiAqIEFkZHMgemVicmEgc3RyaXBpbmdcclxuICovXG4udGFibGUtc3RyaXBlZCB0Ym9keSB0cjpudGgtY2hpbGQob2RkKSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmN2Y3Zjc7XG59XG5cbi8qKlxyXG4gKiBSZWR1Y2VzIHBhZGRpbmcgb24gY29uZGVuc2VkIHRhYmxlc1xyXG4gKi9cbi50YWJsZS1jb25kZW5zZWQgdGgsXG4udGFibGUtY29uZGVuc2VkIHRkIHtcbiAgcGFkZGluZzogMC4yNWVtO1xufVxuXG4vKiBJbXBvcnQgYWRkLW9ucyBoZXJlLi4uICovXG4vKipcclxuICogQHNlY3Rpb24gT3ZlcnJpZGVzXHJcbiAqIE51ZGdlIGFuZCB0d2VhayBhbGlnbm1lbnQsIHNwYWNpbmcsIGFuZCB2aXNpYmlsaXR5LlxyXG4gKi9cbi8qKlxyXG4gKiBUZXh0IHNpemVzXHJcbiAqL1xuLnRleHQtc21hbGwge1xuICBmb250LXNpemU6IDAuOTM3NWVtO1xufVxuXG4udGV4dC1sYXJnZSB7XG4gIGZvbnQtc2l6ZTogMS4xODc1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0MGVtKSB7XG4gIC50ZXh0LWxhcmdlIHtcbiAgICBmb250LXNpemU6IDEuMzEyNWVtO1xuICB9XG59XG5cbi8qKlxyXG4gKiBUZXh0IGNvbG9yc1xyXG4gKi9cbi50ZXh0LW11dGVkIHtcbiAgY29sb3I6ICM2NjY2NjY7XG59XG5cbi8qKlxyXG4gKiBUZXh0IGFsaWdubWVudFxyXG4gKi9cbi50ZXh0LWNlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnRleHQtcmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLnRleHQtbGVmdCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0MGVtKSB7XG4gIC50ZXh0LXJpZ2h0LW1lZGl1bSB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIH1cbn1cblxuLyoqXHJcbiAqIEZsb2F0c1xyXG4gKi9cbi5mbG9hdC1sZWZ0IHtcbiAgZmxvYXQ6IGxlZnQ7XG59XG5cbi5mbG9hdC1jZW50ZXIge1xuICBmbG9hdDogbm9uZTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbn1cblxuLmZsb2F0LXJpZ2h0IHtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4vKipcclxuICogTWFyZ2luc1xyXG4gKi9cbi5uby1tYXJnaW4tdG9wIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cblxuLm5vLW1hcmdpbi1ib3R0b20ge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4ubWFyZ2luLXRvcCB7XG4gIG1hcmdpbi10b3A6IDEuNTYyNWVtO1xufVxuXG4ubWFyZ2luLWJvdHRvbSB7XG4gIG1hcmdpbi1ib3R0b206IDEuNTYyNWVtO1xufVxuXG4ubWFyZ2luLWJvdHRvbS1zbWFsbCB7XG4gIG1hcmdpbi1ib3R0b206IDAuNWVtO1xufVxuXG4ubWFyZ2luLWJvdHRvbS1sYXJnZSB7XG4gIG1hcmdpbi1ib3R0b206IDJlbTtcbn1cblxuLyoqXHJcbiAqIFBhZGRpbmdcclxuICovXG4ubm8tcGFkZGluZy10b3Age1xuICBwYWRkaW5nLXRvcDogMDtcbn1cblxuLm5vLXBhZGRpbmctYm90dG9tIHtcbiAgcGFkZGluZy1ib3R0b206IDA7XG59XG5cbi5wYWRkaW5nLXRvcCB7XG4gIHBhZGRpbmctdG9wOiAxLjU2MjVlbTtcbn1cblxuLnBhZGRpbmctdG9wLXNtYWxsIHtcbiAgcGFkZGluZy10b3A6IDAuNWVtO1xufVxuXG4ucGFkZGluZy10b3AtbGFyZ2Uge1xuICBwYWRkaW5nLXRvcDogNGVtO1xufVxuXG4ucGFkZGluZy1ib3R0b20ge1xuICBwYWRkaW5nLWJvdHRvbTogMS41NjI1ZW07XG59XG5cbi5wYWRkaW5nLWJvdHRvbS1zbWFsbCB7XG4gIHBhZGRpbmctYm90dG9tOiAwLjVlbTtcbn1cblxuLnBhZGRpbmctYm90dG9tLWxhcmdlIHtcbiAgcGFkZGluZy1ib3R0b206IDJlbTtcbn1cblxuLyoqXHJcbiAqIFZpc2liaWxpdHlcclxuICovXG4vKlxyXG4gKiBIaWRlIG9ubHkgdmlzdWFsbHksIGJ1dCBoYXZlIGl0IGF2YWlsYWJsZSBmb3Igc2NyZWVuIHJlYWRlcnM6XHJcbiAqIEBsaW5rIGh0dHBzOi8vc25vb2suY2EvYXJjaGl2ZXMvaHRtbF9hbmRfY3NzL2hpZGluZy1jb250ZW50LWZvci1hY2Nlc3NpYmlsaXR5XHJcbiAqXHJcbiAqIDEuIEZvciBsb25nIGNvbnRlbnQsIGxpbmUgZmVlZHMgYXJlIG5vdCBpbnRlcnByZXRlZCBhcyBzcGFjZXMgYW5kIHNtYWxsIHdpZHRoXHJcbiAqICAgIGNhdXNlcyBjb250ZW50IHRvIHdyYXAgMSB3b3JkIHBlciBsaW5lOlxyXG4gKiAgICBodHRwczovL21lZGl1bS5jb20vQGplc3NlYmVhY2gvYmV3YXJlLXNtdXNoZWQtb2ZmLXNjcmVlbi1hY2Nlc3NpYmxlLXRleHQtNTk1MmE0YzJjYmZlXHJcbiAqL1xuLnZpc3VhbGx5LWhpZGRlbiB7XG4gIGJvcmRlcjogMDtcbiAgY2xpcDogcmVjdCgwIDAgMCAwKTtcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogLTFweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcGFkZGluZzogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAvKiAxICovXG4gIHdpZHRoOiAxcHg7XG59XG5cbi5zb2Z0LWhpZGRlbiB7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbn1cblxuLypcclxuICogRXh0ZW5kcyB0aGUgLnZpc3VhbGx5aGlkZGVuIGNsYXNzIHRvIGFsbG93IHRoZSBlbGVtZW50IHRvIGJlIGZvY3VzYWJsZSB3aGVuIG5hdmlnYXRlZCB0byB2aWEgdGhlIGtleWJvYXJkXHJcbiAqIEBsaW5rIGh0dHBzOi8vd3d3LmRydXBhbC5vcmcvbm9kZS84OTc2MzhcclxuICovXG4udmlzdWFsbHktaGlkZGVuLmZvY3VzYWJsZTphY3RpdmUsXG4udmlzdWFsbHktaGlkZGVuLmZvY3VzYWJsZTpmb2N1cyB7XG4gIGNsaXA6IGF1dG87XG4gIGhlaWdodDogYXV0bztcbiAgbWFyZ2luOiAwO1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgcG9zaXRpb246IHN0YXRpYztcbiAgd2hpdGUtc3BhY2U6IGluaGVyaXQ7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG4vKipcclxuICogQHdvcmthcm91bmRcclxuICogQGFmZmVjdGVkIElFIDgvOS8xMFxyXG4gKiBAbGluayBodHRwOi8vanVpY3lzdHVkaW8uY29tL2FydGljbGUvc2NyZWVuLXJlYWRlcnMtZGlzcGxheS1ub25lLnBocFxyXG4gKi9cbltoaWRkZW5dLCB0ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbn1cblxuLyoqXHJcbiAqIENvbnRhaW4gZmxvYXRzXHJcbiAqIFRoZSBzcGFjZSBjb250ZW50IGlzIG9uZSB3YXkgdG8gYXZvaWQgYW4gT3BlcmEgYnVnIHdoZW4gdGhlIGBjb250ZW50ZWRpdGFibGVgIGF0dHJpYnV0ZSBpcyBpbmNsdWRlZCBhbnl3aGVyZSBlbHNlIGluIHRoZSBkb2N1bWVudC5cclxuICogQGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL2g1YnAvaHRtbDUtYm9pbGVycGxhdGUvYmxvYi9tYXN0ZXIvZGlzdC9jc3MvbWFpbi5jc3NcclxuICovXG4uY2xlYXJmaXg6YmVmb3JlLCAuY29udGFpbmVyOmJlZm9yZSxcbi5jbGVhcmZpeDphZnRlcixcbi5jb250YWluZXI6YWZ0ZXIge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgY29udGVudDogXCIgXCI7XG59XG5cblxuLmNsZWFyZml4OmFmdGVyLFxuLmNvbnRhaW5lcjphZnRlciB7XG4gIGNsZWFyOiBib3RoO1xufVxuXG4vKipcclxuICogQHNlY3Rpb24gUHJpbnRcclxuICogU3R5bGluZyBmb3IgcHJpbnRlZCBjb250ZW50LiBBZGFwdGVkIGZyb20gSFRNTDVCUC5cclxuICogQGxpbmsgaHR0cDovL2h0bWw1Ym9pbGVycGxhdGUuY29tXHJcbiAqL1xuQG1lZGlhIHByaW50IHtcbiAgLyoqXHJcblx0ICogVW5pdmVyc2FsIHNlbGVjdG9yLlxyXG5cdCAqIFJlc2V0IGFsbCBjb250ZW50IHRvIHRyYW5zcGFyZW50IGJhY2tncm91bmQsIGJsYWNrIGNvbG9yLCBhbmQgcmVtb3ZlIGJveCBhbmQgdGV4dCBzaGFkb3dzLlxyXG5cdCAqL1xuICAqIHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG4gICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgIHRleHQtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbiAgLyoqXHJcblx0ICogU3BlY2lmaWVzIHBhZ2UgbWFyZ2luXHJcblx0ICovXG4gIEBwYWdlIHtcbiAgICBtYXJnaW46IDAuNWNtO1xuICB9XG4gIC8qKlxyXG5cdCAqIFVuZGVybGluZSBhbGwgbGlua3NcclxuXHQgKi9cbiAgYSxcbiAgYTp2aXNpdGVkIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgfVxuICAvKipcclxuXHQgKiBTaG93IFVSTCBhZnRlciBsaW5rc1xyXG5cdCAqL1xuICBhW2hyZWZdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAoXCIgYXR0cihocmVmKSBcIilcIjtcbiAgfVxuICAvKipcclxuXHQgKiBEb24ndCBzaG93IFVSTCBmb3IgaW50ZXJuYWwgbGlua3NcclxuXHQgKi9cbiAgYVtocmVmXj1cIiNcIl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gIH1cbiAgLyoqXHJcblx0ICogU3BlY2lmaWVzIHRoZSBtaW5pbXVtIG51bWJlciBvZiBsaW5lcyB0byBwcmludCBhdCB0aGUgdG9wIGFuZCBib3R0b20gb2YgYSBwYWdlLlxyXG5cdCAqL1xuICBwLFxuICBoMSwgaDIsIGgzIHtcbiAgICBvcnBoYW5zOiAzO1xuICAgIHdpZG93czogMztcbiAgfVxuICAvKipcclxuXHQgKiBBdm9pZCBpbnNlcnRpbmcgYSBwYWdlIGJyZWFrIGFmdGVyIGhlYWRlcnNcclxuXHQgKi9cbiAgaDEsIGgyLCBoMyB7XG4gICAgcGFnZS1icmVhay1hZnRlcjogYXZvaWQ7XG4gIH1cbiAgLyoqXHJcblx0ICogQ2hhbmdlIGJvcmRlciBjb2xvciBvbiBibG9ja3F1b3RlcyBhbmQgcHJlZm9ybWF0dGVkIHRleHQuXHJcblx0ICogQXZvaWQgcGFnZSBicmVha3MgaW5zaWRlIHRoZSBjb250ZW50XHJcblx0ICovXG4gIHByZSxcbiAgYmxvY2txdW90ZSB7XG4gICAgYm9yZGVyLWNvbG9yOiAjOTk5O1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcbiAgfVxuICAvKipcclxuXHQgKiBEaXNwbGF5ZWQgYXMgYSB0YWJsZSBoZWFkZXIgcm93IGdyb3VwXHJcblx0ICovXG4gIHRoZWFkIHtcbiAgICBkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXA7XG4gIH1cbiAgLyoqXHJcblx0ICogQXZvaWQgaW5zZXJ0aW5nIGEgcGFnZSBicmVhayBpbnNpZGUgdGFibGUgcm93cyBhbmQgaW1hZ2VzXHJcblx0ICovXG4gIHRyLFxuICBpbWcge1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcbiAgfVxufVxuIiwiLyoqXHJcbiAqIEBzZWN0aW9uIE5vcm1hbGl6ZS5jc3NcclxuICogTm9ybWFsaXplLmNzcyBiYXNlIHdpdGggY3VzdG9tIGNvZGUuXHJcbiAqIEFkZGl0aW9uYWwgbm9ybWFsaXplIHN0eWxlcyBpbmNvcnBvcmF0ZWQgdGhyb3VnaG91dCBjb21wb25lbnRzLlxyXG4gKiBAbGluayBodHRwOi8vbmVjb2xhcy5naXRodWIuaW8vbm9ybWFsaXplLmNzcy9cclxuICovXHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSB0YXAgZGVsYXkgaW4gd2Via2l0XHJcbiAqIEBsaW5rIGh0dHBzOi8vbWVkaXVtLmNvbS9AYWRhY3Rpby9kZWxheS1hOWRmOWVkY2VlZjMjLjdkbWJsM3hvd1xyXG4gKi9cclxuYSxcclxuYnV0dG9uLFxyXG5pbnB1dCxcclxuc2VsZWN0LFxyXG50ZXh0YXJlYSxcclxubGFiZWwsXHJcbnN1bW1hcnkge1xyXG5cdHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIEFkZCBib3ggc2l6aW5nIHRvIGV2ZXJ5dGhpbmdcclxuICogQGxpbmsgaHR0cDovL3d3dy5wYXVsaXJpc2guY29tLzIwMTIvYm94LXNpemluZy1ib3JkZXItYm94LWZ0dy9cclxuICovXHJcbiosXHJcbio6YmVmb3JlLFxyXG4qOmFmdGVyIHtcclxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIDEuIEZvcmNlIHNjcm9sbGJhciBkaXNwbGF5IHRvIHByZXZlbnQganVtcGluZyBvbiBwYWdlcy5cclxuICogMi4gUHJldmVudCBpT1MgdGV4dCBzaXplIGFkanVzdCBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2UsIHdpdGhvdXQgZGlzYWJsaW5nXHJcbiAqICAgIHVzZXIgem9vbS5cclxuICovXHJcbmh0bWwge1xyXG5cdG92ZXJmbG93LXk6IHNjcm9sbDsgLyogMSAqL1xyXG5cdHRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxyXG4gKi9cclxuYm9keSB7XHJcblx0bWFyZ2luOiAwO1xyXG59XHJcblxyXG4vKipcclxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cclxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBpbiBJRSAxMC8xMVxyXG4gKiBhbmQgRmlyZWZveC5cclxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cclxuICovXHJcbmFydGljbGUsXHJcbmFzaWRlLFxyXG5jaXRlLFxyXG5kZXRhaWxzLFxyXG5maWdjYXB0aW9uLFxyXG5maWd1cmUsXHJcbmZvb3RlcixcclxuaGVhZGVyLFxyXG5oZ3JvdXAsXHJcbm1haW4sXHJcbm1lbnUsXHJcbm5hdixcclxuc2VjdGlvbiB7XHJcblx0ZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi8qXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cclxuICovXHJcbnN1bW1hcnkge1xyXG5cdGRpc3BsYXk6IGxpc3QtaXRlbTtcclxufVxyXG5cclxuLyoqXHJcbiAqIENvcnJlY3QgYGlubGluZS1ibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA4LzkuXHJcbiAqL1xyXG5hdWRpbyxcclxuY2FudmFzLFxyXG5wcm9ncmVzcyxcclxudmlkZW8ge1xyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jazsgLyogMSAqL1xyXG59XHJcblxyXG4vKipcclxuICogTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxyXG4gKi9cclxucHJvZ3Jlc3Mge1xyXG5cdHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFByZXZlbnQgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyBgYXVkaW9gIHdpdGhvdXQgY29udHJvbHMuXHJcbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXHJcbiAqL1xyXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xyXG5cdGRpc3BsYXk6IG5vbmU7XHJcblx0aGVpZ2h0OiAwO1xyXG59XHJcblxyXG4vKipcclxuICogUHJldmVudCBpbWcgYW5kIHZpZGVvIGVsZW1lbnRzIGZyb20gc3BpbGxpbmcgb3V0c2lkZSBvZiB0aGUgcGFnZSBvbiBzbWFsbGVyIHNjcmVlbnMuXHJcbiAqL1xyXG5pbWcsXHJcbnZpZGVvIHtcclxuXHR3aWR0aDogMTAwJTtcclxuXHRtYXgtd2lkdGg6IDEwMCU7XHJcblx0aGVpZ2h0OiAxMDAlO1xyXG5cdG9iamVjdC1maXQ6IGNvdmVyO1xyXG59XHJcblxyXG4vKipcclxuICogUHJldmVudCBpZnJhbWUsIG9iamVjdCwgYW5kIGVtYmVkIGVsZW1lbnRzIGZyb20gc3BpbGxpbmcgb3V0c2lkZSBvZiB0aGUgcGFnZSBvbiBzbWFsbGVyIHNjcmVlbnMuXHJcbiAqIGhlaWdodDogYXV0byBjYXVzZXMgaWZyYW1lcyB0byBzbXVzaCwgc28gaXQncyBvbWl0dGVkIGhlcmUuXHJcbiAqL1xyXG5pZnJhbWUsXHJcbm9iamVjdCxcclxuZW1iZWQge1xyXG5cdG1heC13aWR0aDogMTAwJTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEhpZGUgdGhlIHRlbXBsYXRlIGVsZW1lbnQgaW4gSUUsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cclxuICovXHJcbnRlbXBsYXRlIHtcclxuXHRAZXh0ZW5kIFtoaWRkZW5dO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAuXHJcbiAqIDIuIFByZXZlbnRzIElFIGZyb20gbWFraW5nIHNjYWxlZCBpbWFnZXMgbG9vayBsaWtlIGNyYXBcclxuICovXHJcbmltZyB7XHJcblx0Ym9yZGVyLXN0eWxlOiBub25lOyAvKiAxICovXHJcblx0LW1zLWludGVycG9sYXRpb24tbW9kZTogYmljdWJpYzsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXHJcbiAqL1xyXG5zdmc6bm90KDpyb290KSB7XHJcblx0b3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IG1hcmdpbi5cclxuICovXHJcbmZpZ3VyZSB7XHJcblx0bWFyZ2luOiAwO1xyXG59XHJcblxyXG4vKipcclxuICogQHdvcmthcm91bmQgUmVtb3ZlIGZvY3VzIGZyb20gPG1haW4+IGVsZW1lbnQgd2hlbiB1c2luZyB0YWJpbmRleD1cIi0xXCIgaGFjayBmb3Igc2tpcG5hdiBsaW5rXHJcbiAqIEBsaW5rIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD0zNzcyMVxyXG4gKi9cclxuW3RhYmluZGV4PVwiLTFcIl06Zm9jdXMge1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxufSIsIi8qKlxyXG4gKiBAc2VjdGlvbiBHcmlkXHJcbiAqIFN0cnVjdHVyZSBhbmQgbGF5b3V0XHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIEJhc2UgZ3JpZCBzdHlsZXM6IHNpbmdsZSBjb2x1bW5cclxuICovXHJcbi5jb250YWluZXIge1xyXG5cdEBleHRlbmQgLmNsZWFyZml4O1xyXG5cdG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG5cdG1hcmdpbi1yaWdodDogYXV0bztcclxuXHRtYXgtd2lkdGg6ICRjb250YWluZXItbWF4LXdpZHRoO1xyXG5cdHdpZHRoOiAkY29udGFpbmVyLXdpZHRoO1xyXG59XHJcblxyXG4ucm93IHtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblx0ZmxleC13cmFwOiB3cmFwO1xyXG5cdG1hcmdpbi1sZWZ0OiAkZ3JpZC1tYXJnaW5zICogLTE7XHJcblx0bWFyZ2luLXJpZ2h0OiAkZ3JpZC1tYXJnaW5zICogLTE7XHJcbn1cclxuLm5vLWxhdC1tYXJnaW5ze1xyXG5cdG1hcmdpbi1sZWZ0OiAwICFpbXBvcnRhbnQ7XHJcblx0bWFyZ2luLXJpZ2h0OiAwICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogQWxpZ25tZW50XHJcbiAqL1xyXG5cclxuLyogRmxvYXQgY29udGVudCB0byB0aGUgdG9wICovXHJcbi5yb3ctdG9wIHtcclxuXHRhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxufVxyXG5cclxuLyogRmxvYXQgY29udGVudCBpbiB0aGUgbWlkZGxlICovXHJcbi5yb3ctbWlkZGxlIHtcclxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4vKiBQdXNoIGNvbnRlbnQgdG8gdGhlIGJvdHRvbSAqL1xyXG4ucm93LWJvdHRvbSB7XHJcblx0YWxpZ24taXRlbXM6IGZsZXgtZW5kO1xyXG59XHJcblxyXG4vKiBNb3ZlIGNvbnRlbnQgdG8gdGhlIHN0YXJ0IG9mIHRoZSByb3cgKi9cclxuLnJvdy1zdGFydCB7XHJcblx0anVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG59XHJcblxyXG4vKiBGbG9hdCBjb250ZW50IGluIHRoZSBjZW50ZXIgb2YgdGhlIHJvdyAqL1xyXG4ucm93LWNlbnRlciB7XHJcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbi8qIE1vdmUgY29udGVudCB0byB0aGUgZW5kIG9mIHRoZSByb3cgKi9cclxuLnJvdy1lbmQge1xyXG5cdGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbn1cclxuXHJcbi8qIEFkZCBldmVuIHNwYWNpbmcgYXJvdW5kIGVhY2ggaXRlbSAqL1xyXG4ucm93LWFyb3VuZCB7XHJcblx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbn1cclxuXHJcbi8qIEFkZCBldmVuIHNwYWNpbmcgYmV0d2VlbiBpdGVtcyAqL1xyXG4ucm93LWJldHdlZW4ge1xyXG5cdGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxufVxyXG5cclxuLyogUmV2ZXJzZSBjb250ZW50IG9yZGVyICovXHJcbi5yb3ctcmV2ZXJzZSB7XHJcblx0ZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xyXG59XHJcblxyXG4lZ3JpZC1iYXNlIHtcclxuXHRmbGV4LWJhc2lzOiAxMDAlO1xyXG5cdG1hcmdpbi1sZWZ0OiAkZ3JpZC1tYXJnaW5zO1xyXG5cdG1hcmdpbi1yaWdodDogJGdyaWQtbWFyZ2lucztcclxufVxyXG5cclxuQGVhY2ggJGdyaWQsICR3aWR0aCBpbiAoJGdyaWQtc2l6ZXMpIHtcclxuXHQuZ3JpZC0jeyRncmlkfSB7XHJcblx0XHRAZXh0ZW5kICVncmlkLWJhc2U7XHJcblx0fVxyXG59XHJcblxyXG4uZ3JpZC1hdXRvIHtcclxuXHRAZXh0ZW5kICVncmlkLWJhc2U7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogQWRkIGNvbHVtbnMgdG8gZ3JpZCBvbiBiaWdnZXIgc2NyZWVuc1xyXG4gKi9cclxuQGVhY2ggJGJyZWFrcG9pbnQsICRwcmVmaXgsICRvZmZzZXQgaW4gKCRncmlkLWJyZWFrcG9pbnRzKXtcclxuXHRAbWVkaWEgKG1pbi13aWR0aDogJGJyZWFrcG9pbnQpIHtcclxuXHRcdC5yb3cjeyRwcmVmaXh9ICB7XHJcblx0XHRcdGZsZXgtd3JhcDogbm93cmFwO1xyXG5cdFx0fVxyXG5cclxuXHRcdEBpZiAkZ3JpZC13cmFwIHtcclxuXHJcblx0XHRcdC5yb3ctd3JhcCN7JHByZWZpeH0ge1xyXG5cdFx0XHRcdGZsZXgtd3JhcDogd3JhcDtcclxuXHJcblx0XHRcdFx0QGVhY2ggJGdyaWQsICR3aWR0aCBpbiAoJGdyaWQtc2l6ZXMpIHtcclxuXHRcdFx0XHRcdCVncmlkLXdpdGgtcGFkZGluZyB7XHJcblx0XHRcdFx0XHRcdG1hcmdpbi1sZWZ0OiAwO1xyXG5cdFx0XHRcdFx0XHRtYXJnaW4tcmlnaHQ6IDA7XHJcblx0XHRcdFx0XHRcdHBhZGRpbmctbGVmdDogJGdyaWQtbWFyZ2lucztcclxuXHRcdFx0XHRcdFx0cGFkZGluZy1yaWdodDogJGdyaWQtbWFyZ2lucztcclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHQuZ3JpZC0jeyRncmlkfSB7XHJcblx0XHRcdFx0XHRcdC8vIEBleHRlbmQgJWdyaWQtd2l0aC1wYWRkaW5nO1xyXG5cdFx0XHRcdFx0XHRtYXJnaW4tbGVmdDogMDtcclxuXHRcdFx0XHRcdFx0bWFyZ2luLXJpZ2h0OiAwO1xyXG5cdFx0XHRcdFx0XHRwYWRkaW5nLWxlZnQ6ICRncmlkLW1hcmdpbnM7XHJcblx0XHRcdFx0XHRcdHBhZGRpbmctcmlnaHQ6ICRncmlkLW1hcmdpbnM7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQuZ3JpZC1hdXRvIHtcclxuXHRcdFx0XHRcdC8vIEBleHRlbmQgJWdyaWQtd2l0aC1wYWRkaW5nO1xyXG5cdFx0XHRcdFx0bWFyZ2luLWxlZnQ6IDA7XHJcblx0XHRcdFx0XHRtYXJnaW4tcmlnaHQ6IDA7XHJcblx0XHRcdFx0XHRwYWRkaW5nLWxlZnQ6ICRncmlkLW1hcmdpbnM7XHJcblx0XHRcdFx0XHRwYWRkaW5nLXJpZ2h0OiAkZ3JpZC1tYXJnaW5zO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdCN7JHByZWZpeH0gLmdyaWQtYXV0byB7XHJcblx0XHRcdGZsZXgtYmFzaXM6IGF1dG87XHJcblx0XHRcdGZsZXgtZ3JvdzogMTtcclxuXHRcdH1cclxuXHJcblx0XHRAZWFjaCAkZ3JpZCwgJHdpZHRoIGluICgkZ3JpZC1zaXplcykge1xyXG5cdFx0XHQjeyRwcmVmaXh9IC5ncmlkLSN7JGdyaWR9IHtcclxuXHRcdFx0XHRmbGV4LWJhc2lzOiAkd2lkdGg7XHJcblx0XHRcdFx0bWF4LXdpZHRoOiAkd2lkdGg7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdEBpZiAkb2Zmc2V0IHtcclxuXHRcdFx0QGVhY2ggJGdyaWQsICR3aWR0aCBpbiAoJGdyaWQtc2l6ZXMpIHtcclxuXHRcdFx0XHQjeyRwcmVmaXh9IC5vZmZzZXQtI3skZ3JpZH0ge1xyXG5cdFx0XHRcdFx0bWFyZ2luLWxlZnQ6ICR3aWR0aDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHQjeyRwcmVmaXh9IC5ncmlkLWZpcnN0IHtcclxuXHRcdFx0LXdlYmtpdC1ib3gtb3JkaW5hbC1ncm91cDogMDtcclxuXHRcdFx0b3JkZXI6IC0xO1xyXG5cdFx0fVxyXG5cclxuXHRcdCN7JHByZWZpeH0gLmdyaWQtbGFzdCB7XHJcblx0XHRcdC13ZWJraXQtYm94LW9yZGluYWwtZ3JvdXA6IDI7XHJcblx0XHRcdG9yZGVyOiAxO1xyXG5cdFx0fVxyXG5cdH1cclxufSIsIi8qKlxyXG4gKiBAc2VjdGlvbiBUeXBvZ3JhcGh5XHJcbiAqIFNldHMgZm9udCBzdHlsZXMgZm9yIGVudGlyZSBzaXRlXHJcbiAqL1xyXG5cclxuKjo6c2VsZWN0aW9ue1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkbGlnaHQtYmx1ZSwgLjMpO1xyXG59XHJcblxyXG4vL2JvZHl7XHJcbi8vICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcclxuLy8gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4vL31cclxuXHJcbmJvZHkge1xyXG5cdGJhY2tncm91bmQ6IHdoaXRlO1xyXG5cdGNvbG9yOiAkZ3JleTtcclxuXHRmb250LWZhbWlseTogJGZvbnQtdGV4dDtcclxuXHRmb250LXNpemU6ICRmb250LXNpemU7XHJcblx0bGluZS1oZWlnaHQ6IDEuNTtcclxuXHJcblx0QG1lZGlhIChtaW4td2lkdGg6ICRicC1tZWRpdW0pIHtcclxuXHRcdGxpbmUtaGVpZ2h0OiAxLjU2MjU7XHJcblx0fVxyXG5cclxufVxyXG5cclxubWFpbntcclxuXHRiYWNrZ3JvdW5kOiB3aGl0ZTtcclxufVxyXG5cclxuXHJcbnAge1xyXG5cdG1hcmdpbjogMCAwICRzcGFjaW5nO1xyXG59XHJcblxyXG4udW5kZXJsaW5le1xyXG5cdHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG59XHJcbi8qKlxyXG4gKiBIeXBlcmxpbmsgc3R5bGluZ1xyXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXHJcbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cclxuICovXHJcblxyXG5hIHtcclxuICAgIGNvbG9yOiAkZ3JleTtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgLyogMSAqL1xyXG5cdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuXHR0ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xyXG5cdHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuXHJcblx0LyoqXHJcblx0ICogSW1wcm92ZSByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnMuXHJcblx0ICovXHJcblx0JjphY3RpdmUsXHJcblx0Jjpob3ZlciB7XHJcblx0XHRvdXRsaW5lOiAwO1xyXG5cdH1cclxufVxyXG5cclxuXHJcblxyXG4vKipcclxuICogTGlzdCBzdHlsaW5nXHJcbiAqL1xyXG5cclxudWwsXHJcbm9sIHtcclxuXHRtYXJnaW46IDAgMCAkc3BhY2luZyAyZW07XHJcblx0cGFkZGluZzogMDtcclxufVxyXG5cclxudWwgdWwsXHJcbnVsIG9sLFxyXG5vbCBvbCxcclxub2wgdWwge1xyXG5cdG1hcmdpbi1ib3R0b206IDA7XHJcbn1cclxuXHJcbmRsLFxyXG5kZCB7XHJcblx0bWFyZ2luOiAwO1xyXG5cdHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbmRkIHtcclxuXHRtYXJnaW4tYm90dG9tOiAkc3BhY2luZztcclxufVxyXG5cclxuZHQge1xyXG5cdGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4vKipcclxuICogQGJ1Z2ZpeCBQcmV2ZW50IHdlYmtpdCBmcm9tIHJlbW92aW5nIGxpc3Qgc2VtYW50aWNzXHJcbiAqIDEuIEFkZCBhIG5vbi1icmVha2luZyBzcGFjZVxyXG4gKiAyLiBNYWtlIHN1cmUgaXQgZG9lc24ndCBtZXNzIHVwIHRoZSBET00gZmxvd1xyXG4gKi9cclxuJWxpc3Qtc3R5bGUtbm9uZSB7XHJcblx0bGlzdC1zdHlsZTogbm9uZTtcclxuXHJcblx0JiA+IGxpOmJlZm9yZSB7XHJcblx0XHRjb250ZW50OiBcIlxcMjAwQlwiOyAvKiAxICovXHJcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7IC8qIDIgKi9cclxuXHR9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmVzIGxpc3Qgc3R5bGluZy5cclxuICogRm9yIHNlbWFudGljIHJlYXNvbnMsIHNob3VsZCBvbmx5IGJlIHVzZWQgb24gdW5vcmRlcmVkIGxpc3RzLlxyXG4gKi9cclxuLmxpc3QtdW5zdHlsZWQge1xyXG5cdEBleHRlbmQgJWxpc3Qtc3R5bGUtbm9uZTtcclxuXHRtYXJnaW4tbGVmdDogMDtcclxufVxyXG5cclxuLyoqXHJcbiAqIERpc3BsYXkgbGlzdHMgb24gYSBzaW5nbGUgbGluZS5cclxuICovXHJcblxyXG4ubGlzdC1pbmxpbmUge1xyXG5cdEBleHRlbmQgJWxpc3Qtc3R5bGUtbm9uZTtcclxuXHRtYXJnaW4tbGVmdDogLTAuNWVtO1xyXG5cdG1hcmdpbi1yaWdodDogLTAuNWVtO1xyXG5cdHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbi5saXN0LWlubGluZSA+IGxpIHtcclxuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0bWFyZ2luLWxlZnQ6IDAuNWVtO1xyXG5cdG1hcmdpbi1yaWdodDogMC41ZW07XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogSGVhZGluZyBzdHlsaW5nIGZvciBoMSB0aHJvdWdoIGg2IGVsZW1lbnRzLlxyXG4gKiBIZWFkaW5nIGNsYXNzIGxldHMgeW91IHVzZSBvbmUgaGVhZGluZyB0eXBlIGZvciBzZW1hbnRpY3MsIGJ1dCBzdHlsZSBpdCBhcyBhbm90aGVyIGhlYWRpbmcgdHlwZS5cclxuICovXHJcblxyXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcclxuXHRmb250LXdlaWdodDogbm9ybWFsO1xyXG5cdGxpbmUtaGVpZ2h0OiAxLjI7XHJcblx0bWFyZ2luOiAwIDAgMWVtO1xyXG5cdHBhZGRpbmc6IDFlbSAwIDA7XHJcblx0d29yZC13cmFwOiBicmVhay13b3JkO1xyXG5cdGZvbnQtZmFtaWx5OiAkZm9udC10aXRsZXM7XHJcbn1cclxuXHJcbmgxLFxyXG4uaDEge1xyXG5cdGZvbnQtc2l6ZTogMS41ZW07XHJcblx0cGFkZGluZy10b3A6IC41ZW07XHJcblx0Zm9udC1mYW1pbHk6ICRmb250LXRpdGxlcztcclxuXHJcblx0QG1lZGlhIChtaW4td2lkdGg6ICRicC1tZWRpdW0pIHtcclxuXHRcdGZvbnQtc2l6ZTogMS43NWVtO1xyXG5cdH1cclxufVxyXG5cclxuaDIsXHJcbi5oMiB7XHJcblx0Zm9udC1zaXplOiAxLjMxMjVlbTtcclxufVxyXG5cclxuaDMsXHJcbi5oMyB7XHJcblx0Zm9udC1zaXplOiAxLjE4NzVlbTtcclxufVxyXG5cclxuaDQsIGg1LCBoNixcclxuLmg0LCAuaDUsIC5oNiB7XHJcblx0Zm9udC1zaXplOiAxZW07XHJcbn1cclxuXHJcbmg0LFxyXG4uaDQge1xyXG5cdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogTGluZXMsIFF1b3RlcyBhbmQgRW1waGFzaXNcclxuICovXHJcblxyXG4vKipcclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cclxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXHJcbiAqL1xyXG5ociB7XHJcblx0Ym9yZGVyOiAwO1xyXG5cdGJvcmRlci10b3A6IDFweCBzb2xpZCAkY29sb3ItZ3JheS1saWdodDtcclxuXHRib3JkZXItYm90dG9tOiAwIHNvbGlkIHRyYW5zcGFyZW50O1xyXG5cdGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXHJcblx0bWFyZ2luOiAyZW0gYXV0bztcclxuXHRvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXHJcbiAqL1xyXG5iLFxyXG5zdHJvbmcge1xyXG5cdGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cclxuICovXHJcbmIsXHJcbnN0cm9uZyB7XHJcblx0Zm9udC13ZWlnaHQ6IGJvbGRlcjtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cclxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cclxuICovXHJcbmFiYnJbdGl0bGVdIHtcclxuXHRib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXHJcblx0dGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cclxuXHR0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cclxuICovXHJcbmRmbiB7XHJcblx0Zm9udC1zdHlsZTogaXRhbGljO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cclxuICovXHJcbm1hcmsge1xyXG5cdGJhY2tncm91bmQ6ICNmYmY5Yzk7XHJcblx0Y29sb3I6ICRjb2xvci1ibGFjaztcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuc21hbGwge1xyXG5cdGZvbnQtc2l6ZTogODAlO1xyXG59XHJcblxyXG4vKipcclxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuc3ViLFxyXG5zdXAge1xyXG5cdGZvbnQtc2l6ZTogNzUlO1xyXG5cdGxpbmUtaGVpZ2h0OiAwO1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbn1cclxuXHJcbnN1cCB7XHJcblx0dG9wOiAtMC41ZW07XHJcbn1cclxuXHJcbnN1YiB7XHJcblx0Ym90dG9tOiAtMC4yNWVtO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIEJsb2NrcXVvdGVzXHJcbiAqL1xyXG5cclxuYmxvY2txdW90ZSB7XHJcblx0Zm9udC1zaXplOiAxLjE4NzVlbTtcclxuXHRmb250LXN0eWxlOiBpdGFsaWM7XHJcblx0bWFyZ2luOiAwIDAgJHNwYWNpbmc7XHJcblx0cGFkZGluZy1sZWZ0OiAwLjg0MjEwNTI2MzJlbTtcclxuXHRwYWRkaW5nLXJpZ2h0OiAwLjg0MjEwNTI2MzJlbTtcclxuXHJcblx0Y2l0ZSB7XHJcblx0XHRjb2xvcjogJGNvbG9yLWdyYXktZGFyaztcclxuXHRcdGZvbnQtc2l6ZTogMC44NDIxMDUyNjMyZW07XHJcblx0XHRwYWRkaW5nLXRvcDogMWVtO1xyXG5cdH1cclxufVxyXG5cclxuYmxvY2txdW90ZSxcclxucSB7XHJcblx0cXVvdGVzOiBub25lO1xyXG59XHJcblxyXG5ibG9ja3F1b3RlOmJlZm9yZSxcclxuYmxvY2txdW90ZTphZnRlcixcclxucTpiZWZvcmUsXHJcbnE6YWZ0ZXIge1xyXG5cdGNvbnRlbnQ6ICcnO1xyXG59XHJcbiIsIi8qKlxyXG4gKiBAc2VjdGlvbiBDb2RlXHJcbiAqIFN0eWxpbmcgZm9yIGNvZGUgYW5kIHByZWZvcm1hdHRlZCB0ZXh0LlxyXG4gKi9cclxuXHJcbiBjb2RlLFxyXG4ga2JkLFxyXG4gcHJlLFxyXG4gc2FtcCB7XHJcblx0Zm9udC1mYW1pbHk6ICRmb250LWZvcm1hdGVkO1xyXG5cdGZvbnQtc2l6ZTogMC44NzVlbTtcclxufVxyXG5cclxuY29kZSB7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogbGlnaHRlbiggJGNvbG9yLWdyYXktbGlnaHQsIDclICk7XHJcblx0Y29sb3I6ICRjb2xvci1jb2RlO1xyXG5cdHBhZGRpbmc6IDAuMjVlbTtcclxuXHR3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbn1cclxuXHJcbnByZSB7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogbGlnaHRlbiggJGNvbG9yLWdyYXktbGlnaHQsIDYlICk7XHJcblx0ZGlzcGxheTogYmxvY2s7XHJcblx0bGluZS1oZWlnaHQ6IDEuNTtcclxuXHRtYXJnaW4tYm90dG9tOiAkc3BhY2luZztcclxuXHRvdmVyZmxvdzogYXV0bztcclxuXHRwYWRkaW5nOiAwLjgxMjVlbTtcclxuXHR0YWItc2l6ZTogNDtcclxuXHR3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XHJcblx0d29yZC1icmVhazogYnJlYWstYWxsO1xyXG5cclxuXHRjb2RlIHtcclxuXHRcdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG5cdFx0Ym9yZGVyOiAwO1xyXG5cdFx0Y29sb3I6IGluaGVyaXQ7XHJcblx0XHRmb250LXNpemU6IDFlbTtcclxuXHRcdHBhZGRpbmc6IDA7XHJcblx0fVxyXG59IiwiLyoqXHJcbiAqIEBzZWN0aW9uIEJ1dHRvbnNcclxuICogU3R5bGluZyBmb3IgQ1NTIGJ1dHRvbnMuXHJcbiAqL1xyXG5cclxuXHJcbi8qKlxyXG4gKiBQcmltYXJ5IGJ1dHRvbnNcclxuICovXHJcbi5idG4ge1xyXG5cdGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgcmdiYSgkbGlnaHQtYmx1ZSwgLjkpLCByZ2JhKCRkYXJrLWJsdWUsIC45KSk7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDIwMCU7XHJcblx0Ym9yZGVyOiAycHggd2hpdGUgc29saWQ7XHJcblx0Ym9yZGVyLXJhZGl1czogMnB4O1xyXG5cdGNvbG9yOiB3aGl0ZTtcclxuXHRmb250LXNpemU6IDFlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcblx0cGFkZGluZzogLjVlbSAxZW07XHJcblx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG5cdHdoaXRlLXNwYWNlOiBub3JtYWw7XHJcbiAgICB0cmFuc2l0aW9uOiAuNXM7XHJcblx0Y3Vyc29yOiBwb2ludGVyO1xyXG4gICAgYm94LXNoYWRvdzogMnB4IDJweCA4cHggcmdiYShibGFjaywgLjIpO1xyXG5cclxuXHQmOmhvdmVyLCAmOmFjdGl2ZXtcclxuXHRcdGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IGNlbnRlcjtcclxuXHRcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuXHRcdGNvbG9yOiB3aGl0ZTtcclxuXHR9XHJcblxyXG5cdCYtLWJpZ3tcclxuXHRcdHBhZGRpbmc6IC43ZW0gMS4yNWVtO1xyXG5cdFx0Zm9udC1zaXplOiAxLjI1ZW07XHJcblxyXG5cdH1cclxuXHJcblx0Ji0tdHJhbnNwYXJlbnR7XHJcblx0XHRiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHRyYW5zcGFyZW50IDUwJSwgcmdiYSgkbGlnaHQtYmx1ZSwgLjkpLCByZ2JhKCRkYXJrLWJsdWUsIC45KSk7XHJcblxyXG4gICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IGNlbnRlcjtcclxuICAgICAgICB9XHJcblx0fVxyXG5cclxuXHQmLS1ncmVlbntcclxuXHRcdGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgcmdiYSgkbGlnaHQtZ3JlZW4sIDEpIDUwJSwgcmdiYSgkbGlnaHQtZ3JlZW4sIC45KSwgcmdiYSgkZGFyay1ncmVlbiwgLjkpKTtcclxuXHJcblx0XHQmOmhvdmVye1xyXG5cdFx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiByaWdodCBjZW50ZXI7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQmLS1zbWFsbHtcclxuXHRcdHBhZGRpbmc6IC4yNWVtIC41ZW07XHJcblx0XHRmb250LXdlaWdodDogNTAwO1xyXG5cdH1cclxuXHJcblxyXG59XHJcbi8vXHJcbi8vXHJcbi8vLyoqXHJcbi8vICogU2Vjb25kYXJ5IGJ1dHRvbnNcclxuLy8gKi9cclxuLy8uYnRuLXNlY29uZGFyeSB7XHJcbi8vXHRiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItZ3JheS1kYXJrO1xyXG4vL1x0Ym9yZGVyLWNvbG9yOiAkY29sb3ItZ3JheS1kYXJrO1xyXG4vL1xyXG4vL1x0Jjpob3ZlcixcclxuLy9cdCY6YWN0aXZlLFxyXG4vL1x0Ji5hY3RpdmUge1xyXG4vL1x0XHRiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZW4oICRjb2xvci1ncmF5LWRhcmssIDE1JSApO1xyXG4vL1x0XHRib3JkZXItY29sb3I6IGRhcmtlbiggJGNvbG9yLWdyYXktZGFyaywgMTUlICk7XHJcbi8vXHR9XHJcbi8vfVxyXG4vL1xyXG4vL1xyXG4vL1xyXG4vLy8qKlxyXG4vLyAqIFNlY29uZGFyeSBidXR0b25zXHJcbi8vICovXHJcbi8vLmJ0bi10cmFuc3BhcmVudCB7XHJcbi8vXHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuLy9cdGJvcmRlci1jb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4vL1xyXG4vL1x0Jjpob3ZlcixcclxuLy9cdCY6YWN0aXZlLFxyXG4vL1x0Ji5hY3RpdmUge1xyXG4vL1x0XHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudGl6ZSggJGNvbG9yLXdoaXRlLCAuNSApO1xyXG4vL1x0XHRib3JkZXItY29sb3I6IGRhcmtlbiggJGNvbG9yLXdoaXRlLCAxNSUgKTtcclxuLy9cdFx0Y29sb3I6ICRjb2xvci1ibGFjaztcclxuLy9cdH1cclxuLy99XHJcbi8vXHJcbi8vXHJcbi8vLyoqXHJcbi8vICogQWN0aXZlIHN0YXRlXHJcbi8vICovXHJcbi8vLmJ0bjphY3RpdmUsXHJcbi8vLmJ0bi5hY3RpdmUge1xyXG4vL1x0Ym94LXNoYWRvdzogaW5zZXQgMCAwLjE1NjI1ZW0gMC4yNWVtIHJnYmEoMCwgMCwgMCwgMC4xNSksIDAgMXB4IDAuMTU2MjVlbSByZ2JhKDAsIDAsIDAsIDAuMDUpO1xyXG4vL1x0b3V0bGluZTogMDtcclxuLy99XHJcbi8vXHJcbi8vXHJcbi8vLyoqXHJcbi8vICogRGlzYWJsZWQgc3RhdGVcclxuLy8gKi9cclxuLy8uYnRuW2Rpc2FibGVkXSB7XHJcbi8vXHRib3gtc2hhZG93OiBub25lO1xyXG4vL1x0Y3Vyc29yOiBub3QtYWxsb3dlZDtcclxuLy9cdG9wYWNpdHk6IDAuNTtcclxuLy9cdHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4vL31cclxuLy9cclxuLy9cclxuLy8vKipcclxuLy8gKiBCdXR0b24gc2l6ZVxyXG4vLyAqL1xyXG4vLy5idG4tbGFyZ2Uge1xyXG4vL1x0Zm9udC1zaXplOiAxZW07XHJcbi8vXHRsaW5lLWhlaWdodDogbm9ybWFsO1xyXG4vL1x0cGFkZGluZzogMC42ODc1ZW0gMC45Mzc1ZW07XHJcbi8vfVxyXG4vL1xyXG4vL1xyXG4vLy8qKlxyXG4vLyAqIEJsb2NrLWxldmVsIGJ1dHRvbnNcclxuLy8gKi9cclxuLy8uYnRuLWJsb2NrLFxyXG4vL2lucHV0W3R5cGU9XCJzdWJtaXRcIl0uYnRuLWJsb2NrLFxyXG4vL2lucHV0W3R5cGU9XCJyZXNldFwiXS5idG4tYmxvY2ssXHJcbi8vaW5wdXRbdHlwZT1cImJ1dHRvblwiXS5idG4tYmxvY2sge1xyXG4vL1x0ZGlzcGxheTogYmxvY2s7XHJcbi8vXHRtYXJnaW4tcmlnaHQ6IDA7XHJcbi8vXHRwYWRkaW5nLXJpZ2h0OiAwO1xyXG4vL1x0cGFkZGluZy1sZWZ0OiAwO1xyXG4vL1x0d2lkdGg6IDEwMCU7XHJcbi8vfVxyXG4vL1xyXG4vL1xyXG4vLy8qKlxyXG4vLyAqIEdlbmVyYWwgc3R5bGVzXHJcbi8vICovXHJcbi8vLmJ0bixcclxuLy9idXR0b24sXHJcbi8vaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLFxyXG4vL2lucHV0W3R5cGU9XCJyZXNldFwiXSxcclxuLy9pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcclxuLy9cdGN1cnNvcjogcG9pbnRlcjtcclxuLy9cdHRleHQtYWxpZ246IGNlbnRlcjtcclxuLy9cdHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbi8vXHJcbi8vXHQvKipcclxuLy9cdCAqIEB3b3JrYXJvdW5kIE92ZXJyaWRlIGRlZmF1bHQgYnV0dG9uIHN0eWxpbmdcclxuLy9cdCAqIEBhZmZlY3RlZCBXZWJraXQvRmlyZWZveFxyXG4vL1x0ICovXHJcbi8vXHQvLyBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xyXG4vL1x0LXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG4vL31cclxuLy9cclxuLy9cclxuLy8vKipcclxuLy8gKiBSZW1vdmUgcmlnaHQgbWFyZ2luIG9uIGxhc3QgZWxlbWVudCBhbmQgaW5wdXRzXHJcbi8vICovXHJcbi8vLmJ0bjpsYXN0LWNoaWxkLFxyXG4vL2lucHV0LmJ0biB7XHJcbi8vXHRtYXJnaW4tcmlnaHQ6IDA7XHJcbi8vfSIsIi8qKlxyXG4gKiBAc2VjdGlvbiBGb3Jtc1xyXG4gKiBTdHlsaW5nIGZvciBmb3JtIGVsZW1lbnRzLlxyXG4gKi9cclxuXHJcbmZvcm0sXHJcbmZpZWxkc2V0IHtcclxuXHRtYXJnaW4tYm90dG9tOiAkc3BhY2luZztcclxufVxyXG5cclxuZmllbGRzZXQge1xyXG5cdGJvcmRlcjogMDtcclxuXHRwYWRkaW5nOiAwO1xyXG59XHJcblxyXG5sZWdlbmQsXHJcbmxhYmVsIHtcclxuXHRkaXNwbGF5OiBibG9jaztcclxuXHRmb250LXdlaWdodDogbm9ybWFsO1xyXG5cdG1hcmdpbjogMCAwIDAuMzEyNWVtO1xyXG5cdHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXHJcbiAqICAgIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxyXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxyXG4gKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cclxuICovXHJcbmJ1dHRvbixcclxuaW5wdXQsXHJcbm9wdGdyb3VwLFxyXG5zZWxlY3QsXHJcbnRleHRhcmVhIHtcclxuXHRjb2xvcjogbGlnaHRlbiggJGNvbG9yLWJsYWNrLCAxOCUgKTsgLyogMSAqL1xyXG5cdGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cclxuXHRtYXJnaW46IDA7IC8qIDMgKi9cclxuXHRwYWRkaW5nOiAwLjMxMjVlbTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxyXG4gKi9cclxuYnV0dG9uIHtcclxuXHRvdmVyZmxvdzogdmlzaWJsZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cclxuICogQWxsIG90aGVyIGZvcm0gY29udHJvbCBlbGVtZW50cyBkbyBub3QgaW5oZXJpdCBgdGV4dC10cmFuc2Zvcm1gIHZhbHVlcy5cclxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cclxuICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxyXG4gKi9cclxuYnV0dG9uLFxyXG5zZWxlY3Qge1xyXG5cdHRleHQtdHJhbnNmb3JtOiBub25lO1xyXG59XHJcblxyXG5pbnB1dCxcclxudGV4dGFyZWEsXHJcbnNlbGVjdCB7XHJcblx0ZGlzcGxheTogYmxvY2s7XHJcblx0bGluZS1oZWlnaHQ6IDEuNTtcclxuXHRtYXJnaW4tYm90dG9tOiAxLjE4NzVlbTtcclxuXHR3aWR0aDogMTAwJTtcclxuXHRwYWRkaW5nOiAuMjVlbSAuNWVtO1xyXG5cdGJhY2tncm91bmQ6IHdoaXRlO1xyXG5cdGJvcmRlcjogMnB4IHNvbGlkICRjb2xvci1ibHVlLWxpZ2h0O1xyXG5cclxuXHRAbWVkaWEgKG1pbi13aWR0aDogJGJwLW1lZGl1bSkge1xyXG5cdFx0bGluZS1oZWlnaHQ6IDEuNTYyNTtcclxuXHR9XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl17XHJcblx0d2lkdGg6IGF1dG87XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXHJcbiAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxyXG4gKi9cclxub3B0Z3JvdXAge1xyXG5cdGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG5mb3JtIGJ1dHRvbixcclxuZm9ybSAuYnV0dG9uIHtcclxuXHRtYXJnaW4tYm90dG9tOiAxLjE4NzVlbTtcclxufVxyXG5cclxudGV4dGFyZWEge1xyXG5cdGhlaWdodDogMTJlbTtcclxuXHRvdmVyZmxvdzogYXV0bztcclxufVxyXG5cclxuW3R5cGU9XCJpbWFnZVwiXSxcclxuW3R5cGU9XCJjaGVja2JveFwiXSxcclxuW3R5cGU9XCJyYWRpb1wiXSB7XHJcblx0Y3Vyc29yOiBwb2ludGVyO1xyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHRoZWlnaHQ6IGF1dG87XHJcblx0bWFyZ2luLWJvdHRvbTogMC4zMTI1ZW07XHJcblx0cGFkZGluZzogMDtcclxuXHR3aWR0aDogYXV0bztcclxufVxyXG5cclxuLyoqXHJcbiAqIEZpeCB0aGUgY3Vyc29yIHN0eWxlIGZvciBDaHJvbWUncyBpbmNyZW1lbnQvZGVjcmVtZW50IGJ1dHRvbnMuIEZvciBjZXJ0YWluXHJcbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXHJcbiAqIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cclxuICovXHJcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxyXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XHJcblx0aGVpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG5pbnB1dDpmb2N1cyxcclxuc2VsZWN0OmZvY3VzLFxyXG50ZXh0YXJlYTpmb2N1cyB7XHJcblx0Ym9yZGVyLWNvbG9yOiByZ2JhKDgyLCAxNjgsIDIzNiwgMC44KTtcclxuXHRib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA3NSksIDAgMCAwLjVlbSByZ2JhKDgyLCAxNjgsIDIzNiwgMC42KTtcclxuXHRvdXRsaW5lOiAwO1xyXG5cdG91dGxpbmU6IHRoaW4gZG90dGVkIFxcOTtcclxufVxyXG5cclxuW3R5cGU9XCJmaWxlXCJdOmZvY3VzLFxyXG5bdHlwZT1cImNoZWNrYm94XCJdOmZvY3VzLFxyXG5zZWxlY3Q6Zm9jdXMge1xyXG5cdG91dGxpbmU6IHRoaW4gZG90dGVkO1xyXG5cdG91dGxpbmU6IDAuMzEyNWVtIGF1dG8gLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yO1xyXG5cdG91dGxpbmUtb2Zmc2V0OiAtMC4xMjVlbTtcclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxyXG4gKi9cclxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxyXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcclxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcclxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xyXG5cdGJvcmRlci1zdHlsZTogbm9uZTtcclxuXHRwYWRkaW5nOiAwO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cclxuICovXHJcbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcclxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXHJcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXHJcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcclxuXHRvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cclxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxyXG4gKi9cclxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XHJcblx0LXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cclxuXHRmb250OiBpbmhlcml0OyAvKiAyICovXHJcbn1cclxuXHJcblxyXG4vKipcclxuICogSW5saW5lIGlucHV0c1xyXG4gKi9cclxuLmlucHV0LWlubGluZSB7XHJcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcblx0d2lkdGg6IGF1dG87XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogQ29uZGVuc2VkIGlucHV0c1xyXG4gKi9cclxuLmlucHV0LWNvbmRlbnNlZCB7XHJcblx0cGFkZGluZzogMXB4IDAuMzEyNWVtO1xyXG5cdGZvbnQtc2l6ZTogMC45Mzc1ZW07XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogU2VhcmNoXHJcbiAqL1xyXG5cclxuXHJcbiAvKipcclxuICAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxyXG4gICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXHJcbiAgKi9cclxuW3R5cGU9XCJzZWFyY2hcIl0ge1xyXG5cdC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXHJcblx0b3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxyXG4gKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXHJcbiAqIHBhZGRpbmcgKGFuZCBgdGV4dGZpZWxkYCBhcHBlYXJhbmNlKS5cclxuICovXHJcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxyXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XHJcblx0LXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIENyZWF0ZSByb3VuZGVkIHNlYXJjaCBiYXJcclxuICovXHJcbi5pbnB1dC1zZWFyY2gge1xyXG5cdHdpZHRoOiA4NSU7XHJcblx0cGFkZGluZy1sZWZ0OiAwLjkzNzVlbTtcclxuXHRwYWRkaW5nLXJpZ2h0OiAyLjVlbTtcclxuXHRib3JkZXItcmFkaXVzOiAxLjMxMjVlbTtcclxuXHR0cmFuc2l0aW9uOiB3aWR0aCAzMDBtcyBlYXNlLWluO1xyXG5cclxuXHRAbWVkaWEgKG1pbi13aWR0aDogJGJwLW1lZGl1bSkge1xyXG5cdFx0d2lkdGg6IDY1JTtcclxuXHR9XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogU3BlY2lhbCBzdHlsaW5nIGZvciBzZWFyY2ggaWNvbiBhcyBidXR0b25cclxuICovXHJcbi5idG4tc2VhcmNoIHtcclxuXHRkaXNwbGF5OiBpbmxpbmU7XHJcblx0Y29sb3I6ICRjb2xvci1ncmF5LWRhcms7XHJcblx0Ym9yZGVyOiBub25lO1xyXG5cdGJhY2tncm91bmQ6IG5vbmU7XHJcblx0bWFyZ2luLWxlZnQ6IC0yLjVlbTtcclxuXHRtYXJnaW4tYm90dG9tOiAwO1xyXG5cclxuXHQuaWNvbiB7XHJcblx0XHRmaWxsOiAkY29sb3ItZ3JheS1kYXJrO1xyXG5cdH1cclxuXHJcblx0Jjpob3ZlciB7XHJcblx0XHRjb2xvcjogZGFya2VuKCAkY29sb3ItZ3JheS1kYXJrLCAxNSUgKTtcclxuXHJcblx0XHQuaWNvbiB7XHJcblx0XHRcdGZpbGw6IGRhcmtlbiggJGNvbG9yLWdyYXktZGFyaywgMTUlICk7XHJcblx0XHR9XHJcblx0fVxyXG59IiwiLyoqXHJcbiAqIEBzZWN0aW9uIFRhYmxlc1xyXG4gKiBTdHlsaW5nIGZvciB0YWJsZXNcclxuICovXHJcblxyXG50YWJsZSB7XHJcblx0Ym9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuXHRib3JkZXItc3BhY2luZzogMDtcclxuXHRtYXJnaW4tYm90dG9tOiAkc3BhY2luZztcclxuXHRtYXgtd2lkdGg6IDEwMCU7XHJcblx0d2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbnRoLFxyXG50ZCB7XHJcblx0dGV4dC1hbGlnbjogbGVmdDtcclxuXHRwYWRkaW5nOiAwLjVlbTtcclxufVxyXG5cclxudGgge1xyXG5cdGJvcmRlci1ib3R0b206IDAuMTI1ZW0gc29saWQgJGNvbG9yLWdyYXktbGlnaHQ7XHJcblx0Zm9udC13ZWlnaHQ6IGJvbGQ7XHJcblx0dmVydGljYWwtYWxpZ246IGJvdHRvbTtcclxufVxyXG5cclxudGQge1xyXG5cdGJvcmRlci10b3A6IDFweCBzb2xpZCAkY29sb3ItZ3JheS1saWdodDtcclxuXHR2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkcyB6ZWJyYSBzdHJpcGluZ1xyXG4gKi9cclxuLnRhYmxlLXN0cmlwZWQgdGJvZHkgdHI6bnRoLWNoaWxkKG9kZCkge1xyXG5cdGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oICRjb2xvci1ncmF5LWxpZ2h0LCA3JSApO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIFJlZHVjZXMgcGFkZGluZyBvbiBjb25kZW5zZWQgdGFibGVzXHJcbiAqL1xyXG4udGFibGUtY29uZGVuc2VkIHRoLFxyXG4udGFibGUtY29uZGVuc2VkIHRkIHtcclxuXHRwYWRkaW5nOiAwLjI1ZW07XHJcbn0iLCIvKipcclxuICogQHNlY3Rpb24gT3ZlcnJpZGVzXHJcbiAqIE51ZGdlIGFuZCB0d2VhayBhbGlnbm1lbnQsIHNwYWNpbmcsIGFuZCB2aXNpYmlsaXR5LlxyXG4gKi9cclxuXHJcblxyXG4vKipcclxuICogVGV4dCBzaXplc1xyXG4gKi9cclxuXHJcbi50ZXh0LXNtYWxsIHtcclxuXHRmb250LXNpemU6IDAuOTM3NWVtO1xyXG59XHJcblxyXG4udGV4dC1sYXJnZSB7XHJcblx0Zm9udC1zaXplOiAxLjE4NzVlbTtcclxuXHRsaW5lLWhlaWdodDogMS40O1xyXG5cclxuXHRAbWVkaWEgKG1pbi13aWR0aDogJGJwLW1lZGl1bSkge1xyXG5cdFx0Zm9udC1zaXplOiAxLjMxMjVlbTtcclxuXHR9XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogVGV4dCBjb2xvcnNcclxuICovXHJcblxyXG4udGV4dC1tdXRlZCB7XHJcblx0Y29sb3I6ICRjb2xvci1ncmF5LWRhcms7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogVGV4dCBhbGlnbm1lbnRcclxuICovXHJcblxyXG4udGV4dC1jZW50ZXIge1xyXG5cdHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLnRleHQtcmlnaHQge1xyXG5cdHRleHQtYWxpZ246IHJpZ2h0O1xyXG59XHJcblxyXG4udGV4dC1sZWZ0IHtcclxuXHR0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLW1lZGl1bSkge1xyXG5cdC50ZXh0LXJpZ2h0LW1lZGl1bSB7XHJcblx0XHR0ZXh0LWFsaWduOiByaWdodDtcclxuXHR9XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogRmxvYXRzXHJcbiAqL1xyXG5cclxuLmZsb2F0LWxlZnQge1xyXG5cdGZsb2F0OiBsZWZ0O1xyXG59XHJcblxyXG4uZmxvYXQtY2VudGVyIHtcclxuXHRmbG9hdDogbm9uZTtcclxuXHRtYXJnaW4tbGVmdDogYXV0bztcclxuXHRtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbi5mbG9hdC1yaWdodCB7XHJcblx0ZmxvYXQ6IHJpZ2h0O1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIE1hcmdpbnNcclxuICovXHJcblxyXG4ubm8tbWFyZ2luLXRvcCB7XHJcblx0bWFyZ2luLXRvcDogMDtcclxufVxyXG5cclxuLm5vLW1hcmdpbi1ib3R0b20ge1xyXG5cdG1hcmdpbi1ib3R0b206IDA7XHJcbn1cclxuXHJcbi5tYXJnaW4tdG9wIHtcclxuXHRtYXJnaW4tdG9wOiAkc3BhY2luZztcclxufVxyXG5cclxuLm1hcmdpbi1ib3R0b20ge1xyXG5cdG1hcmdpbi1ib3R0b206ICRzcGFjaW5nO1xyXG59XHJcblxyXG4ubWFyZ2luLWJvdHRvbS1zbWFsbCB7XHJcblx0bWFyZ2luLWJvdHRvbTogMC41ZW07XHJcbn1cclxuXHJcbi5tYXJnaW4tYm90dG9tLWxhcmdlIHtcclxuXHRtYXJnaW4tYm90dG9tOiAyZW07XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogUGFkZGluZ1xyXG4gKi9cclxuXHJcbi5uby1wYWRkaW5nLXRvcCB7XHJcblx0cGFkZGluZy10b3A6IDA7XHJcbn1cclxuXHJcbi5uby1wYWRkaW5nLWJvdHRvbSB7XHJcblx0cGFkZGluZy1ib3R0b206IDA7XHJcbn1cclxuXHJcbi5wYWRkaW5nLXRvcCB7XHJcblx0cGFkZGluZy10b3A6ICRzcGFjaW5nO1xyXG59XHJcblxyXG4ucGFkZGluZy10b3Atc21hbGwge1xyXG5cdHBhZGRpbmctdG9wOiAwLjVlbTtcclxufVxyXG5cclxuLnBhZGRpbmctdG9wLWxhcmdlIHtcclxuXHRwYWRkaW5nLXRvcDogNGVtO1xyXG59XHJcblxyXG4ucGFkZGluZy1ib3R0b20ge1xyXG5cdHBhZGRpbmctYm90dG9tOiAkc3BhY2luZztcclxufVxyXG5cclxuLnBhZGRpbmctYm90dG9tLXNtYWxsIHtcclxuXHRwYWRkaW5nLWJvdHRvbTogMC41ZW07XHJcbn1cclxuXHJcbi5wYWRkaW5nLWJvdHRvbS1sYXJnZSB7XHJcblx0cGFkZGluZy1ib3R0b206IDJlbTtcclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiBWaXNpYmlsaXR5XHJcbiAqL1xyXG5cclxuLypcclxuICogSGlkZSBvbmx5IHZpc3VhbGx5LCBidXQgaGF2ZSBpdCBhdmFpbGFibGUgZm9yIHNjcmVlbiByZWFkZXJzOlxyXG4gKiBAbGluayBodHRwczovL3Nub29rLmNhL2FyY2hpdmVzL2h0bWxfYW5kX2Nzcy9oaWRpbmctY29udGVudC1mb3ItYWNjZXNzaWJpbGl0eVxyXG4gKlxyXG4gKiAxLiBGb3IgbG9uZyBjb250ZW50LCBsaW5lIGZlZWRzIGFyZSBub3QgaW50ZXJwcmV0ZWQgYXMgc3BhY2VzIGFuZCBzbWFsbCB3aWR0aFxyXG4gKiAgICBjYXVzZXMgY29udGVudCB0byB3cmFwIDEgd29yZCBwZXIgbGluZTpcclxuICogICAgaHR0cHM6Ly9tZWRpdW0uY29tL0BqZXNzZWJlYWNoL2Jld2FyZS1zbXVzaGVkLW9mZi1zY3JlZW4tYWNjZXNzaWJsZS10ZXh0LTU5NTJhNGMyY2JmZVxyXG4gKi9cclxuLnZpc3VhbGx5LWhpZGRlbiB7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBjbGlwOiByZWN0KDAgMCAwIDApO1xyXG4gICAgaGVpZ2h0OiAxcHg7XHJcbiAgICBtYXJnaW46IC0xcHg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7IC8qIDEgKi9cclxuICAgIHdpZHRoOiAxcHg7XHJcbn1cclxuXHJcbi5zb2Z0LWhpZGRlbntcclxuXHR2aXNpYmlsaXR5OiBoaWRkZW47XHJcbn1cclxuXHJcbi8qXHJcbiAqIEV4dGVuZHMgdGhlIC52aXN1YWxseWhpZGRlbiBjbGFzcyB0byBhbGxvdyB0aGUgZWxlbWVudCB0byBiZSBmb2N1c2FibGUgd2hlbiBuYXZpZ2F0ZWQgdG8gdmlhIHRoZSBrZXlib2FyZFxyXG4gKiBAbGluayBodHRwczovL3d3dy5kcnVwYWwub3JnL25vZGUvODk3NjM4XHJcbiAqL1xyXG4udmlzdWFsbHktaGlkZGVuLmZvY3VzYWJsZTphY3RpdmUsXHJcbi52aXN1YWxseS1oaWRkZW4uZm9jdXNhYmxlOmZvY3VzIHtcclxuICAgIGNsaXA6IGF1dG87XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcclxuICAgIHBvc2l0aW9uOiBzdGF0aWM7XHJcbiAgICB3aGl0ZS1zcGFjZTogaW5oZXJpdDtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG59XHJcblxyXG4vKipcclxuICogQHdvcmthcm91bmRcclxuICogQGFmZmVjdGVkIElFIDgvOS8xMFxyXG4gKiBAbGluayBodHRwOi8vanVpY3lzdHVkaW8uY29tL2FydGljbGUvc2NyZWVuLXJlYWRlcnMtZGlzcGxheS1ub25lLnBocFxyXG4gKi9cclxuW2hpZGRlbl0ge1xyXG5cdGRpc3BsYXk6IG5vbmU7XHJcblx0dmlzaWJpbGl0eTogaGlkZGVuO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIENvbnRhaW4gZmxvYXRzXHJcbiAqIFRoZSBzcGFjZSBjb250ZW50IGlzIG9uZSB3YXkgdG8gYXZvaWQgYW4gT3BlcmEgYnVnIHdoZW4gdGhlIGBjb250ZW50ZWRpdGFibGVgIGF0dHJpYnV0ZSBpcyBpbmNsdWRlZCBhbnl3aGVyZSBlbHNlIGluIHRoZSBkb2N1bWVudC5cclxuICogQGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL2g1YnAvaHRtbDUtYm9pbGVycGxhdGUvYmxvYi9tYXN0ZXIvZGlzdC9jc3MvbWFpbi5jc3NcclxuICovXHJcblxyXG4uY2xlYXJmaXg6YmVmb3JlLFxyXG4uY2xlYXJmaXg6YWZ0ZXIge1xyXG5cdGRpc3BsYXk6IHRhYmxlO1xyXG5cdGNvbnRlbnQ6IFwiIFwiO1xyXG59XHJcblxyXG4uY2xlYXJmaXg6YWZ0ZXIge1xyXG5cdGNsZWFyOiBib3RoO1xyXG59XHJcbiIsIi8qKlxyXG4gKiBAc2VjdGlvbiBQcmludFxyXG4gKiBTdHlsaW5nIGZvciBwcmludGVkIGNvbnRlbnQuIEFkYXB0ZWQgZnJvbSBIVE1MNUJQLlxyXG4gKiBAbGluayBodHRwOi8vaHRtbDVib2lsZXJwbGF0ZS5jb21cclxuICovXHJcblxyXG5AbWVkaWEgcHJpbnQge1xyXG5cclxuXHQvKipcclxuXHQgKiBVbml2ZXJzYWwgc2VsZWN0b3IuXHJcblx0ICogUmVzZXQgYWxsIGNvbnRlbnQgdG8gdHJhbnNwYXJlbnQgYmFja2dyb3VuZCwgYmxhY2sgY29sb3IsIGFuZCByZW1vdmUgYm94IGFuZCB0ZXh0IHNoYWRvd3MuXHJcblx0ICovXHJcblx0KiB7XHJcblx0XHRiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xyXG5cdFx0Y29sb3I6ICMwMDAgIWltcG9ydGFudDtcclxuXHRcdGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcclxuXHRcdHRleHQtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBTcGVjaWZpZXMgcGFnZSBtYXJnaW5cclxuXHQgKi9cclxuXHRAcGFnZSB7XHJcblx0XHRtYXJnaW46IDAuNWNtO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogVW5kZXJsaW5lIGFsbCBsaW5rc1xyXG5cdCAqL1xyXG5cdGEsXHJcblx0YTp2aXNpdGVkIHtcclxuXHRcdHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogU2hvdyBVUkwgYWZ0ZXIgbGlua3NcclxuXHQgKi9cclxuXHRhW2hyZWZdOmFmdGVyIHtcclxuXHRcdGNvbnRlbnQ6IFwiIChcIiBhdHRyKGhyZWYpIFwiKVwiO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogRG9uJ3Qgc2hvdyBVUkwgZm9yIGludGVybmFsIGxpbmtzXHJcblx0ICovXHJcblx0YVtocmVmXj1cIiNcIl06YWZ0ZXIge1xyXG5cdFx0Y29udGVudDogXCJcIjtcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIFNwZWNpZmllcyB0aGUgbWluaW11bSBudW1iZXIgb2YgbGluZXMgdG8gcHJpbnQgYXQgdGhlIHRvcCBhbmQgYm90dG9tIG9mIGEgcGFnZS5cclxuXHQgKi9cclxuXHRwLFxyXG5cdGgxLCBoMiwgaDMge1xyXG5cdFx0b3JwaGFuczogMztcclxuXHRcdHdpZG93czogMztcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIEF2b2lkIGluc2VydGluZyBhIHBhZ2UgYnJlYWsgYWZ0ZXIgaGVhZGVyc1xyXG5cdCAqL1xyXG5cdGgxLCBoMiwgaDMge1xyXG5cdFx0cGFnZS1icmVhay1hZnRlcjogYXZvaWQ7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBDaGFuZ2UgYm9yZGVyIGNvbG9yIG9uIGJsb2NrcXVvdGVzIGFuZCBwcmVmb3JtYXR0ZWQgdGV4dC5cclxuXHQgKiBBdm9pZCBwYWdlIGJyZWFrcyBpbnNpZGUgdGhlIGNvbnRlbnRcclxuXHQgKi9cclxuXHRwcmUsXHJcblx0YmxvY2txdW90ZSB7XHJcblx0XHRib3JkZXItY29sb3I6ICM5OTk7XHJcblx0XHRwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBEaXNwbGF5ZWQgYXMgYSB0YWJsZSBoZWFkZXIgcm93IGdyb3VwXHJcblx0ICovXHJcblx0dGhlYWQge1xyXG5cdFx0ZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogQXZvaWQgaW5zZXJ0aW5nIGEgcGFnZSBicmVhayBpbnNpZGUgdGFibGUgcm93cyBhbmQgaW1hZ2VzXHJcblx0ICovXHJcblx0dHIsXHJcblx0aW1nIHtcclxuXHRcdHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcclxuXHR9XHJcblxyXG59IiwiLyogb3JpeWEgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0JhbG9vIEJoYWluYSc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiQmFsb28gQmhhaW5hIFJlZ3VsYXJcIiksIGxvY2FsKFwiQmFsb29CaGFpbmEtUmVndWxhclwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9iYWxvb2JoYWluYS92NS9Ob2ExNlV6enpwMkZJa2ZocTV2bTl0aEJJZzU4cWhFLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswOTY0LTA5NjUsIFUrMEIwMS0wQjc3LCBVKzIwMEMtMjAwRCwgVSsyMEI5LCBVKzI1Q0M7XG59XG5cbi8qIHZpZXRuYW1lc2UgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0JhbG9vIEJoYWluYSc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiQmFsb28gQmhhaW5hIFJlZ3VsYXJcIiksIGxvY2FsKFwiQmFsb29CaGFpbmEtUmVndWxhclwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9iYWxvb2JoYWluYS92NS9Ob2ExNlV6enpwMkZJa2ZocTV2bTl0aEJOQTU4cWhFLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswMTAyLTAxMDMsIFUrMDExMC0wMTExLCBVKzFFQTAtMUVGOSwgVSsyMEFCO1xufVxuXG4vKiBsYXRpbi1leHQgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0JhbG9vIEJoYWluYSc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiQmFsb28gQmhhaW5hIFJlZ3VsYXJcIiksIGxvY2FsKFwiQmFsb29CaGFpbmEtUmVndWxhclwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9iYWxvb2JoYWluYS92NS9Ob2ExNlV6enpwMkZJa2ZocTV2bTl0aEJOUTU4cWhFLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswMTAwLTAyNEYsIFUrMDI1OSwgVSsxRTAwLTFFRkYsIFUrMjAyMCwgVSsyMEEwLTIwQUIsIFUrMjBBRC0yMENGLCBVKzIxMTMsIFUrMkM2MC0yQzdGLCBVK0E3MjAtQTdGRjtcbn1cblxuLyogbGF0aW4gKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0JhbG9vIEJoYWluYSc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiQmFsb28gQmhhaW5hIFJlZ3VsYXJcIiksIGxvY2FsKFwiQmFsb29CaGFpbmEtUmVndWxhclwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9iYWxvb2JoYWluYS92NS9Ob2ExNlV6enpwMkZJa2ZocTV2bTl0aEJPdzU4LndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswMDAwLTAwRkYsIFUrMDEzMSwgVSswMTUyLTAxNTMsIFUrMDJCQi0wMkJDLCBVKzAyQzYsIFUrMDJEQSwgVSswMkRDLCBVKzIwMDAtMjA2RiwgVSsyMDc0LCBVKzIwQUMsIFUrMjEyMiwgVSsyMTkxLCBVKzIxOTMsIFUrMjIxMiwgVSsyMjE1LCBVK0ZFRkYsIFUrRkZGRDtcbn1cblxuLyogY3lyaWxsaWMtZXh0ICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIk9wZW4gU2FucyBSZWd1bGFyXCIpLCBsb2NhbChcIk9wZW5TYW5zLVJlZ3VsYXJcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbThZYUdzMTI2TWlacEJBLVVGV0owYmJjay53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDQ2MC0wNTJGLCBVKzFDODAtMUM4OCwgVSsyMEI0LCBVKzJERTAtMkRGRiwgVStBNjQwLUE2OUYsIFUrRkUyRS1GRTJGO1xufVxuXG4vKiBjeXJpbGxpYyAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgUmVndWxhclwiKSwgbG9jYWwoXCJPcGVuU2Fucy1SZWd1bGFyXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW04WWFHczEyNk1pWnBCQS1VRlVaMGJiY2sud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzA0MDAtMDQ1RiwgVSswNDkwLTA0OTEsIFUrMDRCMC0wNEIxLCBVKzIxMTY7XG59XG5cbi8qIGdyZWVrLWV4dCAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgUmVndWxhclwiKSwgbG9jYWwoXCJPcGVuU2Fucy1SZWd1bGFyXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW04WWFHczEyNk1pWnBCQS1VRldaMGJiY2sud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzFGMDAtMUZGRjtcbn1cblxuLyogZ3JlZWsgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiT3BlbiBTYW5zIFJlZ3VsYXJcIiksIGxvY2FsKFwiT3BlblNhbnMtUmVndWxhclwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtOFlhR3MxMjZNaVpwQkEtVUZWcDBiYmNrLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswMzcwLTAzRkY7XG59XG5cbi8qIHZpZXRuYW1lc2UgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiT3BlbiBTYW5zIFJlZ3VsYXJcIiksIGxvY2FsKFwiT3BlblNhbnMtUmVndWxhclwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtOFlhR3MxMjZNaVpwQkEtVUZXcDBiYmNrLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswMTAyLTAxMDMsIFUrMDExMC0wMTExLCBVKzFFQTAtMUVGOSwgVSsyMEFCO1xufVxuXG4vKiBsYXRpbi1leHQgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiT3BlbiBTYW5zIFJlZ3VsYXJcIiksIGxvY2FsKFwiT3BlblNhbnMtUmVndWxhclwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtOFlhR3MxMjZNaVpwQkEtVUZXNTBiYmNrLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswMTAwLTAyNEYsIFUrMDI1OSwgVSsxRTAwLTFFRkYsIFUrMjAyMCwgVSsyMEEwLTIwQUIsIFUrMjBBRC0yMENGLCBVKzIxMTMsIFUrMkM2MC0yQzdGLCBVK0E3MjAtQTdGRjtcbn1cblxuLyogbGF0aW4gKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiT3BlbiBTYW5zIFJlZ3VsYXJcIiksIGxvY2FsKFwiT3BlblNhbnMtUmVndWxhclwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtOFlhR3MxMjZNaVpwQkEtVUZWWjBiLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswMDAwLTAwRkYsIFUrMDEzMSwgVSswMTUyLTAxNTMsIFUrMDJCQi0wMkJDLCBVKzAyQzYsIFUrMDJEQSwgVSswMkRDLCBVKzIwMDAtMjA2RiwgVSsyMDc0LCBVKzIwQUMsIFUrMjEyMiwgVSsyMTkxLCBVKzIxOTMsIFUrMjIxMiwgVSsyMjE1LCBVK0ZFRkYsIFUrRkZGRDtcbn1cblxuLyogY3lyaWxsaWMtZXh0ICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIk9wZW4gU2FucyBCb2xkXCIpLCBsb2NhbChcIk9wZW5TYW5zLUJvbGRcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbTVZYUdzMTI2TWlacEJBLVVON3JnT1gtaHBPcWMud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzA0NjAtMDUyRiwgVSsxQzgwLTFDODgsIFUrMjBCNCwgVSsyREUwLTJERkYsIFUrQTY0MC1BNjlGLCBVK0ZFMkUtRkUyRjtcbn1cblxuLyogY3lyaWxsaWMgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiT3BlbiBTYW5zIEJvbGRcIiksIGxvY2FsKFwiT3BlblNhbnMtQm9sZFwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtNVlhR3MxMjZNaVpwQkEtVU43cmdPVnVocE9xYy53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDQwMC0wNDVGLCBVKzA0OTAtMDQ5MSwgVSswNEIwLTA0QjEsIFUrMjExNjtcbn1cblxuLyogZ3JlZWstZXh0ICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIk9wZW4gU2FucyBCb2xkXCIpLCBsb2NhbChcIk9wZW5TYW5zLUJvbGRcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbTVZYUdzMTI2TWlacEJBLVVON3JnT1h1aHBPcWMud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzFGMDAtMUZGRjtcbn1cblxuLyogZ3JlZWsgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiT3BlbiBTYW5zIEJvbGRcIiksIGxvY2FsKFwiT3BlblNhbnMtQm9sZFwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtNVlhR3MxMjZNaVpwQkEtVU43cmdPVWVocE9xYy53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDM3MC0wM0ZGO1xufVxuXG4vKiB2aWV0bmFtZXNlICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiBsb2NhbChcIk9wZW4gU2FucyBCb2xkXCIpLCBsb2NhbChcIk9wZW5TYW5zLUJvbGRcIiksIHVybChodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvb3BlbnNhbnMvdjE3L21lbTVZYUdzMTI2TWlacEJBLVVON3JnT1hlaHBPcWMud29mZjIpIGZvcm1hdChcIndvZmYyXCIpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAxMDItMDEwMywgVSswMTEwLTAxMTEsIFUrMUVBMC0xRUY5LCBVKzIwQUI7XG59XG5cbi8qIGxhdGluLWV4dCAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogbG9jYWwoXCJPcGVuIFNhbnMgQm9sZFwiKSwgbG9jYWwoXCJPcGVuU2Fucy1Cb2xkXCIpLCB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3YxNy9tZW01WWFHczEyNk1pWnBCQS1VTjdyZ09YT2hwT3FjLndvZmYyKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgdW5pY29kZS1yYW5nZTogVSswMTAwLTAyNEYsIFUrMDI1OSwgVSsxRTAwLTFFRkYsIFUrMjAyMCwgVSsyMEEwLTIwQUIsIFUrMjBBRC0yMENGLCBVKzIxMTMsIFUrMkM2MC0yQzdGLCBVK0E3MjAtQTdGRjtcbn1cblxuLyogbGF0aW4gKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IGxvY2FsKFwiT3BlbiBTYW5zIEJvbGRcIiksIGxvY2FsKFwiT3BlblNhbnMtQm9sZFwiKSwgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92MTcvbWVtNVlhR3MxMjZNaVpwQkEtVU43cmdPVXVocC53b2ZmMikgZm9ybWF0KFwid29mZjJcIik7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDAwMC0wMEZGLCBVKzAxMzEsIFUrMDE1Mi0wMTUzLCBVKzAyQkItMDJCQywgVSswMkM2LCBVKzAyREEsIFUrMDJEQywgVSsyMDAwLTIwNkYsIFUrMjA3NCwgVSsyMEFDLCBVKzIxMjIsIFUrMjE5MSwgVSsyMTkzLCBVKzIyMTIsIFUrMjIxNSwgVStGRUZGLCBVK0ZGRkQ7XG59XG5cbio6OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNTMsIDIwNywgMjEyLCAwLjMpO1xufVxuXG5ib2R5IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG5zdmcuZmlsdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAtMTtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4uaWNvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB0cmFuc2l0aW9uOiBhbGwgLjNzIGVhc2UtaW4tb3V0O1xufVxuXG4uaGVhcnQgI2hlYXJ0X2JvcmRlciB7XG4gIGZpbGw6IHdoaXRlO1xufVxuXG4uaGVhcnQgI2hlYXJ0X2luc2lkZSB7XG4gIGZpbGw6IHRyYW5zcGFyZW50O1xufVxuXG4uaGVhcnQtLWZpbGwtZ3JlZW4gI2hlYXJ0X2luc2lkZSB7XG4gIGZpbGw6ICMwMDRkMDA7XG59XG5cbi5oZWFydC0tZmlsbC13aGl0ZSAjaGVhcnRfaW5zaWRlIHtcbiAgZmlsbDogd2hpdGU7XG59XG5cbi5oZWFydC0taW52ZXJzZSAjaGVhcnRfYm9yZGVyIHtcbiAgZmlsbDogIzYyYWIwMztcbn1cblxuLmhlYXJ0LS1pbnZlcnNlLmhlYXJ0LS1maWxsLXdoaXRlICNoZWFydF9pbnNpZGUge1xuICBmaWxsOiAjNjJhYjAzO1xufVxuXG4uYXJyb3cge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5hcnJvdy0tcm90YXRlIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbn1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcblRpdGxlOiBSYWRpbyBTd2l0Y2hcclxuRGVzY3I6IEN1c3RvbSByYWRpbyB0b2dnbGVcclxuXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG46cm9vdCB7XG4gIC0tcmFkaW8tc3dpdGNoLXdpZHRoOiAxODZweDtcbiAgLS1yYWRpby1zd2l0Y2gtaGVpZ2h0OiA0NnB4O1xuICAtLXJhZGlvLXN3aXRjaC1wYWRkaW5nOiAzcHg7XG4gIC0tcmFkaW8tc3dpdGNoLXJhZGl1czogNTBlbTtcbiAgLS1yYWRpby1zd2l0Y2gtYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjNzO1xufVxuXG4ucmFkaW8tc3dpdGNoIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBwYWRkaW5nOiB2YXIoLS1yYWRpby1zd2l0Y2gtcGFkZGluZyk7XG4gIGJvcmRlci1yYWRpdXM6IGNhbGModmFyKC0tcmFkaW8tc3dpdGNoLXJhZGl1cykgKiAxLjQpO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZTVlNWU1O1xufVxuXG4ucmFkaW8tc3dpdGNoOmZvY3VzLXdpdGhpbiwgLnJhZGlvLXN3aXRjaDphY3RpdmUge1xuICBib3gtc2hhZG93OiAwIDAgMCAxcHggI2U1ZTVlNTtcbn1cblxuLnJhZGlvLXN3aXRjaF9faXRlbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IGNhbGModmFyKC0tcmFkaW8tc3dpdGNoLWhlaWdodCkgLSAyKnZhcigtLXJhZGlvLXN3aXRjaC1wYWRkaW5nKSk7XG4gIHdpZHRoOiBjYWxjKHZhcigtLXJhZGlvLXN3aXRjaC13aWR0aCkqMC41IC0gIHZhcigtLXJhZGlvLXN3aXRjaC1wYWRkaW5nKSk7XG59XG5cbi5yYWRpby1zd2l0Y2hfX2xhYmVsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgYm9yZGVyLXJhZGl1czogdmFyKC0tcmFkaW8tc3dpdGNoLXJhZGl1cyk7XG4gIGxpbmUtaGVpZ2h0OiBjYWxjKHZhcigtLXJhZGlvLXN3aXRjaC1oZWlnaHQpIC0gMip2YXIoLS1yYWRpby1zd2l0Y2gtcGFkZGluZykpO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZm9udC1zaXplOiB2YXIoLS10ZXh0LXNtKTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIHRyYW5zaXRpb246IGFsbCB2YXIoLS1yYWRpby1zd2l0Y2gtYW5pbWF0aW9uLWR1cmF0aW9uKTtcbn1cblxuLnJhZGlvLXN3aXRjaF9faW5wdXQ6Y2hlY2tlZCB+IC5yYWRpby1zd2l0Y2hfX2xhYmVsIHtcbiAgY29sb3I6ICNmZmZmZmY7XG59XG5cbi5yYWRpby1zd2l0Y2hfX2lucHV0OmZvY3VzIH4gLnJhZGlvLXN3aXRjaF9fbGFiZWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTRhM2U5O1xufVxuXG4ucmFkaW8tc3dpdGNoX19sYWJlbCA6bm90KCopOmZvY3VzLXdpdGhpbixcbi5yYWRpby1zd2l0Y2hfX2lucHV0OmZvY3VzIH4gLnJhZGlvLXN3aXRjaF9fbGFiZWwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLnJhZGlvLXN3aXRjaF9fbWFya2VyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAxO1xuICB0b3A6IDA7XG4gIGxlZnQ6IC0xMDAlO1xuICBib3JkZXItcmFkaXVzOiB2YXIoLS1yYWRpby1zd2l0Y2gtcmFkaXVzKTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAjMzVjZmQ0LCAjMTRhMWU2KTtcbiAgaGVpZ2h0OiBjYWxjKHZhcigtLXJhZGlvLXN3aXRjaC1oZWlnaHQpIC0gMip2YXIoLS1yYWRpby1zd2l0Y2gtcGFkZGluZykpO1xuICB3aWR0aDogY2FsYyh2YXIoLS1yYWRpby1zd2l0Y2gtd2lkdGgpKjAuNSAtICB2YXIoLS1yYWRpby1zd2l0Y2gtcGFkZGluZykpO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gdmFyKC0tcmFkaW8tc3dpdGNoLWFuaW1hdGlvbi1kdXJhdGlvbik7XG59XG5cbi5yYWRpby1zd2l0Y2hfX2lucHV0OmNoZWNrZWQgfiAucmFkaW8tc3dpdGNoX19tYXJrZXIge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7XG59XG5cbi5jb29raWUge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgYm90dG9tOiAxZW07XG4gIGxlZnQ6IDJlbTtcbiAgd2lkdGg6IDgwJTtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgYm94LXNoYWRvdzogMnB4IDJweCA4cHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuICB6LWluZGV4OiA0O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5jb29raWUge1xuICAgIGJvdHRvbTogMmVtO1xuICAgIHdpZHRoOiAzMCU7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBjb2xsYXBzZSB7XG4gIDAlIHtcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICB3aWR0aDogODAlO1xuICAgIGhlaWdodDogYXV0bztcbiAgICB6LWluZGV4OiA0O1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgei1pbmRleDogNDtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgY29sbGFwc2VMYXJnZSB7XG4gIDAlIHtcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICB3aWR0aDogMzAlO1xuICAgIGhlaWdodDogYXV0bztcbiAgICB6LWluZGV4OiA0O1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgd2lkdGg6IDMwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgei1pbmRleDogNDtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG59XG5cbi5jb29raWUtLW5vLXZpc2libGUge1xuICBhbmltYXRpb246IGNvbGxhcHNlIC4zcyBlYXNlLWluLW91dCAxO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aWR0aDogMDtcbiAgaGVpZ2h0OiAwO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5jb29raWUtLW5vLXZpc2libGUge1xuICAgIGFuaW1hdGlvbjogY29sbGFwc2VMYXJnZSAuM3MgZWFzZS1pbi1vdXQgMTtcbiAgfVxufVxuXG4uY29va2llX19pbWcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogLTJlbTtcbiAgbGVmdDogLTJlbTtcbiAgbWFyZ2luOiBhdXRvO1xuICB3aWR0aDogNGVtO1xuICBoZWlnaHQ6IDRlbTtcbn1cblxuLmNvb2tpZV9fbWVzc2FnZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDFlbSAyZW0gLjVlbTtcbn1cblxuLmNvb2tpZV9fbWVzc2FnZSBoMSwgLmNvb2tpZV9fbWVzc2FnZSBwIHtcbiAgbWFyZ2luLWJvdHRvbTogLjI1ZW07XG59XG5cbi5jb29raWVfX2J0biB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiAuNWVtO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLmNvb2tpZS1vdmVybGF5IHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiAzO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43NSk7XG59XG5cbkBrZXlmcmFtZXMgaGlkZGVuIHtcbiAgMCUge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNzUpO1xuICAgIHotaW5kZXg6IDM7XG4gIH1cbiAgMTAwJSB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG4gICAgei1pbmRleDogMztcbiAgfVxufVxuXG4uY29va2llLW92ZXJsYXktLW5vLXZpc2libGUge1xuICBhbmltYXRpb246IGhpZGRlbiAuM3MgZWFzZS1pbi1vdXQgMTtcbiAgei1pbmRleDogLTE7XG4gIHdpZHRoOiAwO1xuICBoZWlnaHQ6IDA7XG59XG5cbi5ibHVyLXVwIHtcbiAgZmlsdGVyOiBibHVyKDhweCk7XG4gIHRyYW5zaXRpb246IGZpbHRlciA2MDBtcztcbn1cblxuLmJsdXItdXAubGF6eWxvYWRpbmcge1xuICBmaWx0ZXI6IGJsdXIoNXB4KTtcbn1cblxuLmJsdXItdXAubGF6eWxvYWRlZCB7XG4gIGZpbHRlcjogYmx1cigwKTtcbn1cblxuLmZvcm0ge1xuICB3aWR0aDogOTUlO1xuICBtYXJnaW46IGF1dG87XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmZvcm0ge1xuICAgIHdpZHRoOiA4MCU7XG4gIH1cbn1cblxuLmZvcm1fX2l0ZW0ge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLmZvcm1fX2l0ZW1fX2xhYmVsIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMCAxZW07XG4gIHBhZGRpbmc6IC41ZW0gMDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmZvcm1fX2l0ZW1fX2xhYmVsIHtcbiAgICB3aWR0aDogMzAlO1xuICAgIG1hcmdpbjogMCAyZW07XG4gICAganVzdGlmeS1jb250ZW50OiBsZWZ0O1xuICB9XG59XG5cbi5mb3JtX19pdGVtX19pbnB1dCB7XG4gIHdpZHRoOiA5MCU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmZvcm1fX2l0ZW1fX2lucHV0IHtcbiAgICB3aWR0aDogNDAlO1xuICB9XG59XG5cbi5oZWFkZXIge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHdpZHRoOiA5OCU7XG4gIG1hcmdpbjogMCAxJTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB6LWluZGV4OiAzO1xuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAzcHg7XG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAzcHg7XG59XG5cbi5oZWFkZXJfX2xvZ28ge1xuICBtYXJnaW46IC4yNWVtIDFlbTtcbiAgei1pbmRleDogMztcbn1cblxuLmhlYWRlcl9fbG9nbyBpbWcge1xuICBoZWlnaHQ6IDNlbTtcbiAgd2lkdGg6IGF1dG87XG59XG5cbi5oZWFkZXJfX25hdiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgcmdiYSgyMCwgMTYxLCAyMzAsIDAuOCksICMxNGExZTYsICMyM2I2ZGUpO1xuICB6LWluZGV4OiAyO1xuICBib3JkZXItcmFkaXVzOiAwIDAgMnB4IDJweDtcbiAgY29sb3I6IHdoaXRlO1xuICB0b3A6IDMuNWVtO1xuICB0cmFuc2Zvcm06IHJvdGF0ZVgoLTEwMGRlZyk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IHRvcDtcbiAgb3BhY2l0eTogMDtcbn1cblxuLmhlYWRlcl9fbmF2X19tZW51IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwIDIuNSU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmhlYWRlcl9fbmF2X19tZW51IHtcbiAgICBwYWRkaW5nOiAwIDUlO1xuICB9XG59XG5cbi5oZWFkZXJfX25hdl9fbWVudV9fY29sdW1uIHtcbiAgd2lkdGg6IDUwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmhlYWRlcl9fbmF2X19tZW51X19jb2x1bW4ge1xuICAgIHdpZHRoOiAyNCU7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgfVxuICAuaGVhZGVyX19uYXZfX21lbnVfX2NvbHVtbjo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBoZWlnaHQ6IDUwJTtcbiAgICB3aWR0aDogMXB4O1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMjUlO1xuICB9XG4gIC5oZWFkZXJfX25hdl9fbWVudV9fY29sdW1uOmxhc3QtY2hpbGQ6OmFmdGVyIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5oZWFkZXJfX25hdl9fbWVudV9fY29sdW1uOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi10b3A6IDJlbTtcbiAgfVxufVxuXG4uaGVhZGVyX19uYXZfX21lbnVfX2NvbHVtbjpudGgtY2hpbGQoMSkge1xuICBvcmRlcjogMTtcbn1cblxuLmhlYWRlcl9fbmF2X19tZW51X19jb2x1bW46bnRoLWNoaWxkKDIpIHtcbiAgb3JkZXI6IDI7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmhlYWRlcl9fbmF2X19tZW51X19jb2x1bW46bnRoLWNoaWxkKDIpIHtcbiAgICBvcmRlcjogMztcbiAgfVxufVxuXG4uaGVhZGVyX19uYXZfX21lbnVfX2NvbHVtbjpudGgtY2hpbGQoMykge1xuICBvcmRlcjogMztcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuaGVhZGVyX19uYXZfX21lbnVfX2NvbHVtbjpudGgtY2hpbGQoMykge1xuICAgIG9yZGVyOiAyO1xuICB9XG59XG5cbi5oZWFkZXJfX25hdl9fbWVudV9fY29sdW1uOm50aC1jaGlsZCg0KSB7XG4gIG9yZGVyOiA0O1xufVxuXG4uaGVhZGVyX19uYXZfX21lbnVfX2NvbHVtbl9fdGl0bGUgYSB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgbWFyZ2luOiAwO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5oZWFkZXJfX25hdl9fbWVudV9fY29sdW1uX190aXRsZSBhIHtcbiAgICBtYXJnaW46IDAgMCAxZW07XG4gIH1cbn1cblxuLmhlYWRlcl9fbmF2X19tZW51X19jb2x1bW5fX2xpc3Qge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDAgMCAwIDFlbTtcbn1cblxuLmhlYWRlcl9fbmF2X19tZW51X19jb2x1bW5fX2xpc3RfX2xpbmsge1xuICBtYXJnaW46IC41ZW0gYXV0bztcbn1cblxuLmhlYWRlcl9fbmF2X19tZW51X19jb2x1bW5fX2xpc3RfX2xpbmsgYSB7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmhlYWRlcl9fbmF2X19tZW51X19jb2x1bW5fX2xpc3RfX2xpbmsgc3BhbiB7XG4gIHBhZGRpbmc6IDNweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBtYXJnaW4tbGVmdDogLjhlbTtcbiAgZm9udC1zaXplOiA4MCU7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgjZjljOTBkLCAjZjk2ZTEwKTtcbn1cblxuLmhlYWRlcl9fbWVudS1pY29uIC5tZW51LWljb24td3JhcHBlciB7XG4gIG1hcmdpbjogMWVtIDJlbTtcbn1cblxuLmhlYWRyb29tIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgIzM1Y2ZkNCwgIzE0YTFlNik7XG4gIGJhY2tncm91bmQtc2l6ZTogMTAwJSAyMDAlO1xuICB0cmFuc2l0aW9uOiBhbGwgLjNzIGVhc2UtaW4tb3V0O1xuICB0cmFuc2l0aW9uLWRlbGF5OiAuM3M7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDEwMCUgMjAwJTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cblxuLmhlYWRyb29tLS1waW5uZWQgLmhlYWRyb29tLS10b3Age1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDEwMCUgMjAwJTtcbn1cblxuLmhlYWRyb29tLS1waW5uZWQge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwJSk7XG59XG5cbi5oZWFkcm9vbS0tdW5waW5uZWQge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTAwJSk7XG59XG5cbi5oZWFkZXItLXBpbm5lZCwgLmhlYWRyb29tLS1ub3QtdG9wLmhlYWRyb29tLS1waW5uZWQge1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIDA7XG59XG5cbi8qIE1lbnUgaWNvbiBzdHlsZXMgKi9cbi5tZW51LWljb24td3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMzRweDtcbiAgaGVpZ2h0OiAzNHB4O1xuICBtYXJnaW46IDJlbTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHRyYW5zaXRpb246IDAuMXM7XG59XG5cbi5tZW51LWljb24td3JhcHBlciBzdmcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogLTMzcHg7XG4gIGxlZnQ6IC0zM3B4O1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMC4xKTtcbiAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMC4xKTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgwLjEpO1xuICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IDAgMDtcbiAgLW1zLXRyYW5zZm9ybS1vcmlnaW46IDAgMDtcbiAgdHJhbnNmb3JtLW9yaWdpbjogMCAwO1xufVxuXG4ubWVudS1pY29uLXdyYXBwZXIgc3ZnIHBhdGgge1xuICBzdHJva2U6ICNmZmY7XG4gIHN0cm9rZS13aWR0aDogMzBweDtcbiAgc3Ryb2tlLWxpbmVjYXA6IHJvdW5kO1xuICBzdHJva2UtbGluZWpvaW46IHJvdW5kO1xuICBmaWxsOiB0cmFuc3BhcmVudDtcbn1cblxuLm1lbnUtaWNvbi13cmFwcGVyIC5tZW51LWljb24tdHJpZ2dlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBwb2ludGVyLWV2ZW50czogYXV0bztcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi5tZW51LWljb24td3JhcHBlciAubWVudS1pY29uLXRyaWdnZXI6aG92ZXIsXG4ubWVudS1pY29uLXdyYXBwZXIgLm1lbnUtaWNvbi10cmlnZ2VyOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuLm1lbnUtaWNvbi13cmFwcGVyIHtcbiAgcmlnaHQ6IDA7XG4gIHRvcDogMDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiAxMDA7XG59XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogR2VuZXJhdGVkIGJ5IEFuaW1pc3RhIG9uIDIwMTktNi02IDE2OjQzOjQwXHJcbiAqIHc6IGh0dHA6Ly9hbmltaXN0YS5uZXQsIHQ6IEBjc3NhbmltaXN0YVxyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKipcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiBhbmltYXRpb24gc3dpbmctaW4tdG9wLWJja1xyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqL1xuQGtleWZyYW1lcyBzd2luZy1pbi10b3AtYmNrIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlWCg3MGRlZyk7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGVYKDBkZWcpO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IHRvcDtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgc3dpbmctb3V0LXRvcC1iY2sge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGVYKDBkZWcpO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IHRvcDtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlWCgtOTBkZWcpO1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IHRvcDtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG59XG5cbi5zd2luZy1pbi10b3AtYmNrIHtcbiAgYW5pbWF0aW9uOiBzd2luZy1pbi10b3AtYmNrIDAuNHMgY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMiwgMS4yNzUpIGJvdGg7XG4gIGFuaW1hdGlvbi1kZWxheTogLjZzO1xufVxuXG4uc3dpbmctb3V0LXRvcC1iY2sge1xuICBhbmltYXRpb246IHN3aW5nLW91dC10b3AtYmNrIDAuMjVzIGN1YmljLWJlemllcigwLjYsIC0wLjI4LCAwLjczNSwgMC4wNDUpIGJvdGg7XG59XG5cbi5oZXJvIHtcbiAgaGVpZ2h0OiA3NXZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5oZXJvX19pbWFnZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xufVxuXG4uaGVyb19faW1hZ2UgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmhlcm9fX2NvbnRlbnQge1xuICB3aWR0aDogOTAlO1xuICBtYXJnaW46IDJlbTtcbiAgei1pbmRleDogMTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBjb2xvcjogI2ZmZmZmZjtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuaGVyb19fY29udGVudCB7XG4gICAgd2lkdGg6IDUwJTtcbiAgfVxufVxuXG4uaGVyb19fY29udGVudF9fdGV4dCB7XG4gIHRleHQtc2hhZG93OiAycHggMnB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjQpO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5oZXJvX19jb250ZW50X190ZXh0IHtcbiAgICBmb250LXNpemU6IDNlbTtcbiAgfVxufVxuXG4uYmFubmVyIHtcbiAgaGVpZ2h0OiA3NXZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmJhbm5lcl9faW1hZ2Uge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5iYW5uZXJfX2NvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5iYW5uZXJfX2NvbnRlbnRfX3RpdGxlIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgd2lkdGg6IDEwMCU7XG4gIHRleHQtc2hhZG93OiAycHggMnB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcbn1cblxuLmJhbm5lcl9fY29udGVudF9fdGl0bGUgaDIsIC5iYW5uZXJfX2NvbnRlbnRfX3RpdGxlIGgzIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogd2hpdGU7XG4gIG1hcmdpbjogLjVlbTtcbiAgcGFkZGluZzogMDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuYmFubmVyX19jb250ZW50X190aXRsZSBoMiwgLmJhbm5lcl9fY29udGVudF9fdGl0bGUgaDMge1xuICAgIHdpZHRoOiA3NSU7XG4gIH1cbn1cblxuLmJhbm5lcl9fY29udGVudF9fdGl0bGUgaDIge1xuICBmb250LXNpemU6IDIuNWVtO1xufVxuXG4uYmFubmVyX19jb250ZW50X190aXRsZSBoMyB7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG59XG5cbm5hdi5icmVhZGNydW1iIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogNzUlO1xuICBtYXJnaW46IDFlbSBhdXRvIDAgYXV0bztcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxubmF2LmJyZWFkY3J1bWIgdWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDA7XG59XG5cbm5hdi5icmVhZGNydW1iIHVsIGxpIHtcbiAgZGlzcGxheTogaW5saW5lO1xuICBtYXJnaW4tcmlnaHQ6IDFlbTtcbiAgZm9udC1mYW1pbHk6IFwiQmFsb28gQmhhaW5hXCIsIGN1cnNpdmU7XG59XG5cbm5hdi5icmVhZGNydW1iIHVsIGxpOjphZnRlciB7XG4gIGNvbnRlbnQ6ICdcXFxcJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBtYXJnaW46IC4yZW0gMCAwIC4yZW07XG59XG5cbm5hdi5icmVhZGNydW1iIHVsIGxpOmxhc3QtY2hpbGQ6OmFmdGVyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxubmF2LmJyZWFkY3J1bWIgdWwgbGkgYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuXG4uc2VjdGlvbiB7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4uc2VjdGlvbl9fdGl0bGUge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uc2VjdGlvbl9fdGl0bGVfX2hpZ2hsaWdodCB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5zZWN0aW9uX190aXRsZV9faGlnaGxpZ2h0IHtcbiAgICBmbGV4LXdyYXA6IG5vd3JhcDtcbiAgfVxufVxuXG4uc2VjdGlvbl9fdGl0bGVfX2hpZ2hsaWdodCBoMiB7XG4gIGZvbnQtc2l6ZTogMi41ZW07XG4gIG1hcmdpbjogMCAwIC4yNWVtO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5zZWN0aW9uX190aXRsZV9faGlnaGxpZ2h0IGgyIHtcbiAgICBtYXJnaW46IDAgMCAxZW07XG4gIH1cbn1cblxuLnNlY3Rpb25fX3RpdGxlX19oaWdobGlnaHQ6OmJlZm9yZSwgLnNlY3Rpb25fX3RpdGxlX19oaWdobGlnaHQ6OmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiA0cHg7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgd2lkdGg6IDcwJTtcbiAgbWFyZ2luOiAwIC41ZW07XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLnNlY3Rpb25fX3RpdGxlX19oaWdobGlnaHQ6OmJlZm9yZSwgLnNlY3Rpb25fX3RpdGxlX19oaWdobGlnaHQ6OmFmdGVyIHtcbiAgICB3aWR0aDogOGVtO1xuICB9XG59XG5cbi5zZWN0aW9uX190aXRsZV9faGlnaGxpZ2h0OmJlZm9yZSB7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgIzM1Y2ZkNCwgIzE0YTFlNik7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLnNlY3Rpb25fX3RpdGxlX19oaWdobGlnaHQ6YmVmb3JlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuXG4uc2VjdGlvbl9fdGl0bGVfX2hpZ2hsaWdodDo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoLTQ1ZGVnLCAjMzVjZmQ0LCAjMTRhMWU2KTtcbn1cblxuLnNlY3Rpb25fX3RpdGxlX19oaWdobGlnaHQgcCB7XG4gIHdpZHRoOiA1MCU7XG59XG5cbi5zZWN0aW9uX190aXRsZV9faGlnaGxpZ2h0LS1vcmFuZ2U6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAjZjljOTBkLCAjZjk2ZTEwKTtcbn1cblxuLnNlY3Rpb25fX3RpdGxlX19oaWdobGlnaHQtLW9yYW5nZTo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoLTQ1ZGVnLCAjZjljOTBkLCAjZjk2ZTEwKTtcbn1cblxuLnNlY3Rpb25fX3RpdGxlX19oaWdobGlnaHQtLWdyZWVuOmJlZm9yZSB7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgIzYyYWIwMywgIzAwNGQwMCk7XG59XG5cbi5zZWN0aW9uX190aXRsZV9faGlnaGxpZ2h0LS1ncmVlbjo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoLTQ1ZGVnLCAjNjJhYjAzLCAjMDA0ZDAwKTtcbn1cblxuLnNlY3Rpb25fX3RpdGxlX19oaWdobGlnaHQtLW5vLWRlY29yYXRvcjo6YmVmb3JlLCAuc2VjdGlvbl9fdGl0bGVfX2hpZ2hsaWdodC0tbm8tZGVjb3JhdG9yOjphZnRlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5zZWN0aW9uX190aXRsZV9fZGVzY3JpcHRpb24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogMWVtO1xuICB3aWR0aDogOTUlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLnNlY3Rpb25fX3RpdGxlX19kZXNjcmlwdGlvbiB7XG4gICAgdG9wOiAtMmVtO1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cbn1cblxuLmRpdmlkZXIge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAzZW0gMDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5kaXZpZGVyOjpiZWZvcmUge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogODAlO1xuICBoZWlnaHQ6IDJweDtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICMzNWNmZDQsICMxNGExZTYpO1xufVxuXG4uZGl2aWRlci0tb3JhbmdlOjpiZWZvcmUge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICNmOWM5MGQsICNmOTZlMTApO1xufVxuXG4uZGl2aWRlci0td2hpdGU6OmJlZm9yZSB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xufVxuXG4udG9wX2Rlc3RpbmF0aW9ucyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi50b3BfZGVzdGluYXRpb25zX19wbGFjZXMge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLnRvcF9kZXN0aW5hdGlvbnNfX3BsYWNlcyB7XG4gICAgd2lkdGg6IDkwJTtcbiAgfVxufVxuXG4udG9wX2Rlc3RpbmF0aW9uc19fcGxhY2VzX19wbGFjZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDEuNWVtIDA7XG4gIG1heC1oZWlnaHQ6IDc1dmg7XG4gIG1pbi1oZWlnaHQ6IDUwdmg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAudG9wX2Rlc3RpbmF0aW9uc19fcGxhY2VzX19wbGFjZSB7XG4gICAgbWFyZ2luOiAzZW0gMDtcbiAgICB3aWR0aDogNDglO1xuICAgIG1pbi1oZWlnaHQ6IGF1dG87XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDE2MDBweCkge1xuICAudG9wX2Rlc3RpbmF0aW9uc19fcGxhY2VzX19wbGFjZSB7XG4gICAgbWFyZ2luOiAzZW0gMDtcbiAgICB3aWR0aDogMjMlO1xuICB9XG59XG5cbi50b3BfZGVzdGluYXRpb25zX19wbGFjZXNfX3BsYWNlOmhvdmVyIGltZyB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7XG59XG5cbi50b3BfZGVzdGluYXRpb25zX19wbGFjZXNfX3BsYWNlOjpiZWZvcmUge1xuICBjb250ZW50OiAnJztcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAwO1xuICBsZWZ0OiAtMTBweDtcbiAgdG9wOiAtMTBweDtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAjMzVjZmQ0LCAjMTRhMWU2IDIwJSwgdHJhbnNwYXJlbnQpO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC50b3BfZGVzdGluYXRpb25zX19wbGFjZXNfX3BsYWNlOjpiZWZvcmUge1xuICAgIGxlZnQ6IC0xNXB4O1xuICAgIHRvcDogLTE1cHg7XG4gIH1cbn1cblxuLnRvcF9kZXN0aW5hdGlvbnNfX3BsYWNlc19fcGxhY2UtLW9yYW5nZTo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAjZjljOTBkLCAjZjk2ZTEwIDIwJSwgdHJhbnNwYXJlbnQpO1xufVxuXG4udG9wX2Rlc3RpbmF0aW9uc19fcGxhY2VzX19wbGFjZS0tZ3JlZW46OmJlZm9yZSB7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgIzYyYWIwMywgIzAwNGQwMCAyMCUsIHRyYW5zcGFyZW50KTtcbn1cblxuLnRvcF9kZXN0aW5hdGlvbnNfX3BsYWNlc19fcGxhY2VfX2ltYWdlIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxNjAwcHgpIHtcbiAgLnRvcF9kZXN0aW5hdGlvbnNfX3BsYWNlc19fcGxhY2VfX2ltYWdlIHtcbiAgICBtaW4taGVpZ2h0OiA2MHZoO1xuICB9XG59XG5cbi50b3BfZGVzdGluYXRpb25zX19wbGFjZXNfX3BsYWNlX19pbWFnZSA+IGRpdiB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi50b3BfZGVzdGluYXRpb25zX19wbGFjZXNfX3BsYWNlX19pbWFnZSBpbWcge1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjVzIGVhc2UtaW4tb3V0O1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxNjAwcHgpIHtcbiAgLnRvcF9kZXN0aW5hdGlvbnNfX3BsYWNlc19fcGxhY2VfX2ltYWdlIGltZyB7XG4gICAgd2lkdGg6IGF1dG87XG4gIH1cbn1cblxuLnRvcF9kZXN0aW5hdGlvbnNfX3BsYWNlc19fcGxhY2VfX3RleHQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgd2lkdGg6IDkwJTtcbiAgbWFyZ2luOiAwIDUlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZmxleC13cmFwOiB3cmFwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHotaW5kZXg6IDI7XG4gIHRleHQtc2hhZG93OiAzcHggM3B4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjUpO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC50b3BfZGVzdGluYXRpb25zX19wbGFjZXNfX3BsYWNlX190ZXh0IHtcbiAgICBib3R0b206IDFlbTtcbiAgfVxufVxuXG4udG9wX2Rlc3RpbmF0aW9uc19fcGxhY2VzX19wbGFjZV9fdGV4dCBzcGFuIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC1mYW1pbHk6IFwiQmFsb28gQmhhaW5hXCIsIGN1cnNpdmU7XG4gIGZvbnQtc2l6ZTogMmVtO1xufVxuXG4udG9wX2Rlc3RpbmF0aW9uc19fcGxhY2VzX19wbGFjZV9fdGV4dCBwIHtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmFjdGl2aXR5IHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogLjVlbSAuNWVtO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmFjdGl2aXR5IHtcbiAgICB3aWR0aDogMzElO1xuICB9XG59XG5cbi5hY3Rpdml0eTpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLmFjdGl2aXR5OmhvdmVyIGltZyB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbn1cblxuLmFjdGl2aXR5X19pbWFnZSB7XG4gIGhlaWdodDogNDB2aDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYm94LXNoYWRvdzogMnB4IDJweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5hY3Rpdml0eV9faW1hZ2UgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4zcyBlYXNlLWluLW91dDtcbn1cblxuLmFjdGl2aXR5X19jb250ZW50IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IC0uNzVlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGJveC1zaGFkb3c6IDJweCAycHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gIHBhZGRpbmc6IC41ZW07XG4gIHdpZHRoOiA5NSU7XG4gIG1hcmdpbjogYXV0bztcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5hY3Rpdml0eV9fY29udGVudCB7XG4gICAgcGFkZGluZzogMWVtO1xuICAgIHdpZHRoOiA5MCU7XG4gIH1cbn1cblxuLmFjdGl2aXR5X19jb250ZW50X19wcmljZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAjMzVjZmQ0LCAjMTRhMWU2KTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoNTAlLCAtNTAlKTtcbiAgdG9wOiAtLjVlbTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogLjVlbTtcbiAgd2lkdGg6IDMuNzVlbTtcbiAgaGVpZ2h0OiAzLjc1ZW07XG59XG5cbi5hY3Rpdml0eV9fY29udGVudF9fcHJpY2Ugc3BhbiB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiBhdXRvO1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogLjk1ZW07XG59XG5cbi5hY3Rpdml0eV9fY29udGVudF9fYWN0aW9ucyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IGF1dG87XG4gIHotaW5kZXg6IDE7XG59XG5cbi5hY3Rpdml0eV9fY29udGVudF9fYWN0aW9uc19fYWRkIHtcbiAgd2lkdGg6IDJlbTtcbiAgaGVpZ2h0OiAyZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmFjdGl2aXR5X19jb250ZW50X19hY3Rpb25zX19hZGQ6OmJlZm9yZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogJyc7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbn1cblxuLmFjdGl2aXR5X19jb250ZW50X190aXRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDgwJTtcbiAgbWFyZ2luOiBhdXRvO1xufVxuXG4uYWN0aXZpdHlfX2NvbnRlbnRfX2Rlc2NyaXB0aW9uIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uYWN0aXZpdHlfX2NvbnRlbnRfX2Rlc2NyaXB0aW9uIHAge1xuICBtYXJnaW46IC4yNWVtO1xufVxuXG5Aa2V5ZnJhbWVzIGxvYWRpbmdfZG90c19hbmltYXRpb24ge1xuICA1MCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgbG9hZGluZ19kb3RzX2FuaW1hdGlvbl9fd2FpdCB7XG4gIDUwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG5cbi5sb2FkaW5nX2RvdHMge1xuICBoZWlnaHQ6IDJlbTtcbiAgbWFyZ2luOiAuNWVtO1xuICB3aWR0aDogYXV0bztcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAuM3MgZWFzZS1pbi1vdXQ7XG59XG5cbi5sb2FkaW5nX2RvdHMgKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi5sb2FkaW5nX2RvdHMgLmRvdCB7XG4gIHdpZHRoOiAxLjVlbTtcbiAgaGVpZ2h0OiAxLjVlbTtcbiAgbWFyZ2luOiAwIGNhbGMoMS41ZW0gLyAyKTtcbiAgYm9yZGVyOiBjYWxjKDEuNWVtIC8gNSkgc29saWQgIzM1Y2ZkNDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBmbG9hdDogbGVmdDtcbiAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcbiAgYW5pbWF0aW9uOiBsb2FkaW5nX2RvdHNfYW5pbWF0aW9uIDFzIGVhc2UgaW5maW5pdGUgMHM7XG59XG5cbi5sb2FkaW5nX2RvdHMgLmRvdDpudGgtY2hpbGQoMSkge1xuICBhbmltYXRpb24tZGVsYXk6IGNhbGMoMzAwbXMgKiAxKTtcbn1cblxuLmxvYWRpbmdfZG90cyAuZG90Om50aC1jaGlsZCgyKSB7XG4gIGFuaW1hdGlvbi1kZWxheTogY2FsYygzMDBtcyAqIDIpO1xufVxuXG4ubG9hZGluZ19kb3RzIC5kb3Q6bnRoLWNoaWxkKDMpIHtcbiAgYW5pbWF0aW9uLWRlbGF5OiBjYWxjKDMwMG1zICogMyk7XG59XG5cbi5sb2FkaW5nX2RvdHMtLXZpc2libGUge1xuICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG59XG5cbkBrZXlmcmFtZXMgc2hvd0JhciB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoY2FsYyggMTAwJSAtIDNlbSkpO1xuICB9XG4gIDQwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDAlKTtcbiAgfVxuICA2MCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwJSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKGNhbGMoIDEwMCUgLSAzZW0pKTtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIHNob3dBY3Rpdml0eUl0ZW0ge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cblxuLmNhcnRfYmFyIHtcbiAgd2lkdGg6IDEwMHZ3O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMDtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMnB4O1xuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAycHg7XG4gIG1hcmdpbjogYXV0bztcbiAgei1pbmRleDogMjtcbiAgcGFkZGluZzogLjI1ZW07XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiYSg1MywgMjA3LCAyMTIsIDAuOTUpLCByZ2JhKDIwLCAxNjEsIDIzMCwgMC45NSkpO1xuICBjb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWShjYWxjKCAxMDAlIC0gM2VtKSk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuM3MgZWFzZS1pbi1vdXQ7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmNhcnRfYmFyIHtcbiAgICB3aWR0aDogYXV0bztcbiAgICBtYXgtd2lkdGg6IDMwdnc7XG4gICAgcmlnaHQ6IDJlbTtcbiAgfVxufVxuXG4uY2FydF9iYXI6aG92ZXIge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG59XG5cbi5jYXJ0X2Jhci0tdmlzaWJsZSB7XG4gIGFuaW1hdGlvbjogc2hvd0JhciAzLjVzIGVhc2UtaW4tb3V0IDE7XG59XG5cbi5jYXJ0X2Jhcl9fdGl0bGUge1xuICBtYXJnaW46IC4yNWVtIGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHdoaXRlO1xuICB3aWR0aDogODAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLmNhcnRfYmFyX190aXRsZV9faWNvbiB7XG4gIHdpZHRoOiAyZW07XG4gIGhlaWdodDogMmVtO1xufVxuXG4uY2FydF9iYXJfX3RpdGxlIGg0IHtcbiAgbWFyZ2luOiAuNWVtIDFlbTtcbiAgcGFkZGluZzogMDtcbn1cblxuLmNhcnRfYmFyX190aXRsZSBzcGFuIHtcbiAgcGFkZGluZzogLjVlbTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBoZWlnaHQ6IDJlbTtcbiAgd2lkdGg6IDJlbTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCNmOWM5MGQsICNmOTZlMTApO1xuICBmb250LWZhbWlseTogXCJCYWxvbyBCaGFpbmFcIiwgY3Vyc2l2ZTtcbn1cblxuLmNhcnRfYmFyX19jb250ZW50IHtcbiAgcGFkZGluZzogMWVtO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNhcnRfYmFyX19jb250ZW50X19hY3Rpdml0aWVzIHtcbiAgbWF4LWhlaWdodDogMzB2aDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdy15OiBhdXRvO1xufVxuXG4uY2FydF9iYXJfX2NvbnRlbnRfX2FjdGl2aXRpZXNfX2l0ZW0ge1xuICB3aWR0aDogODAlO1xuICBtYXJnaW46IGF1dG87XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYW5pbWF0aW9uOiAuM3MgZWFzZS1pbiAxIHNob3dBY3Rpdml0eUl0ZW07XG59XG5cbi5jYXJ0X2Jhcl9fY29udGVudF9fYWN0aXZpdGllc19faXRlbV9fcHJvdG90eXBlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmNhcnRfYmFyX19jb250ZW50X19hY3Rpdml0aWVzX19pdGVtIGltZyB7XG4gIHdpZHRoOiAyZW07XG4gIGhlaWdodDogMmVtO1xuICBkaXNwbGF5OiBpbmxpbmU7XG59XG5cbi5jYXJ0X2Jhcl9fY29udGVudF9fYWN0aXZpdGllc19faXRlbSBoNSB7XG4gIGRpc3BsYXk6IGlubGluZTtcbiAgbWFyZ2luLWxlZnQ6IDFlbTtcbn1cblxuLmNhcnRfYmFyX19jb250ZW50X19hY3Rpdml0aWVzX19pdGVtX19kcm9wIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogM2VtO1xuICB3aWR0aDogMS4yNWVtO1xuICBoZWlnaHQ6IDEuMjVlbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uY2FydF9iYXJfX2NvbnRlbnRfX2FjdGl2aXRpZXNfX2l0ZW1fX2Ryb3A6YmVmb3JlIHtcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNhcnRfYmFyX19jb250ZW50X19hY3Rpdml0aWVzX19pdGVtX19kcm9wIHN2ZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5jYXJ0X2Jhcl9fY29udGVudF9fdGV4dCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogLjVlbSAwO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5jYXJ0X2Jhcl9fY29udGVudF9fdGV4dCBwIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4uY2FydF9iYXJfX2NvbnRlbnRfX2J1dHRvbiB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbn1cblxuLmNhcnRfYmFyX19jb250ZW50X19idXR0b24gYSB7XG4gIG1hcmdpbjogMCAuMjVlbTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uY2FydF9iYXIgW2RhdGEtc2hvdz0nZW1wdHknXSB7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDA7XG4gIHdpZHRoOiAwO1xuICB6LWluZGV4OiAtMTtcbn1cblxuLmNhcnRfYmFyLS1pbml0aWFsIFtkYXRhLXNob3c9J25vLWVtcHR5J10ge1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAwO1xuICB3aWR0aDogMDtcbiAgei1pbmRleDogLTE7XG59XG5cbi5jYXJ0X2Jhci0taW5pdGlhbCBbZGF0YS1zaG93PSdlbXB0eSddIHtcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgaGVpZ2h0OiBhdXRvO1xuICB3aWR0aDogYXV0bztcbiAgei1pbmRleDogYXV0bztcbn1cblxuLmZvb3RlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAjMzVjZmQ0LCAjMTRhMWU2KTtcbiAgY29sb3I6ICNmZmZmZmY7XG59XG5cbi5mb290ZXJfX2Jhbm5lciB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDc1dmg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5mb290ZXJfX2Jhbm5lcl9faW1hZ2Uge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5mb290ZXJfX2Jhbm5lcl9fY29udGVudCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLmZvb3Rlcl9fYmFubmVyX19jb250ZW50X190aXRsZXMge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LXNoYWRvdzogMnB4IDJweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yNSk7XG59XG5cbi5mb290ZXJfX2Jhbm5lcl9fY29udGVudF9fdGl0bGVzIGgyLCAuZm9vdGVyX19iYW5uZXJfX2NvbnRlbnRfX3RpdGxlcyBoMyB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgbWFyZ2luOiAuNWVtO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uZm9vdGVyX19iYW5uZXJfX2NvbnRlbnRfX3RpdGxlcyBoMiB7XG4gIGZvbnQtc2l6ZTogMi41ZW07XG59XG5cbi5mb290ZXJfX2Jhbm5lcl9fY29udGVudF9fdGl0bGVzIGgzIHtcbiAgZm9udC1zaXplOiAxLjVlbTtcbn1cblxuLmZvb3Rlcl9fY29udGVudCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTtcbiAgcGFkZGluZzogLjVlbTtcbiAgd2lkdGg6IDkwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmZvb3Rlcl9fY29udGVudCB7XG4gICAgcGFkZGluZzogMmVtIDJlbSAuNWVtIDJlbTtcbiAgfVxufVxuXG4uZm9vdGVyX19jb250ZW50X19saW5rcyB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLmZvb3Rlcl9fY29udGVudF9fbGlua3NfX2NvbHVtbiB7XG4gIHdpZHRoOiA1MCU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLmZvb3Rlcl9fY29udGVudF9fbGlua3NfX2NvbHVtbiB7XG4gICAgd2lkdGg6IDIzJTtcbiAgfVxufVxuXG4uZm9vdGVyX19jb250ZW50X19saW5rc19fY29sdW1uOm50aC1jaGlsZCgxKSB7XG4gIG9yZGVyOiAxO1xufVxuXG4uZm9vdGVyX19jb250ZW50X19saW5rc19fY29sdW1uOm50aC1jaGlsZCgyKSB7XG4gIG9yZGVyOiAyO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5mb290ZXJfX2NvbnRlbnRfX2xpbmtzX19jb2x1bW46bnRoLWNoaWxkKDIpIHtcbiAgICBvcmRlcjogMztcbiAgfVxufVxuXG4uZm9vdGVyX19jb250ZW50X19saW5rc19fY29sdW1uOm50aC1jaGlsZCgzKSB7XG4gIG9yZGVyOiAzO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5mb290ZXJfX2NvbnRlbnRfX2xpbmtzX19jb2x1bW46bnRoLWNoaWxkKDMpIHtcbiAgICBvcmRlcjogMjtcbiAgfVxufVxuXG4uZm9vdGVyX19jb250ZW50X19saW5rc19fY29sdW1uOm50aC1jaGlsZCg0KSB7XG4gIG9yZGVyOiA0O1xufVxuXG4uZm9vdGVyX19jb250ZW50X19saW5rc19fY29sdW1uX190aXRsZSBhIHtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uZm9vdGVyX19jb250ZW50X19saW5rc19fY29sdW1uIHVsIHtcbiAgbWFyZ2luLWxlZnQ6IC4yNWVtO1xufVxuXG4uZm9vdGVyX19jb250ZW50X19saW5rc19fY29sdW1uIHVsIGxpIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbWFyZ2luOiAuMjVlbSAwO1xufVxuXG4uZm9vdGVyX19jb250ZW50X19saW5rc19fY29sdW1uIHVsIGxpIGEge1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5mb290ZXJfX2NvbnRlbnRfX2luZm9zIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuXG4uZm9vdGVyX19jb250ZW50X19pbmZvc19fY29sdW1uIHtcbiAgd2lkdGg6IDQ4JTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuZm9vdGVyX19jb250ZW50X19pbmZvc19fY29sdW1uIHtcbiAgICB3aWR0aDogMjUlO1xuICB9XG59XG5cbi5mb290ZXJfX2NvbnRlbnRfX2luZm9zX19jb2x1bW46bGFzdC1jaGlsZCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5mb290ZXJfX2NvbnRlbnRfX2luZm9zX19jb2x1bW46bGFzdC1jaGlsZCB7XG4gICAgd2lkdGg6IDI1JTtcbiAgfVxufVxuXG4uZm9vdGVyX19jb250ZW50X19hZ2Ige1xuICBkaXNwbGF5OiBmbGV4O1xuICB3aWR0aDogMTAwJTtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5mb290ZXJfX2NvbnRlbnRfX2FnYiBhIHtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uZm9vdGVyX19jb250ZW50X19jb3B5cmlnaHQge1xuICB3aWR0aDogYXV0bztcbn1cblxuLmZvb3Rlcl9fY29udGVudF9fbWFkZS1ieSB7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG4uZm9vdGVyX19jb250ZW50X19tYWRlLWJ5IGEge1xuICBjb2xvcjogd2hpdGU7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmZvb3Rlcl9fY29udGVudF9fc29jaWFsLW5ldHdvcmtzIHtcbiAgd2lkdGg6IGF1dG87XG4gIG1hcmdpbjogYXV0byAyZW07XG59XG5cbi5mb290ZXJfX2NvbnRlbnRfX3NvY2lhbC1uZXR3b3JrcyB1bCB7XG4gIG1hcmdpbjogMDtcbn1cblxuLmZvb3Rlcl9fY29udGVudF9fc29jaWFsLW5ldHdvcmtzIHVsIGxpIHtcbiAgbWFyZ2luOiAwIC4yNWVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbi5mb290ZXJfX2NvbnRlbnRfX3NvY2lhbC1uZXR3b3JrcyB1bCBsaSBhIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4uZm9vdGVyX19jb250ZW50X19zb2NpYWwtbmV0d29ya3MgdWwgbGkgYSBzdmcge1xuICB3aWR0aDogMmVtO1xuICBoZWlnaHQ6IDJlbTtcbn1cblxuLmZvb3Rlcl9fYmFja2dyb3VuZC1pbWFnZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICB6LWluZGV4OiAwO1xufVxuXG4udHJhdmVsLW9wdGlvbnMge1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi50cmF2ZWwtb3B0aW9uc19fZ3JpZCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwiaW1nMSBpbWc2XCIgIFwiaW1nMiBpbWc2XCIgIFwiaW1nOSBpbWc5XCIgIFwiaW1nMTAgaW1nMTBcIiAgXCJpbWczIGltZzNcIiAgXCJpbWc0IGltZzExXCIgIFwiaW1nNSBpbWc3IFwiICBcImltZzUgaW1nOFwiICBcImltZzEyIGltZzE0XCIgIFwiaW1nMTMgaW1nMTRcIjtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAzM3ZoIDMzdmggMzN2aCAzM3ZoIDMzdmggMzN2aCAzM3ZoIDMzdmggMzN2aCAzM3ZoO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XG4gIHdpZHRoOiAxMDAlO1xuICBncmlkLWdhcDogLjE1ZW07XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLnRyYXZlbC1vcHRpb25zX19ncmlkIHtcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcImltZzEgaW1nNiBpbWc5IGltZzlcIiAgXCJpbWcyIGltZzYgaW1nMTAgaW1nMTBcIiAgXCJpbWczIGltZzMgaW1nMyBpbWczXCIgIFwiaW1nNCBpbWc0IGltZzExIGltZzExXCIgIFwiaW1nNSBpbWc3IGltZzEyIGltZzE0XCIgIFwiaW1nNSBpbWc4IGltZzEzIGltZzE0XCI7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA0MHZoIDQwdmggNDB2aCA0MHZoO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnIgMWZyO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi50cmF2ZWwtb3B0aW9uc19fZ3JpZF9faXRlbSB7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi50cmF2ZWwtb3B0aW9uc19fZ3JpZF9faXRlbSBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4udHJhdmVsLW9wdGlvbnNfX2dyaWRfb3ZlcmxheSB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcInNlY3Rpb24xIHNlY3Rpb24xXCIgIFwic2VjdGlvbjEgc2VjdGlvbjFcIiAgXCJzZWN0aW9uMiBzZWN0aW9uMlwiICBcInNlY3Rpb24yIHNlY3Rpb24yXCIgIFwic2VjdGlvbjMgc2VjdGlvbjNcIiAgXCJzZWN0aW9uMyBzZWN0aW9uM1wiICBcInNlY3Rpb240IHNlY3Rpb240XCIgIFwic2VjdGlvbjQgc2VjdGlvbjRcIiAgXCJzZWN0aW9uNSBzZWN0aW9uNVwiICBcInNlY3Rpb241IHNlY3Rpb241XCI7XG4gIGdyaWQtdGVtcGxhdGUtcm93czogMzN2aCAzM3ZoIDMzdmggMzN2aCAzM3ZoIDMzdmggMzN2aCAzM3ZoIDMzdmggMzN2aDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xuICBncmlkLWdhcDogLjE1ZW07XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLnRyYXZlbC1vcHRpb25zX19ncmlkX292ZXJsYXkge1xuICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwic2VjdGlvbjEgc2VjdGlvbjEgc2VjdGlvbjIgc2VjdGlvbjJcIiAgXCJzZWN0aW9uMSBzZWN0aW9uMSBzZWN0aW9uMiBzZWN0aW9uMlwiICBcInNlY3Rpb24zIHNlY3Rpb24zIHNlY3Rpb24zIHNlY3Rpb24zXCIgIFwic2VjdGlvbjMgc2VjdGlvbjMgc2VjdGlvbjMgc2VjdGlvbjNcIiAgXCJzZWN0aW9uNCBzZWN0aW9uNCBzZWN0aW9uNSBzZWN0aW9uNVwiICBcInNlY3Rpb240IHNlY3Rpb240IHNlY3Rpb241IHNlY3Rpb241XCI7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA0MHZoIDQwdmggNDB2aCA0MHZoO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnIgMWZyO1xuICB9XG59XG5cbi50cmF2ZWwtb3B0aW9uc19fZ3JpZF9vdmVybGF5IGEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC1zaXplOiAzZW07XG4gIHRleHQtc2hhZG93OiAycHggMnB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcbn1cblxuLnRyYXZlbC1vcHRpb25zX19ncmlkX292ZXJsYXkgYTpob3ZlciA+IGRpdiB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi50cmF2ZWwtb3B0aW9uc19fZ3JpZF9vdmVybGF5IGEgZGl2IHtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgb3BhY2l0eTogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg1MywgMjA3LCAyMTIsIDAuNSk7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIGVhc2UtaW4tb3V0O1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbiIsIio6OnNlbGVjdGlvbntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJGxpZ2h0LWJsdWUsIC4zKTtcclxufVxyXG5cclxuYm9keXtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuc3ZnLmZpbHRlcntcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHotaW5kZXg6IC0xO1xyXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG59XHJcbiIsIi5pY29uIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjNzIGVhc2UtaW4tb3V0O1xyXG5cclxufVxyXG5cclxuLmhlYXJ0e1xyXG5cclxuICAgICYgI2hlYXJ0X2JvcmRlcntcclxuICAgICAgICBmaWxsOiB3aGl0ZTtcclxuICAgIH1cclxuXHJcbiAgICAmICNoZWFydF9pbnNpZGV7XHJcbiAgICAgICAgZmlsbDogdHJhbnNwYXJlbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tZmlsbHtcclxuXHJcbiAgICAgICAgJi1ncmVlbiB7XHJcbiAgICAgICAgICAgICYgI2hlYXJ0X2luc2lkZSB7XHJcbiAgICAgICAgICAgICAgICBmaWxsOiAkZGFyay1ncmVlbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi13aGl0ZXtcclxuICAgICAgICAgICAgJiAjaGVhcnRfaW5zaWRlIHtcclxuICAgICAgICAgICAgICAgIGZpbGw6IHdoaXRlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtLWludmVyc2V7XHJcbiAgICAgICAgJiAjaGVhcnRfYm9yZGVye1xyXG4gICAgICAgICAgICBmaWxsOiAkbGlnaHQtZ3JlZW47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLmhlYXJ0LS1maWxsLXdoaXRle1xyXG5cclxuICAgICAgICAgICAgJiAjaGVhcnRfaW5zaWRlIHtcclxuICAgICAgICAgICAgICAgIGZpbGw6ICRsaWdodC1ncmVlbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLmFycm93e1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgXHJcbiAgICAmLS1yb3RhdGV7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcclxuICAgIH1cclxufVxyXG4iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuVGl0bGU6IFJhZGlvIFN3aXRjaFxyXG5EZXNjcjogQ3VzdG9tIHJhZGlvIHRvZ2dsZVxyXG5cclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi8gXHJcblxyXG46cm9vdCB7XHJcbiAgLy8gc3R5bGVcclxuICAtLXJhZGlvLXN3aXRjaC13aWR0aDogMTg2cHg7XHJcbiAgLS1yYWRpby1zd2l0Y2gtaGVpZ2h0OiA0NnB4O1xyXG4gIC0tcmFkaW8tc3dpdGNoLXBhZGRpbmc6IDNweDtcclxuICAtLXJhZGlvLXN3aXRjaC1yYWRpdXM6IDUwZW07XHJcblxyXG4gIC8vIGFuaW1hdGlvblxyXG4gIC0tcmFkaW8tc3dpdGNoLWFuaW1hdGlvbi1kdXJhdGlvbjogMC4zcztcclxufVxyXG5cclxuLnJhZGlvLXN3aXRjaCB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgLy8gZmxleGJveCBmYWxsYmFja1xyXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gIHBhZGRpbmc6IHZhcigtLXJhZGlvLXN3aXRjaC1wYWRkaW5nKTtcclxuICBib3JkZXItcmFkaXVzOiBjYWxjKHZhcigtLXJhZGlvLXN3aXRjaC1yYWRpdXMpICogMS40KTtcclxuICBib3JkZXI6IDFweCBzb2xpZCAkY29sb3ItZ3JheS1saWdodDtcclxuXHJcbiAgJjpmb2N1cy13aXRoaW4sICY6YWN0aXZlIHtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAwIDFweCAkY29sb3ItZ3JheS1saWdodDsgLy8gZm9jdXMgZWZmZWN0XHJcbiAgfVxyXG59XHJcblxyXG4ucmFkaW8tc3dpdGNoX19pdGVtIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvLyBmbGV4Ym94IGZhbGxiYWNrXHJcbiAgaGVpZ2h0OiBjYWxjKHZhcigtLXJhZGlvLXN3aXRjaC1oZWlnaHQpIC0gMip2YXIoLS1yYWRpby1zd2l0Y2gtcGFkZGluZykpO1xyXG4gIHdpZHRoOiBjYWxjKHZhcigtLXJhZGlvLXN3aXRjaC13aWR0aCkqMC41IC0gIHZhcigtLXJhZGlvLXN3aXRjaC1wYWRkaW5nKSk7XHJcbn1cclxuXHJcbi5yYWRpby1zd2l0Y2hfX2xhYmVsIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgei1pbmRleDogMjtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBib3JkZXItcmFkaXVzOiB2YXIoLS1yYWRpby1zd2l0Y2gtcmFkaXVzKTtcclxuICBsaW5lLWhlaWdodDogY2FsYyh2YXIoLS1yYWRpby1zd2l0Y2gtaGVpZ2h0KSAtIDIqdmFyKC0tcmFkaW8tc3dpdGNoLXBhZGRpbmcpKTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7IFxyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBmb250LXNpemU6IHZhcigtLXRleHQtc20pO1xyXG4gIHVzZXItc2VsZWN0OiBub25lO1xyXG4gIHRyYW5zaXRpb246IGFsbCB2YXIoLS1yYWRpby1zd2l0Y2gtYW5pbWF0aW9uLWR1cmF0aW9uKTtcclxuXHJcbiAgLnJhZGlvLXN3aXRjaF9faW5wdXQ6Y2hlY2tlZCB+ICYge1xyXG4gICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICB9XHJcblxyXG4gIC5yYWRpby1zd2l0Y2hfX2lucHV0OmZvY3VzIH4gJiB7IC8vIGZvY3VzIGVmZmVjdCBpbiBicm93c2VycyBub3Qgc3VwcG9ydGluZyA6Zm9jdXMtd2l0aGluXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKCRjb2xvci1ibHVlLWRhcmssIDAuNik7XHJcbiAgfVxyXG5cclxuICA6bm90KCopOmZvY3VzLXdpdGhpbiwgLy8gdHJpY2sgdG8gZGV0ZWN0IDpmb2N1cy13aXRoaW4gc3VwcG9ydCAtPiBodHRwczovL2Nzcy10cmlja3MuY29tL3VzaW5nLWZlYXR1cmUtZGV0ZWN0aW9uLWNvbmRpdGlvbmFscy1hbmQtZ3JvdXBzLXdpdGgtc2VsZWN0b3JzL1xyXG4gIC5yYWRpby1zd2l0Y2hfX2lucHV0OmZvY3VzIH4gJiB7IC8vIHJlc2V0IGZvY3VzIHN0eWxlIGZvciBicm93c2VycyBzdXBwb3J0aW5nIDpmb2N1cy13aXRoaW5cclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gIH1cclxufVxyXG5cclxuLnJhZGlvLXN3aXRjaF9fbWFya2VyIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgei1pbmRleDogMTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogLTEwMCU7XHJcbiAgYm9yZGVyLXJhZGl1czogdmFyKC0tcmFkaW8tc3dpdGNoLXJhZGl1cyk7XHJcblxyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgJGxpZ2h0LWJsdWUsICRkYXJrLWJsdWUpO1xyXG5cclxuICBoZWlnaHQ6IGNhbGModmFyKC0tcmFkaW8tc3dpdGNoLWhlaWdodCkgLSAyKnZhcigtLXJhZGlvLXN3aXRjaC1wYWRkaW5nKSk7XHJcbiAgd2lkdGg6IGNhbGModmFyKC0tcmFkaW8tc3dpdGNoLXdpZHRoKSowLjUgLSAgdmFyKC0tcmFkaW8tc3dpdGNoLXBhZGRpbmcpKTtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gdmFyKC0tcmFkaW8tc3dpdGNoLWFuaW1hdGlvbi1kdXJhdGlvbik7XHJcblxyXG4gIC5yYWRpby1zd2l0Y2hfX2lucHV0OmNoZWNrZWQgfiAmIHtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcclxuICB9XHJcbn1cclxuIiwiLmNvb2tpZXtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICBib3R0b206IDFlbTtcclxuICAgIGxlZnQ6IDJlbTtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcclxuICAgIGJveC1zaGFkb3c6IDJweCAycHggOHB4IHJnYmEoYmxhY2ssIC4yKTtcclxuICAgIHotaW5kZXg6IDQ7XHJcblxyXG4gICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICBib3R0b206IDJlbTtcclxuICAgICAgICB3aWR0aDogMzAlO1xyXG4gICAgfVxyXG5cclxuICAgIEBrZXlmcmFtZXMgY29sbGFwc2Uge1xyXG4gICAgICAgIDAle1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogdmlzaWJsZTtcclxuICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgICAgICB6LWluZGV4OiA0O1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICAxMDAle1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogdmlzaWJsZTtcclxuICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgICAgICB6LWluZGV4OiA0O1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAa2V5ZnJhbWVzIGNvbGxhcHNlTGFyZ2Uge1xyXG4gICAgICAgIDAle1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogdmlzaWJsZTtcclxuICAgICAgICAgICAgd2lkdGg6IDMwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgICAgICB6LWluZGV4OiA0O1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICAxMDAle1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogdmlzaWJsZTtcclxuICAgICAgICAgICAgd2lkdGg6IDMwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgICAgICB6LWluZGV4OiA0O1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLS1uby12aXNpYmxle1xyXG4gICAgICAgIGFuaW1hdGlvbjogY29sbGFwc2UgLjNzIGVhc2UtaW4tb3V0IDE7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICB3aWR0aDogMDtcclxuICAgICAgICBoZWlnaHQ6IDA7XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgIGFuaW1hdGlvbjogY29sbGFwc2VMYXJnZSAuM3MgZWFzZS1pbi1vdXQgMTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9faW1ne1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IC0yZW07XHJcbiAgICAgICAgbGVmdDogLTJlbTtcclxuICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICAgICAgd2lkdGg6IDRlbTtcclxuICAgICAgICBoZWlnaHQ6IDRlbTtcclxuICAgIH1cclxuXHJcbiAgICAmX19tZXNzYWdle1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIG1hcmdpbjogMWVtIDJlbSAuNWVtO1xyXG5cclxuICAgICAgICAmIGgxLCAmIHB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IC4yNWVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19idG57XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogLjVlbTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgfVxyXG59XHJcblxyXG4uY29va2llLW92ZXJsYXl7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB6LWluZGV4OiAzO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYShibGFjaywgLjc1KTtcclxuXHJcbiAgICBAa2V5ZnJhbWVzIGhpZGRlbiB7XHJcbiAgICAgICAgMCV7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoYmxhY2ssIC43NSk7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IDM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIDEwMCV7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoYmxhY2ssIDApO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAzO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLS1uby12aXNpYmxle1xyXG4gICAgICAgIGFuaW1hdGlvbjogaGlkZGVuIC4zcyBlYXNlLWluLW91dCAxIDtcclxuICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgICB3aWR0aDogMDtcclxuICAgICAgICBoZWlnaHQ6IDA7XHJcbiAgICB9XHJcbn0iLCJAbWl4aW4gYXRYTGFyZ2Uge1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDE2MDBweCkge1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gYXRMYXJnZSB7XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiBhdE1lZGl1bSB7XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogODAwcHgpIHtcclxuICAgICAgICBAY29udGVudDtcclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIGF0U21hbGwge1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDUzMHB4KSB7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn0iLCJcclxuLmJsdXItdXAge1xyXG4gICAgZmlsdGVyOiBibHVyKDhweCk7XHJcbiAgICB0cmFuc2l0aW9uOiBmaWx0ZXIgNjAwbXM7XHJcblxyXG4gICAgJi5sYXp5bG9hZGluZ3tcclxuICAgICAgICBmaWx0ZXI6IGJsdXIoNXB4KTtcclxuICAgIH1cclxuXHJcbiAgICAmLmxhenlsb2FkZWQge1xyXG4gICAgICAgIGZpbHRlcjogYmx1cigwKTtcclxuICAgIH1cclxufVxyXG4iLCIuZm9ybXtcclxuICAgIHdpZHRoOiA5NSU7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2l0ZW17XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gICAgICAgICZfX2xhYmVse1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgbWFyZ2luOiAwIDFlbTtcclxuICAgICAgICAgICAgcGFkZGluZzogLjVlbSAwO1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuXHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMzAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwIDJlbTtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogbGVmdDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9faW5wdXR7XHJcbiAgICAgICAgICAgIHdpZHRoOiA5MCU7XHJcblxyXG5cclxuICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA0MCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIiwiLmhlYWRlcntcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHdpZHRoOiA5OCU7XHJcbiAgICBtYXJnaW46IDAgMSU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgei1pbmRleDogMztcclxuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDNweDtcclxuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAzcHg7XHJcblxyXG4gICAgJl9fbG9nb3tcclxuICAgICAgICBtYXJnaW46IC4yNWVtIDFlbTtcclxuICAgICAgICB6LWluZGV4OiAzO1xyXG5cclxuICAgICAgICAmIGltZ3tcclxuICAgICAgICAgICAgaGVpZ2h0OiAzZW07XHJcbiAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19uYXZ7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsIHJnYmEoJGRhcmstYmx1ZSwgLjgpLCAkZGFyay1ibHVlLCAjMjNiNmRlKTtcclxuICAgICAgICB6LWluZGV4OiAyO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDAgMCAycHggMnB4O1xyXG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICB0b3A6IDMuNWVtO1xyXG5cclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZVgoLTEwMGRlZyk7XHJcbiAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogdG9wO1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcblxyXG4gICAgICAgICZfX21lbnV7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgcGFkZGluZzogMCAyLjUlO1xyXG5cclxuICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDAgNSU7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICZfX2NvbHVtbiB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuXHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBhdExhcmdlIHtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjQlO1xyXG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogNTAlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiAyNSU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAmOmxhc3QtY2hpbGQ6OmFmdGVyIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICY6bGFzdC1jaGlsZCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDJlbTsgLy9wYXJhIHVzbyBzaW4gdGl0dWxvIGRlIGNvbHVtbmFcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJjpudGgtY2hpbGQoMSl7XHJcbiAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDE7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAmOm50aC1jaGlsZCgyKXtcclxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogMjtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDM7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgJjpudGgtY2hpbGQoMyl7XHJcbiAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDM7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9yZGVyOiAyO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICY6bnRoLWNoaWxkKDQpe1xyXG4gICAgICAgICAgICAgICAgICAgIG9yZGVyOiA0O1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgICAgICAgICAmX190aXRsZXtcclxuICAgICAgICAgICAgICAgICAgICAmIGF7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMCAwIDFlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmX19saXN0e1xyXG4gICAgICAgICAgICAgICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwIDAgMCAxZW07XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIEBtaXhpbiBhdExhcmdle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMWVtO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgJl9fbGlua3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAuNWVtIGF1dG87XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAmIGEge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAmIHNwYW4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogM3B4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC44ZW07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDgwJTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgkY29sb3IteWVsbG93LWxpZ2h0ZXIsICRjb2xvci15ZWxsb3ctbGlnaHQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX21lbnUtaWNvbntcclxuICAgICAgICAmIC5tZW51LWljb24td3JhcHBlcntcclxuICAgICAgICAgICAgbWFyZ2luOiAgMWVtIDJlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5oZWFkcm9vbSB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAkbGlnaHQtYmx1ZSwgJGRhcmstYmx1ZSk7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDEwMCUgMjAwJTtcclxuICAgIHRyYW5zaXRpb246IGFsbCAuM3MgZWFzZS1pbi1vdXQ7XHJcbiAgICB0cmFuc2l0aW9uLWRlbGF5OiAuM3M7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIDIwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG5cclxuXHJcbiAgICAmLS1waW5uZWQgJi0tdG9wIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTAwJSAyMDAlO1xyXG4gICAgfVxyXG5cclxuICAgICYtLXBpbm5lZHtcclxuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDAlKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgJi0tdW5waW5uZWR7XHJcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTAwJSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5oZWFkZXItLXBpbm5lZCwgLmhlYWRyb29tLS1ub3QtdG9wLmhlYWRyb29tLS1waW5uZWR7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIDA7XHJcbn1cclxuXHJcbi8qIE1lbnUgaWNvbiBzdHlsZXMgKi9cclxuXHJcbi5tZW51LWljb24td3JhcHBlciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogMzRweDtcclxuICAgIGhlaWdodDogMzRweDtcclxuICAgIG1hcmdpbjogMmVtO1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjFzO1xyXG59XHJcblxyXG5cclxuLm1lbnUtaWNvbi13cmFwcGVyIHN2ZyB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IC0zM3B4O1xyXG4gICAgbGVmdDogLTMzcHg7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMC4xKTtcclxuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDAuMSk7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuMSk7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IDAgMDtcclxuICAgIC1tcy10cmFuc2Zvcm0tb3JpZ2luOiAwIDA7XHJcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiAwIDA7XHJcbn1cclxuXHJcbi5tZW51LWljb24td3JhcHBlciBzdmcgcGF0aCB7XHJcbiAgICBzdHJva2U6ICNmZmY7XHJcbiAgICBzdHJva2Utd2lkdGg6IDMwcHg7XHJcbiAgICBzdHJva2UtbGluZWNhcDogcm91bmQ7XHJcbiAgICBzdHJva2UtbGluZWpvaW46IHJvdW5kO1xyXG4gICAgZmlsbDogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbi5tZW51LWljb24td3JhcHBlciAubWVudS1pY29uLXRyaWdnZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBwb2ludGVyLWV2ZW50czogYXV0bztcclxuICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4ubWVudS1pY29uLXdyYXBwZXIgLm1lbnUtaWNvbi10cmlnZ2VyOmhvdmVyLFxyXG4ubWVudS1pY29uLXdyYXBwZXIgLm1lbnUtaWNvbi10cmlnZ2VyOmZvY3VzIHtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbn1cclxuXHJcbi5tZW51LWljb24td3JhcHBlcntcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgei1pbmRleDogMTAwO1xyXG59XHJcblxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqIEdlbmVyYXRlZCBieSBBbmltaXN0YSBvbiAyMDE5LTYtNiAxNjo0Mzo0MFxyXG4gKiB3OiBodHRwOi8vYW5pbWlzdGEubmV0LCB0OiBAY3NzYW5pbWlzdGFcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuLyoqXHJcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogYW5pbWF0aW9uIHN3aW5nLWluLXRvcC1iY2tcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKi9cclxuXHJcbkBrZXlmcmFtZXMgc3dpbmctaW4tdG9wLWJjayB7XHJcbiAgICAwJSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGVYKDcwZGVnKTtcclxuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuICAgIH1cclxuICAgIDEwMCUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlWCgwZGVnKTtcclxuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbkBrZXlmcmFtZXMgc3dpbmctb3V0LXRvcC1iY2sge1xyXG4gICAgMCUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlWCgwZGVnKTtcclxuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgIH1cclxuICAgIDEwMCUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlWCgtOTBkZWcpO1xyXG4gICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IHRvcDtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuLnN3aW5nLWluLXRvcC1iY2sge1xyXG4gICAgYW5pbWF0aW9uOiBzd2luZy1pbi10b3AtYmNrIC40cyBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyMCwgMS4yNzUpIGJvdGg7XHJcbiAgICBhbmltYXRpb24tZGVsYXk6IC42cztcclxufVxyXG5cclxuLnN3aW5nLW91dC10b3AtYmNrIHtcclxuICAgIGFuaW1hdGlvbjogc3dpbmctb3V0LXRvcC1iY2sgLjI1cyBjdWJpYy1iZXppZXIoMC42MDAsIC0wLjI4MCwgMC43MzUsIDAuMDQ1KSBib3RoO1xyXG59IiwiLmhlcm97XHJcbiAgICBoZWlnaHQ6IDc1dmg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gICAgJl9faW1hZ2V7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgbGVmdDogMDtcclxuXHJcbiAgICAgICAgJiBpbWd7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICAmX19jb250ZW50e1xyXG4gICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgICAgbWFyZ2luOiAyZW07XHJcbiAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RleHR7XHJcbiAgICAgICAgICAgIHRleHQtc2hhZG93OiAycHggMnB4IDEwcHggcmdiYShibGFjaywgLjQpO1xyXG5cclxuICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogM2VtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLmJhbm5lcntcclxuICAgIGhlaWdodDogNzV2aDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAgICZfX2ltYWdle1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fY29udGVudHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gICAgICAgICZfX3RpdGxle1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgdGV4dC1zaGFkb3c6IDJweCAycHggMTBweCByZ2JhKGJsYWNrLCAuMjUpO1xyXG5cclxuXHJcbiAgICAgICAgICAgICYgaDIsICYgaDN7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IC41ZW07XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwO1xyXG5cclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDc1JTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJiBoMntcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMi41ZW07XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYgaDN7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuNWVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwibmF2LmJyZWFkY3J1bWJ7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB3aWR0aDogNzUlO1xyXG4gICAgbWFyZ2luOiAxZW0gYXV0byAwIGF1dG87XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcblxyXG4gICAgJiB1bHtcclxuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuXHJcbiAgICAgICAgJiBsaXtcclxuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lO1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDFlbTtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiQmFsb28gQmhhaW5hXCIsIGN1cnNpdmU7XHJcblxyXG4gICAgICAgICAgICAmOjphZnRlcntcclxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICdcXFxcJztcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogLjJlbSAwIDAgLjJlbTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJjpsYXN0LWNoaWxkOjphZnRlcntcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYgYXtcclxuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi5zZWN0aW9ue1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuXHJcbiAgICAmX190aXRsZXtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgICAgICZfX2hpZ2hsaWdodCB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG5cclxuICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogbm93cmFwO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmIGgye1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyLjVlbTtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogMCAwIC4yNWVtO1xyXG5cclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwIDAgMWVtOztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJjo6YmVmb3JlLCAmOjphZnRlciB7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogNHB4O1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDcwJTtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogMCAuNWVtO1xyXG5cclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDhlbTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAkbGlnaHQtYmx1ZSwgJGRhcmstYmx1ZSk7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBhdExhcmdle1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmOjphZnRlciB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoLTQ1ZGVnLCAkbGlnaHQtYmx1ZSwgJGRhcmstYmx1ZSk7XHJcblxyXG4gICAgICAgICAgICB9XHJcblxyXG5cclxuXHJcbiAgICAgICAgICAgICYgcCB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmLS1vcmFuZ2Uge1xyXG5cclxuICAgICAgICAgICAgICAgICY6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICRsaWdodC1vcmFuZ2UsICRkYXJrLW9yYW5nZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAmOjphZnRlciB7XHJcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KC00NWRlZywgJGxpZ2h0LW9yYW5nZSwgJGRhcmstb3JhbmdlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYtLWdyZWVuIHtcclxuXHJcbiAgICAgICAgICAgICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAkbGlnaHQtZ3JlZW4sICRkYXJrLWdyZWVuKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoLTQ1ZGVnLCAkbGlnaHQtZ3JlZW4sICRkYXJrLWdyZWVuKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYtLW5vLWRlY29yYXRvcjo6YmVmb3JlLFxyXG4gICAgICAgICAgICAmLS1uby1kZWNvcmF0b3I6OmFmdGVye1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fZGVzY3JpcHRpb257XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgdG9wOiAxZW07XHJcbiAgICAgICAgICAgIHdpZHRoOiA5NSU7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgICAgICB0b3A6IC0yZW07XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufSIsIi5kaXZpZGVye1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXJnaW46IDNlbSAwO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cclxuICAgICY6OmJlZm9yZXtcclxuICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICBoZWlnaHQ6IDJweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAkbGlnaHQtYmx1ZSwgJGRhcmstYmx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tb3JhbmdlOjpiZWZvcmV7XHJcbiAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAkbGlnaHQtb3JhbmdlLCAkZGFyay1vcmFuZ2UpO1xyXG4gICAgfVxyXG5cclxuICAgICYtLXdoaXRlOjpiZWZvcmV7XHJcbiAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICB9XHJcbn0iLCIudG9wX2Rlc3RpbmF0aW9uc3tcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHJcbiAgICAmX19wbGFjZXN7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBhdExhcmdle1xyXG4gICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fcGxhY2V7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBtYXJnaW46IDEuNWVtIDA7XHJcbiAgICAgICAgICAgIG1heC1oZWlnaHQ6IDc1dmg7XHJcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDUwdmg7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDNlbSAwO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDQ4JTtcclxuICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGF0WExhcmdle1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAzZW0gMDtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAyMyU7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICY6aG92ZXIgaW1ne1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJjo6YmVmb3Jle1xyXG4gICAgICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIHotaW5kZXg6IDA7XHJcbiAgICAgICAgICAgICAgICBsZWZ0OiAtMTBweDtcclxuICAgICAgICAgICAgICAgIHRvcDogLTEwcHg7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICRsaWdodC1ibHVlLCAkZGFyay1ibHVlIDIwJSwgdHJhbnNwYXJlbnQpO1xyXG5cclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogLTE1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAtMTVweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJi0tb3JhbmdlOjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICRsaWdodC1vcmFuZ2UsICRkYXJrLW9yYW5nZSAyMCUsIHRyYW5zcGFyZW50KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJi0tZ3JlZW46OmJlZm9yZXtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgJGxpZ2h0LWdyZWVuLCAkZGFyay1ncmVlbiAyMCUsIHRyYW5zcGFyZW50KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJl9faW1hZ2Uge1xyXG4gICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuXHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBhdFhMYXJnZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWluLWhlaWdodDogNjB2aDtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmID4gZGl2e1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmIGltZyB7XHJcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC41cyBlYXNlLWluLW91dDtcclxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIGF0WExhcmdlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IGF1dG87XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJl9fdGV4dCB7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwIDUlO1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgei1pbmRleDogMjtcclxuICAgICAgICAgICAgICAgIHRleHQtc2hhZG93OiAzcHggM3B4IDEwcHggcmdiYShibGFjaywgLjUpO1xyXG5cclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAxZW07XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJiBzcGFuIHtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICRmb250LXRpdGxlcztcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDJlbTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmIHAge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCIuYWN0aXZpdHkge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXJnaW46IC41ZW0gLjVlbTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICBAaW5jbHVkZSBhdExhcmdle1xyXG4gICAgICAgIHdpZHRoOiAzMSU7XHJcbiAgICB9XHJcblxyXG4gICAgJjpob3ZlcntcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcblxyXG4gICAgICAgICYgaW1ne1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2ltYWdle1xyXG4gICAgICAgIGhlaWdodDogNDB2aDtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDJweCAycHggMTBweCByZ2JhKGJsYWNrLCAuMik7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAgICAgJiBpbWd7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuM3MgZWFzZS1pbi1vdXQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICAmX19jb250ZW50e1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB0b3A6IC0uNzVlbTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgICAgICBib3gtc2hhZG93OiAycHggMnB4IDEwcHggcmdiYShibGFjaywgLjIpO1xyXG4gICAgICAgIHBhZGRpbmc6IC41ZW07XHJcbiAgICAgICAgd2lkdGg6IDk1JTtcclxuICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBhdExhcmdle1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxZW07XHJcbiAgICAgICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19wcmljZXtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICRsaWdodC1ibHVlLCAkZGFyay1ibHVlKTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoNTAlLCAtNTAlKTtcclxuICAgICAgICAgICAgdG9wOiAtLjVlbTtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICByaWdodDogLjVlbTtcclxuICAgICAgICAgICAgd2lkdGg6IDMuNzVlbTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAzLjc1ZW07XHJcblxyXG4gICAgICAgICAgICAmIHNwYW57XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAuOTVlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fYWN0aW9uc3tcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB3aWR0aDogYXV0bztcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuXHJcbiAgICAgICAgICAgICZfX2FkZHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAyZW07XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDJlbTtcclxuICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICAgICAgICAgICAgICAmOjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fdGl0bGV7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fZGVzY3JpcHRpb257XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgICAgICAgICAgICYgcHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogLjI1ZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJAa2V5ZnJhbWVzIGxvYWRpbmdfZG90c19hbmltYXRpb24ge1xyXG4gICAgNTAlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICB9XHJcbiAgICAxMDAlIHtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgfVxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGxvYWRpbmdfZG90c19hbmltYXRpb25fX3dhaXQge1xyXG4gICAgNTAlIHtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG4gICAgMTAwJSB7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgIH1cclxufVxyXG5cclxuLmxvYWRpbmdfZG90cyB7XHJcbiAgICBoZWlnaHQ6IDJlbTtcclxuICAgIG1hcmdpbjogLjVlbTtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4zcyBlYXNlLWluLW91dDtcclxuXHJcbiAgICAmICp7XHJcbiAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIH1cclxuXHJcbiAgICAmIC5kb3Qge1xyXG4gICAgICAgIHdpZHRoOiAxLjVlbTtcclxuICAgICAgICBoZWlnaHQ6IDEuNWVtO1xyXG4gICAgICAgIG1hcmdpbjogMCBjYWxjKDEuNWVtIC8gMik7XHJcbiAgICAgICAgYm9yZGVyOiBjYWxjKDEuNWVtIC8gNSkgc29saWQgJGxpZ2h0LWJsdWU7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7XHJcbiAgICAgICAgYW5pbWF0aW9uOiBsb2FkaW5nX2RvdHNfYW5pbWF0aW9uIDFzIGVhc2UgaW5maW5pdGUgMHM7XHJcblxyXG4gICAgICAgICY6bnRoLWNoaWxkKDEpIHtcclxuICAgICAgICAgICAgYW5pbWF0aW9uLWRlbGF5OiBjYWxjKDMwMG1zICogMSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmOm50aC1jaGlsZCgyKSB7XHJcbiAgICAgICAgICAgIGFuaW1hdGlvbi1kZWxheTogY2FsYygzMDBtcyAqIDIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjpudGgtY2hpbGQoMykge1xyXG4gICAgICAgICAgICBhbmltYXRpb24tZGVsYXk6IGNhbGMoMzAwbXMgKiAzKTtcclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtLXZpc2libGV7XHJcbiAgICAgICAgb3BhY2l0eTogMSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG59XHJcblxyXG4iLCJAa2V5ZnJhbWVzIHNob3dCYXIge1xyXG4gICAgMCV7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKGNhbGMoIDEwMCUgLSAzZW0gKSk7XHJcbiAgICB9XHJcbiAgICA0MCV7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDAlKTtcclxuICAgIH1cclxuICAgIDYwJXtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCUpO1xyXG4gICAgfVxyXG4gICAgMTAwJXtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoY2FsYyggMTAwJSAtIDNlbSApKTtcclxuICAgIH1cclxufVxyXG5cclxuQGtleWZyYW1lcyBzaG93QWN0aXZpdHlJdGVtIHtcclxuICAgIDAle1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgfVxyXG4gICAgMTAwJXtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbi5jYXJ0X2JhcntcclxuICAgIHdpZHRoOiAxMDB2dztcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDJweDtcclxuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDJweDtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIHotaW5kZXg6IDI7XHJcbiAgICBwYWRkaW5nOiAuMjVlbTtcclxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiYSgkbGlnaHQtYmx1ZSwgLjk1KSwgcmdiYSgkZGFyay1ibHVlLCAuOTUpKTtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEod2hpdGUsIC45KTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKGNhbGMoIDEwMCUgLSAzZW0gKSk7XHJcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjNzIGVhc2UtaW4tb3V0O1xyXG5cclxuICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgd2lkdGg6IGF1dG87XHJcbiAgICAgICAgbWF4LXdpZHRoOiAzMHZ3O1xyXG4gICAgICAgIHJpZ2h0OiAyZW07XHJcbiAgICB9XHJcblxyXG4gICAgJjpob3ZlcntcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tdmlzaWJsZXtcclxuICAgICAgICBhbmltYXRpb246IHNob3dCYXIgMy41cyBlYXNlLWluLW91dCAxO1xyXG4gICAgfVxyXG5cclxuICAgICZfX3RpdGxle1xyXG4gICAgICAgIG1hcmdpbjogLjI1ZW0gYXV0bztcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHdoaXRlO1xyXG4gICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHJcbiAgICAgICAgJl9faWNvbntcclxuICAgICAgICAgICAgd2lkdGg6IDJlbTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmIGg0e1xyXG4gICAgICAgICAgICBtYXJnaW46IC41ZW0gMWVtO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgc3BhbntcclxuICAgICAgICAgICAgcGFkZGluZzogLjVlbTtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDJlbTtcclxuICAgICAgICAgICAgd2lkdGg6IDJlbTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCRjb2xvci15ZWxsb3ctbGlnaHRlciwgJGNvbG9yLXllbGxvdy1saWdodCk7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkJhbG9vIEJoYWluYVwiLCBjdXJzaXZlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19jb250ZW50e1xyXG4gICAgICAgIHBhZGRpbmc6IDFlbTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuXHJcbiAgICAgICAgJl9fYWN0aXZpdGllc3tcclxuICAgICAgICAgICAgbWF4LWhlaWdodDogMzB2aDtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICBvdmVyZmxvdy15OiBhdXRvO1xyXG5cclxuICAgICAgICAgICAgJl9faXRlbXtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogLjNzIGVhc2UtaW4gMSBzaG93QWN0aXZpdHlJdGVtIDtcclxuXHJcbiAgICAgICAgICAgICAgICAmX19wcm90b3R5cGV7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmIGltZ3tcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMmVtO1xyXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMmVtO1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBoNXtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmU7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDFlbTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmX19kcm9we1xyXG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgICAgICByaWdodDogM2VtO1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxLjI1ZW07XHJcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxLjI1ZW07XHJcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAmOmJlZm9yZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICYgc3Zne1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RleHR7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIG1hcmdpbjogLjVlbSAwO1xyXG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcblxyXG4gICAgICAgICAgICAmIHB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2J1dHRvbntcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG5cclxuICAgICAgICAgICAgJiBhe1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwIC4yNWVtO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYgW2RhdGEtc2hvdz0nZW1wdHknXXtcclxuICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGhlaWdodDogMDtcclxuICAgICAgICB3aWR0aDogMDtcclxuICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgIH1cclxuXHJcbiAgICAmLS1pbml0aWFse1xyXG5cclxuICAgICAgICAmIFtkYXRhLXNob3c9J25vLWVtcHR5J117XHJcbiAgICAgICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDA7XHJcbiAgICAgICAgICAgIHdpZHRoOiAwO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYgW2RhdGEtc2hvdz0nZW1wdHknXXtcclxuICAgICAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcclxuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgICAgICB3aWR0aDogYXV0bztcclxuICAgICAgICAgICAgei1pbmRleDogYXV0bztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG4iLCIuZm9vdGVye1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAkY29sb3ItYmx1ZS1saWdodCwkY29sb3ItYmx1ZS1kYXJrKTtcclxuICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XHJcblxyXG4gICAgJl9fYmFubmVye1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogNzV2aDtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgICAgICZfX2ltYWdle1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19jb250ZW50e1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gICAgICAgICAgICAmX190aXRsZXN7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHRleHQtc2hhZG93OiAycHggMnB4IDEwcHggcmdiYShibGFjaywgLjI1KTtcclxuXHJcbiAgICAgICAgICAgICAgICAmIGgyLCAmIGgze1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IC41ZW07XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmIGgye1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMi41ZW07XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJiBoM3tcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuNWVtO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbnRlbnR7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgcGFkZGluZzogLjVlbTtcclxuICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgcGFkZGluZzogMmVtIDJlbSAuNWVtIDJlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2xpbmtze1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcblxyXG4gICAgICAgICAgICAmX19jb2x1bW57XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNTAlO1xyXG5cclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGF0TGFyZ2V7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDIzJTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmOm50aC1jaGlsZCgxKXtcclxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogMTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICY6bnRoLWNoaWxkKDIpe1xyXG4gICAgICAgICAgICAgICAgICAgIG9yZGVyOiAyO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBhdExhcmdle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvcmRlcjogMztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAmOm50aC1jaGlsZCgzKXtcclxuICAgICAgICAgICAgICAgICAgICBvcmRlcjogMztcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDI7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgJjpudGgtY2hpbGQoNCl7XHJcbiAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJl9fdGl0bGV7XHJcbiAgICAgICAgICAgICAgICAgICAgJiBhe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICYgdWx7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC4yNWVtO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAmIGxpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAuMjVlbSAwO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgJiBhe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19pbmZvc3tcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG5cclxuICAgICAgICAgICAgJl9fY29sdW1uIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA0OCU7XHJcblxyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjUlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICY6bGFzdC1jaGlsZHtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgYXRMYXJnZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDI1JTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2FnYntcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgJiBhe1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19jb3B5cmlnaHR7XHJcbiAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmX19tYWRlLWJ5e1xyXG4gICAgICAgICAgICB3aWR0aDogYXV0bztcclxuXHJcbiAgICAgICAgICAgICYgYXtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19zb2NpYWwtbmV0d29ya3N7XHJcbiAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW46IGF1dG8gMmVtO1xyXG5cclxuICAgICAgICAgICAgJiB1bHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuXHJcbiAgICAgICAgICAgICAgICAmIGxpe1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMCAuMjVlbTtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgJiBhe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAmIHN2Z3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyZW07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDJlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19iYWNrZ3JvdW5kLWltYWdle1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgei1pbmRleDogMDtcclxuICAgIH1cclxufSIsIi50cmF2ZWwtb3B0aW9uc3tcclxuICAgIG1hcmdpbi1ib3R0b206IDJlbTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgICAmX19ncmlke1xyXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogICAgXCJpbWcxIGltZzZcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaW1nMiBpbWc2XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImltZzkgaW1nOVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpbWcxMCBpbWcxMFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpbWczIGltZzNcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaW1nNCBpbWcxMVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpbWc1IGltZzcgXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImltZzUgaW1nOFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpbWcxMiBpbWcxNFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpbWcxMyBpbWcxNFwiO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMzN2aCAzM3ZoIDMzdmggMzN2aCAzM3ZoIDMzdmggMzN2aCAzM3ZoIDMzdmggMzN2aDtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgZ3JpZC1nYXA6IC4xNWVtO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBhdExhcmdle1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiAgICBcImltZzEgaW1nNiBpbWc5IGltZzlcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImltZzIgaW1nNiBpbWcxMCBpbWcxMFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaW1nMyBpbWczIGltZzMgaW1nM1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaW1nNCBpbWc0IGltZzExIGltZzExXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpbWc1IGltZzcgaW1nMTIgaW1nMTRcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImltZzUgaW1nOCBpbWcxMyBpbWcxNFwiO1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDQwdmggNDB2aCA0MHZoIDQwdmg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnIgMWZyO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2l0ZW17XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgICAgICAgICAmIGltZ3tcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19ncmlkX292ZXJsYXkge1xyXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXCJzZWN0aW9uMSBzZWN0aW9uMVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWN0aW9uMSBzZWN0aW9uMVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWN0aW9uMiBzZWN0aW9uMlwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWN0aW9uMiBzZWN0aW9uMlwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWN0aW9uMyBzZWN0aW9uM1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWN0aW9uMyBzZWN0aW9uM1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWN0aW9uNCBzZWN0aW9uNFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWN0aW9uNCBzZWN0aW9uNFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWN0aW9uNSBzZWN0aW9uNVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWN0aW9uNSBzZWN0aW9uNVwiO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMzN2aCAzM3ZoIDMzdmggMzN2aCAzM3ZoIDMzdmggMzN2aCAzM3ZoIDMzdmggMzN2aDtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XHJcbiAgICAgICAgZ3JpZC1nYXA6IC4xNWVtO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBhdExhcmdle1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcInNlY3Rpb24xIHNlY3Rpb24xIHNlY3Rpb24yIHNlY3Rpb24yXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInNlY3Rpb24xIHNlY3Rpb24xIHNlY3Rpb24yIHNlY3Rpb24yXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInNlY3Rpb24zIHNlY3Rpb24zIHNlY3Rpb24zIHNlY3Rpb24zXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInNlY3Rpb24zIHNlY3Rpb24zIHNlY3Rpb24zIHNlY3Rpb24zXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInNlY3Rpb240IHNlY3Rpb240IHNlY3Rpb241IHNlY3Rpb241XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInNlY3Rpb240IHNlY3Rpb240IHNlY3Rpb241IHNlY3Rpb241XCI7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogNDB2aCA0MHZoIDQwdmggNDB2aDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmciAxZnI7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmIGEge1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAzZW07XHJcbiAgICAgICAgICAgIHRleHQtc2hhZG93OiAycHggMnB4IDEwcHggcmdiYShibGFjaywgLjI1KTtcclxuXHJcblxyXG4gICAgICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICAgICAgJiA+IGRpdiB7XHJcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJiBkaXYge1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkbGlnaHQtYmx1ZSwgLjUpO1xyXG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuM3MgZWFzZS1pbi1vdXQ7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufSJdLCJzb3VyY2VSb290IjoiIn0=*/